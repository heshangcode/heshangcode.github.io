<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>heshang</title>
  <icon>https://www.gravatar.com/avatar/ff0fad28696a2c137c9f67b2f18f359f</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://heshangcode.coding.me/"/>
  <updated>2018-09-03T15:04:18.675Z</updated>
  <id>http://heshangcode.coding.me/</id>
  
  <author>
    <name>和尚</name>
    <email>914727235@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring学习笔记（十五）Spring事务XML版-推荐</title>
    <link href="http://heshangcode.coding.me/2018/09/03/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89Spring%E4%BA%8B%E5%8A%A1XML%E7%89%88-%E6%8E%A8%E8%8D%90/"/>
    <id>http://heshangcode.coding.me/2018/09/03/Spring学习笔记（十五）Spring事务XML版-推荐/</id>
    <published>2018-09-03T12:30:06.000Z</published>
    <updated>2018-09-03T15:04:18.675Z</updated>
    
    <content type="html"><![CDATA[<p>在XML版中完成注解@Transactional的功能</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-项目结构，数据库表跟注解版一样"><a href="#1-项目结构，数据库表跟注解版一样" class="headerlink" title="1.项目结构，数据库表跟注解版一样"></a>1.项目结构，数据库表跟注解版一样</h3><h3 id="2-XML配置"><a href="#2-XML配置" class="headerlink" title="2.XML配置"></a>2.XML配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--5.配置事务管理器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"druidDataSource"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--6.告知哪些方法是需要被事务管理器进行管理的，</span></span><br><span class="line"><span class="comment">等价于注解版，在方法上面写@Transactional</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span> <span class="attr">id</span>=<span class="string">"serviceAdvice"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--哪些方法，也可以设置属性，对应注解版的属性--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"load*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"list*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"find*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"query*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"sel*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"check*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"valid*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"login*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--这是方法都是查询的方法,设置为只读--&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--7.配置AOP和tx:advice配合使用，告知我哪个层次下的方法会被事务管理器进行管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span> <span class="attr">proxy-target-class</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"servicePointCut"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.hs..service.*Service.*(..))"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"serviceAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"servicePointCut"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--8.启动事务注解：告知该方法是事务方法(一个错，其他全部错)，而不是普通方法</span></span><br><span class="line"><span class="comment"> transaction-manager="transactionManager"可以省略</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span> <span class="attr">proxy-target-class</span>=<span class="string">"true"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>意思就是：我监控的是com.hs..service.*Service：service层下以Service结尾的类下的：这些方法</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"load"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"list"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"find"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"query"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"sel"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"check"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"valid"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"login"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--这是方法都是查询的方法,设置为只读--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-其他代码跟注解版一样，只是去掉-Transactional"><a href="#3-其他代码跟注解版一样，只是去掉-Transactional" class="headerlink" title="3.其他代码跟注解版一样，只是去掉@Transactional"></a>3.其他代码跟注解版一样，只是去掉@Transactional</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在XML版中完成注解@Transactional的功能&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（十四）Spring事务</title>
    <link href="http://heshangcode.coding.me/2018/09/03/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89Spring%E4%BA%8B%E5%8A%A1/"/>
    <id>http://heshangcode.coding.me/2018/09/03/Spring学习笔记（十四）Spring事务/</id>
    <published>2018-09-03T08:09:50.000Z</published>
    <updated>2018-09-03T14:55:34.341Z</updated>
    
    <content type="html"><![CDATA[<p>Spring 事务、事务管理、事务管理器、事务的传播性、@Transactional</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-实例引入"><a href="#1-实例引入" class="headerlink" title="1.实例引入"></a>1.实例引入</h3><p>和尚经理跟某个书店沟通业务，王经理有一个需求需要买书的操作(暂时只能让买一本书，使用会员卡)</p><p>需求：买一本书===&gt;需要的步骤</p><p>和尚经理思考：</p><ul><li>查询书的价格</li><li>判断余额是否充足（获取余额的信息）</li><li>会员中的余额 — 书价格</li><li>判断库存是否充足（获取书库存数量）</li><li>库存书的数量 — 1</li></ul><h3 id="2-数据库表"><a href="#2-数据库表" class="headerlink" title="2.数据库表"></a>2.数据库表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">SET FOREIGN_KEY_CHECKS=0;</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Table structure for tx_book</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `tx_book`;</span><br><span class="line">CREATE TABLE `tx_book` (</span><br><span class="line">  `isbn` varchar(255) NOT NULL,</span><br><span class="line">  `book_name` varchar(255) DEFAULT NULL,</span><br><span class="line">  `price` int(11) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`isbn`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Records of tx_book</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">INSERT INTO `tx_book` VALUES (&apos;1001&apos;, &apos;西游记&apos;, &apos;50&apos;);</span><br><span class="line">INSERT INTO `tx_book` VALUES (&apos;1002&apos;, &apos;水浒&apos;, &apos;60&apos;);</span><br><span class="line">INSERT INTO `tx_book` VALUES (&apos;1003&apos;, &apos;三国&apos;, &apos;70&apos;);</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Table structure for tx_book_stock</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `tx_book_stock`;</span><br><span class="line">CREATE TABLE `tx_book_stock` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `isbn` varchar(255) DEFAULT NULL,</span><br><span class="line">  `stock` int(11) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Records of tx_book_stock</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">INSERT INTO `tx_book_stock` VALUES (&apos;1&apos;, &apos;1001&apos;, &apos;10&apos;);</span><br><span class="line">INSERT INTO `tx_book_stock` VALUES (&apos;2&apos;, &apos;1002&apos;, &apos;10&apos;);</span><br><span class="line">INSERT INTO `tx_book_stock` VALUES (&apos;3&apos;, &apos;1003&apos;, &apos;10&apos;);</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Table structure for tx_user</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `tx_user`;</span><br><span class="line">CREATE TABLE `tx_user` (</span><br><span class="line">  `user_id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `account` varchar(255) DEFAULT NULL,</span><br><span class="line">  `balance` int(255) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`user_id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Records of tx_user</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">INSERT INTO `tx_user` VALUES (&apos;1&apos;, &apos;wukong&apos;, &apos;100&apos;);</span><br><span class="line">INSERT INTO `tx_user` VALUES (&apos;2&apos;, &apos;bajie&apos;, &apos;200&apos;);</span><br><span class="line">INSERT INTO `tx_user` VALUES (&apos;3&apos;, &apos;tangseng&apos;, &apos;100&apos;);</span><br></pre></td></tr></table></figure><h3 id="3-项目结构"><a href="#3-项目结构" class="headerlink" title="3.项目结构"></a>3.项目结构</h3><h3 id="4-dao层"><a href="#4-dao层" class="headerlink" title="4.dao层"></a>4.dao层</h3><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BookDao</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 通过书的isbn查看这本书的价格</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> isbn</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">getBookPriceByIsbn</span><span class="params">(String isbn)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 减去用户里的钱</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> price</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">updateUserBalance</span><span class="params">(String account, <span class="keyword">int</span> price)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 减少书的数量</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> isbn</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">updateBookStock</span><span class="params">(String isbn)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查询用户的余额</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">getUserBalanceByAccount</span><span class="params">(String account)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查询书的库存</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> isbn</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">getBookStockByIsbn</span><span class="params">(String isbn)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span> <span class="comment">//&lt;bean id =bookDaoImpl &gt;</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookDaoImpl</span> <span class="keyword">implements</span> <span class="title">BookDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJdbcTemplate</span><span class="params">(JdbcTemplate jdbcTemplate)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.jdbcTemplate = jdbcTemplate;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBookPriceByIsbn</span><span class="params">(String isbn)</span> </span>&#123;</span><br><span class="line">      String sql = <span class="string">"select price from tx_book where isbn=?"</span>;</span><br><span class="line">      <span class="keyword">int</span> price = jdbcTemplate.queryForObject(sql, Integer.class, isbn);</span><br><span class="line">      <span class="keyword">return</span> price;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateUserBalance</span><span class="params">(String account, <span class="keyword">int</span> price)</span> </span>&#123;</span><br><span class="line">      String sql = <span class="string">"update tx_user set balance = balance-? where account = ?"</span>;</span><br><span class="line">      jdbcTemplate.update(sql, price, account);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateBookStock</span><span class="params">(String isbn)</span> </span>&#123;</span><br><span class="line">      String sql = <span class="string">"update tx_book_stock set stock = stock-1 where isbn = ?"</span>;</span><br><span class="line">      jdbcTemplate.update(sql, isbn);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getUserBalanceByAccount</span><span class="params">(String account)</span> </span>&#123;</span><br><span class="line">      String sql = <span class="string">"select balance from tx_user where account=?"</span>;</span><br><span class="line">      <span class="keyword">int</span> balance = jdbcTemplate.queryForObject(sql, Integer.class, account);</span><br><span class="line">      <span class="keyword">return</span> balance;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBookStockByIsbn</span><span class="params">(String isbn)</span> </span>&#123;</span><br><span class="line">      String sql = <span class="string">"select stock from tx_book_stock where isbn=?"</span>;</span><br><span class="line">      <span class="keyword">int</span> stock = jdbcTemplate.queryForObject(sql, Integer.class, isbn);</span><br><span class="line">      <span class="keyword">return</span> stock;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-Service层"><a href="#5-Service层" class="headerlink" title="5.Service层"></a>5.Service层</h3><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OneBookService</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">buyOneBook</span><span class="params">(String account, String isbn)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.BookDao;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span>    <span class="comment">//&lt;bean id = "oneBookServiceImpl" class="xxx"&gt;</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneBookServiceImpl</span> <span class="keyword">implements</span> <span class="title">OneBookService</span> </span>&#123;</span><br><span class="line">   <span class="comment">//建立联系</span></span><br><span class="line">   <span class="meta">@Autowired</span>  <span class="comment">//直接在属性上注解setter方式，也可以在setter方法上注解</span></span><br><span class="line">   <span class="comment">//指明具体的id</span></span><br><span class="line">   <span class="meta">@Qualifier</span>(<span class="string">"bookDaoImpl"</span>)</span><br><span class="line">   <span class="comment">//&lt;property name = "BookDao" ref="bookDaoImpl"&gt;</span></span><br><span class="line">   <span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buyOneBook</span><span class="params">(String account, String isbn)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//1.查询书的价格</span></span><br><span class="line">      <span class="keyword">int</span> price = bookDao.getBookPriceByIsbn(isbn);</span><br><span class="line">      <span class="comment">//2.判断会员余额是否充足</span></span><br><span class="line">      <span class="keyword">int</span> balance = bookDao.getUserBalanceByAccount(account);</span><br><span class="line">      <span class="keyword">if</span> (balance &lt; price) &#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"账号余额不足，请充值"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//3.会员中的余额 - 书价格</span></span><br><span class="line">      bookDao.updateUserBalance(account, price);</span><br><span class="line">      <span class="comment">//4.判断库存数量是否充足</span></span><br><span class="line">      <span class="keyword">int</span> stock = bookDao.getBookStockByIsbn(isbn);</span><br><span class="line">      <span class="keyword">if</span> (stock == <span class="number">0</span>) &#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"书的库存数量不足"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//5.库存书的数量 - 1</span></span><br><span class="line">      bookDao.updateBookStock(isbn);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-测试"><a href="#6-测试" class="headerlink" title="6.测试"></a>6.测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.service.OneBookService;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OneBookServiceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> ApplicationContext ac;</span><br><span class="line">   <span class="keyword">private</span> OneBookService oneBookService;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Before</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">      oneBookService = ac.getBean(<span class="string">"oneBookServiceImpl"</span>, OneBookService.class);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testBuyOneBookTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      oneBookService.buyOneBook(<span class="string">"wukong"</span>, <span class="string">"1001"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时如果把数据库里1001的库存改为0，然后再执行测试，就会发现wukong的钱扣了，但是控制台报错，书的库存数量不足，这样就引入了事务的概念！！</p><h3 id="7-什么是事务？"><a href="#7-什么是事务？" class="headerlink" title="7.什么是事务？"></a>7.什么是事务？</h3><ol><li><p>一个工作单元由多个动作组成，只有动作全部正确的时候才能执行成功，如果有一个动作错了，其他的动作都是无效的（回滚）(事务就是一系列的动作，它们被当做一 个单独的工作单元.这些动作要么全部完成，要么全部不起作用)</p></li><li><p>事务的四个关键属性(ACID)</p><ul><li>原子性(atomicity):事务是一一个原子操作,由一系列动作组成，事务的原子性确保动作要么全部完成要么完全不起作用</li><li>一致性(consistency):一旦所有事务动作完成，事务就被提交，数据和资源就处于一种满足业务规则的一-致性状态中.</li><li>隔离性(isolation):可能有许多事务会同时处理相同的数据，因此每个事物都应该与其他事务隔离开来，防止数据损坏。</li><li>持久性(durability): 一旦事务完成，无论发生什么系统错误，它的结果都不应该受到影响，通常情况下，事务的结果被写到持久化存储器中</li></ul></li></ol><h3 id="8-事务管理"><a href="#8-事务管理" class="headerlink" title="8.事务管理"></a>8.事务管理</h3><p>事务管理就是管理事务，用来确保数据的完整性和一致性.</p><h3 id="9-事务管理器"><a href="#9-事务管理器" class="headerlink" title="9.事务管理器"></a>9.事务管理器</h3><p>就是对事务管理的实现，数据的完整性和一致性（数据库—&gt;数据源），MyBatis使用的是第一种<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuwhab6fdej20xk0hk18o.jpg" alt=""></p><h3 id="10-在XML配置事务，启动事务注解"><a href="#10-在XML配置事务，启动事务注解" class="headerlink" title="10.在XML配置事务，启动事务注解"></a>10.在XML配置事务，启动事务注解</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--5.配置事务管理器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"druidDataSource"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--6.启动事务注解：告知该方法是事务方法(一个错，其他全部错)，而不是普通方法</span></span><br><span class="line"><span class="comment"> transaction-manager="transactionManager"可以省略</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span> <span class="attr">proxy-target-class</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--操作数据库了的xml版本,没注释的是注解版本--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;bean id="bookDaoImpl" class="com.hs.dao.BookDaoImpl"&gt;</span></span><br><span class="line"><span class="comment">   &lt;property name="jdbcTemplate" ref="jdbcTemplate"/&gt;</span></span><br><span class="line"><span class="comment">&lt;/bean&gt;--&gt;</span></span><br></pre></td></tr></table></figure><p>在方法前面加入注解@Transactional，或者类前面加这个注解，告之这个类的方法都是事务方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//点石成金，标识这个方法是事务方法</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br></pre></td></tr></table></figure><p>再buyOneBook方法前面加入这个注解，再继续测试，就会发现，报书库存不足，但是wukong的钱没有扣。</p><h3 id="11-Transactional的属性"><a href="#11-Transactional的属性" class="headerlink" title="11.@Transactional的属性"></a>11.@Transactional的属性</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@Transactional</span></span><br><span class="line">   <span class="comment">//@Transactional(readOnly = true) //只读，一般只做查询操作使用</span></span><br><span class="line">   <span class="comment">//@Transactional(noRollbackForClassName = "RuntimeException") //遇见这个异常，数据就不会回滚</span></span><br><span class="line"><span class="comment">// @Transactional(propagation = Propagation.REQUIRES_NEW)</span></span><br><span class="line"><span class="comment">// @Transactional(propagation = Propagation.REQUIRED)</span></span><br></pre></td></tr></table></figure><h3 id="12-事务的传播性"><a href="#12-事务的传播性" class="headerlink" title="12.事务的传播性"></a>12.事务的传播性</h3><p>在上面的条件下，新增加如果买多本书这个功能</p><p>事务的传播性：当你事务方法被另一个事务方法调用的时候，需要检查其事务的传播性</p><ul><li><p>可能延续调用方法的事务</p></li><li><p>也可能开启新的事务</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuwmgitmyhj20wn0h8h10.jpg" alt=""></p></li></ul><p>买多本书的接口：</p><p>MoreBookService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MoreBookService</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 买多本书</span></span><br><span class="line"><span class="comment">    * String... 是可变长度参数列表，可以存多个</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> isbns</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">buyMoreBook</span><span class="params">(String account, String... isbns)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MoreBookServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MoreBookServiceImpl</span> <span class="keyword">implements</span> <span class="title">MoreBookService</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> OneBookService oneBookService;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Transactional</span>  <span class="comment">//包含在这里面的都是事务方法,事务的传播性</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buyMoreBook</span><span class="params">(String account, String... isbns)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (isbns != <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="keyword">for</span> (String isbn : isbns) &#123;</span><br><span class="line">            oneBookService.buyOneBook(account,isbn);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>buyMoreBook这个事务方法，调用了buyOneBook这个事务方法，然后检查buyOneBook这个事务方法的传播性，在这个方法上面写@Transactional，默认为延续调用方法的事务，下面的注解在被调用的事务方法上写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@Transactional(propagation = Propagation.REQUIRES_NEW)//本方法延续调用方法的事务</span></span><br><span class="line"><span class="comment">// @Transactional(propagation = Propagation.REQUIRED)//本方法开启一个新的事务</span></span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuwmh6sjbaj20xb0hldq5.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuwmhfwi1bj20yz0i97fu.jpg" alt=""></p><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.service.MoreBookService;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MoreBookServiceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> ApplicationContext ac;</span><br><span class="line">   <span class="keyword">private</span> MoreBookService moreBookService;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Before</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">      moreBookService = ac.getBean(<span class="string">"moreBookServiceImpl"</span>, MoreBookService.class);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testBuyMoreBookMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      moreBookService.buyMoreBook(<span class="string">"wukong"</span>,<span class="string">"1003"</span>,<span class="string">"1001"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring 事务、事务管理、事务管理器、事务的传播性、@Transactional&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（十三）JdbcTemplate工具类的使用</title>
    <link href="http://heshangcode.coding.me/2018/09/03/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89JdbcTemplate%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://heshangcode.coding.me/2018/09/03/Spring学习笔记（十三）JdbcTemplate工具类的使用/</id>
    <published>2018-09-03T07:40:10.000Z</published>
    <updated>2018-09-03T08:05:48.406Z</updated>
    
    <content type="html"><![CDATA[<p>JdbcTemplate就是Spring框架给我们封装好的简单对数据库操作的工具类，返回Map数据，返回List_Map数据，返回一个值，返回一个对象，返回一个List&lt;对象&gt;，添加修改删除</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-介绍JdbcTemplate工具类"><a href="#1-介绍JdbcTemplate工具类" class="headerlink" title="1.介绍JdbcTemplate工具类"></a>1.介绍JdbcTemplate工具类</h3><p>Spring是一个IoC和AOP的容器框架，并且它是一站式开源框架<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuweenpogzj20ue0lodqy.jpg" alt="">ORM是我们学过的MyBatis，JdbcTemplate就是Spring框架给我们封装好的简单对数据库操作的工具类，需要这个spring-jdbc.jar</p><h3 id="2-sql文件"><a href="#2-sql文件" class="headerlink" title="2.sql文件"></a>2.sql文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">SET FOREIGN_KEY_CHECKS=0;</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Table structure for oa_user</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `oa_user`;</span><br><span class="line">CREATE TABLE `oa_user` (</span><br><span class="line">  `user_id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `user_name` varchar(255) DEFAULT NULL,</span><br><span class="line">  `sex` varchar(255) DEFAULT NULL,</span><br><span class="line">  `money` decimal(7,2) DEFAULT NULL,</span><br><span class="line">  `birthday` date DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`user_id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Records of oa_user</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;1&apos;, &apos;悟空&apos;, &apos;男&apos;, &apos;888.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;2&apos;, &apos;八戒&apos;, &apos;男&apos;, &apos;999.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;3&apos;, &apos;天蓬元帅&apos;, &apos;女&apos;, &apos;1000.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;4&apos;, &apos;悟能&apos;, &apos;男&apos;, &apos;666.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;5&apos;, &apos;法悟法&apos;, &apos;女&apos;, &apos;544.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;6&apos;, &apos;悟&apos;, &apos;女&apos;, &apos;562.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;7&apos;, &apos;悟&apos;, &apos;女&apos;, &apos;562.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;14&apos;, &apos;嫦娥&apos;, &apos;女&apos;, &apos;1213.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;15&apos;, &apos;月兔&apos;, &apos;女&apos;, &apos;2113.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;16&apos;, &apos;和尚&apos;, &apos;男&apos;, &apos;455.00&apos;, &apos;2018-08-05&apos;);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;18&apos;, &apos;沙僧&apos;, &apos;男&apos;, &apos;455.00&apos;, &apos;2018-08-05&apos;);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;19&apos;, &apos;唐僧&apos;, &apos;男&apos;, &apos;220.00&apos;, &apos;2018-08-09&apos;);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;20&apos;, &apos;唐僧&apos;, &apos;男&apos;, &apos;220.00&apos;, &apos;2018-08-09&apos;);</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Table structure for skill</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `skill`;</span><br><span class="line">CREATE TABLE `skill` (</span><br><span class="line">  `skill_id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `skill_name` varchar(255) DEFAULT NULL,</span><br><span class="line">  `num` int(11) DEFAULT NULL,</span><br><span class="line">  `fk_teacher_id` int(11) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`skill_id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Records of skill</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">INSERT INTO `skill` VALUES (&apos;2&apos;, &apos;JS&apos;, &apos;75&apos;, null);</span><br><span class="line">INSERT INTO `skill` VALUES (&apos;7&apos;, &apos;CSS&apos;, &apos;66&apos;, null);</span><br><span class="line">INSERT INTO `skill` VALUES (&apos;8&apos;, &apos;java&apos;, &apos;66&apos;, null);</span><br><span class="line">INSERT INTO `skill` VALUES (&apos;9&apos;, &apos;vue&apos;, &apos;56&apos;, &apos;9999&apos;);</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Table structure for sys_role</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `sys_role`;</span><br><span class="line">CREATE TABLE `sys_role` (</span><br><span class="line">  `role_id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `role_name` varchar(32) DEFAULT NULL,</span><br><span class="line">  `role_key` varchar(32) DEFAULT NULL,</span><br><span class="line">  `status` int(1) DEFAULT &apos;1&apos; COMMENT &apos;1可用 -1禁用&apos;,</span><br><span class="line">  PRIMARY KEY (`role_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Records of sys_role</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">INSERT INTO `sys_role` VALUES (&apos;-100&apos;, &apos;超级管理员&apos;, &apos;ADMIN&apos;, &apos;1&apos;);</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Table structure for sys_user</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `sys_user`;</span><br><span class="line">CREATE TABLE `sys_user` (</span><br><span class="line">  `user_id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `account` varchar(32) NOT NULL,</span><br><span class="line">  `password` varchar(128) NOT NULL,</span><br><span class="line">  `user_name` varchar(32) DEFAULT &apos;&apos;,</span><br><span class="line">  `status` int(1) NOT NULL DEFAULT &apos;1&apos; COMMENT &apos;1可用 -1删除  2禁用&apos;,</span><br><span class="line">  `login_time` datetime DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">  `ip` varchar(128) DEFAULT NULL,</span><br><span class="line">  `fk_role_id` int(11) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`user_id`),</span><br><span class="line">  KEY `fk_role_id` (`fk_role_id`),</span><br><span class="line">  CONSTRAINT `sys_user_ibfk_1` FOREIGN KEY (`fk_role_id`) REFERENCES `sys_role` (`role_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">-- Records of sys_user</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line">INSERT INTO `sys_user` VALUES (&apos;-999&apos;, &apos;super&apos;, &apos;super&apos;, &apos;唐僧&apos;, &apos;1&apos;, &apos;2018-07-28 18:47:39&apos;, null, &apos;-100&apos;);</span><br><span class="line">INSERT INTO `sys_user` VALUES (&apos;-888&apos;, &apos;admin&apos;, &apos;admin&apos;, &apos;悟空&apos;, &apos;1&apos;, &apos;2018-07-03 18:48:21&apos;, null, &apos;-100&apos;);</span><br></pre></td></tr></table></figure><h3 id="3-实例化该工具类"><a href="#3-实例化该工具类" class="headerlink" title="3.实例化该工具类"></a>3.实例化该工具类</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> 赋值/&gt;</span></span><br><span class="line">    ------</span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-配置数据源"><a href="#4-配置数据源" class="headerlink" title="4.配置数据源"></a>4.配置数据源</h3><p>数据源就是连接数据，而以后工作当中我们推荐使用“连接池”，</p><h4 id="什么是连接池？"><a href="#什么是连接池？" class="headerlink" title="什么是连接池？"></a>什么是连接池？</h4><p>我的理解为预先建立好一堆Connection，使用时候从池中获取，不适应不是销毁而是把连接再次放回到池中</p><h4 id="连接池的工作原理？"><a href="#连接池的工作原理？" class="headerlink" title="连接池的工作原理？"></a>连接池的工作原理？</h4><p>Java代码如何实现–&gt;Map/List 存Connection</p><h4 id="开源的连接池有哪些？"><a href="#开源的连接池有哪些？" class="headerlink" title="开源的连接池有哪些？"></a>开源的连接池有哪些？</h4><p>C3p0、dbcp、德鲁伊druid(阿里巴巴的)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- destroy-method="close"销毁的方法--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--4.配置数据源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"druidDataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span> <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/cy42_mss"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--5.配置工具类JdbcTemplate--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--setter注入方式--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"druidDataSource"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--构造函数赋值--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--&lt;constructor-arg name="dataSource" ref="druidDataSource"/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-User-java"><a href="#5-User-java" class="headerlink" title="5.User.java"></a>5.User.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> Integer user_id;</span><br><span class="line">   <span class="keyword">private</span> String user_name;</span><br><span class="line">   <span class="keyword">private</span> String sex;</span><br><span class="line">   <span class="comment">//钱用BigDecimal</span></span><br><span class="line">   <span class="keyword">private</span> BigDecimal money;</span><br><span class="line">   <span class="keyword">private</span> Date birthday;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> BigDecimal <span class="title">getMoney</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> money;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMoney</span><span class="params">(BigDecimal money)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.money = money;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Date <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> birthday;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(Date birthday)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> sex;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.sex = sex;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">            <span class="string">"user_id="</span> + user_id +</span><br><span class="line">            <span class="string">", user_name='"</span> + user_name + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">", sex='"</span> + sex + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">", money="</span> + money +</span><br><span class="line">            <span class="string">", birthday="</span> + birthday +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-查询操作-预处理"><a href="#6-查询操作-预处理" class="headerlink" title="6.查询操作(预处理)"></a>6.查询操作(预处理)</h3><h4 id="1-返回Map数据"><a href="#1-返回Map数据" class="headerlink" title="1.返回Map数据"></a>1.返回Map数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.BeanPropertyRowMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.RowMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcTemplateTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> ApplicationContext ac;</span><br><span class="line">   <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Before</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">      jdbcTemplate = ac.getBean(<span class="string">"jdbcTemplate"</span>, JdbcTemplate.class);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 返回Map数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">/*String sql = "select * from oa_user where user_id = 3";</span></span><br><span class="line"><span class="comment">      Map&lt;String, Object&gt; map = this.jdbcTemplate.queryForMap(sql);*/</span></span><br><span class="line">      String sql = <span class="string">"select * from oa_user where user_id = ?"</span>;</span><br><span class="line">      Map&lt;String, Object&gt; map = jdbcTemplate.queryForMap(sql, <span class="number">2</span>);</span><br><span class="line">      System.out.println(map);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-返回List-Map数据"><a href="#2-返回List-Map数据" class="headerlink" title="2.返回List_Map数据"></a>2.返回List_Map数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回List_Map数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   String sql = <span class="string">"select * from oa_user"</span>;</span><br><span class="line">   System.out.println(jdbcTemplate.queryForList(sql));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-返回一个值"><a href="#3-返回一个值" class="headerlink" title="3.返回一个值"></a>3.返回一个值</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回一个值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   String sql = <span class="string">"select count(*) from oa_user"</span>;</span><br><span class="line">   System.out.println(jdbcTemplate.queryForObject(sql, Integer.class));</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-返回一个对象"><a href="#4-返回一个对象" class="headerlink" title="4.返回一个对象"></a>4.返回一个对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回一个对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   String sql = <span class="string">"select * from oa_user where user_id = ?"</span>;</span><br><span class="line">   User user = jdbcTemplate.queryForObject(sql, <span class="comment">/*匿名内部类*/</span><span class="keyword">new</span> RowMapper&lt;User&gt;() &#123;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> User <span class="title">mapRow</span><span class="params">(ResultSet rs, <span class="keyword">int</span> rowNum)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line">         User user = <span class="keyword">new</span> User();</span><br><span class="line">         user.setUser_id(rs.getInt(<span class="string">"user_id"</span>));</span><br><span class="line">         user.setUser_name(rs.getString(<span class="string">"User_name"</span>));</span><br><span class="line">         user.setSex(rs.getString(<span class="string">"sex"</span>));</span><br><span class="line">         user.setMoney(rs.getBigDecimal(<span class="string">"money"</span>));</span><br><span class="line">         user.setBirthday((Date) rs.getObject(<span class="string">"birthday"</span>));</span><br><span class="line">         <span class="keyword">return</span> user;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;, <span class="number">2</span>);</span><br><span class="line">   System.out.println(user);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-返回一个List-lt-对象-gt"><a href="#5-返回一个List-lt-对象-gt" class="headerlink" title="5.返回一个List&lt;对象&gt;"></a>5.返回一个List&lt;对象&gt;</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回一个List&lt;对象&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test05</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   String sql = <span class="string">"select * from oa_user where user_name like concat('%',?,'%')"</span>;</span><br><span class="line">   List&lt;User&gt; userList = jdbcTemplate.query(sql,<span class="comment">/*处理一条一条的数据*/</span><span class="keyword">new</span> UserRowMapper(), <span class="string">"沙僧"</span>);</span><br><span class="line">   System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把匿名内部类提出来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对于外面那个类来说，这是一个内部类，外面那个类对于这个类来说，是外部类</span></span><br><span class="line"><span class="comment"> * 百度什么是内部类和特种？</span></span><br><span class="line"><span class="comment"> * private使这个类只能被这个类使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRowMapper</span> <span class="keyword">implements</span> <span class="title">RowMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> User <span class="title">mapRow</span><span class="params">(ResultSet rs, <span class="keyword">int</span> rowNum)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"---------"</span>);</span><br><span class="line">      User user = <span class="keyword">new</span> User();</span><br><span class="line">      user.setUser_id(rs.getInt(<span class="string">"user_id"</span>));</span><br><span class="line">      user.setUser_name(rs.getString(<span class="string">"User_name"</span>));</span><br><span class="line">      user.setSex(rs.getString(<span class="string">"sex"</span>));</span><br><span class="line">      user.setMoney(rs.getBigDecimal(<span class="string">"money"</span>));</span><br><span class="line">      user.setBirthday((Date) rs.getObject(<span class="string">"birthday"</span>));</span><br><span class="line">      <span class="keyword">return</span> user;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-返回一个List-lt-对象-gt-——自动映射，类属性和查询的字段名字一样"><a href="#6-返回一个List-lt-对象-gt-——自动映射，类属性和查询的字段名字一样" class="headerlink" title="6.返回一个List&lt;对象&gt;——自动映射，类属性和查询的字段名字一样"></a>6.返回一个List&lt;对象&gt;——自动映射，类属性和查询的字段名字一样</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回一个List&lt;对象&gt;——自动映射，类属性和查询的字段名字一样</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test06</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   String sql = <span class="string">"select * from oa_user where user_name like concat('%',?,'%')"</span>;</span><br><span class="line">   List&lt;User&gt; userList = jdbcTemplate.query(sql,<span class="comment">/*处理一条一条的数据，，，&lt;User&gt;可以不用写*/</span><span class="keyword">new</span> BeanPropertyRowMapper&lt;User&gt;(User.class), <span class="string">"沙僧"</span>);</span><br><span class="line">   System.out.println(userList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-添加修改删除"><a href="#7-添加修改删除" class="headerlink" title="7.添加修改删除"></a>7.添加修改删除</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加修改删除</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test07</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   String sql1 = <span class="string">"insert into oa_user(user_name,sex,money,birthday) values(?,?,?,?)"</span>;</span><br><span class="line">   String sql2 = <span class="string">"update oa_user set user_name=?,sex=? where user_id = ?"</span>;</span><br><span class="line">   String sql3 = <span class="string">"delete from oa_user where user_id = ?"</span>;</span><br><span class="line">   <span class="keyword">int</span> num1 = jdbcTemplate.update(sql1, <span class="string">"唐僧"</span>, <span class="string">"男"</span>, <span class="number">220.00</span>, <span class="string">"2018-8-9"</span>);</span><br><span class="line">   <span class="keyword">int</span> num2 = jdbcTemplate.update(sql2, <span class="string">"和尚"</span>, <span class="string">"男"</span>, <span class="number">16</span>);</span><br><span class="line">   <span class="keyword">int</span> num3 = jdbcTemplate.update(sql3, <span class="number">17</span>);</span><br><span class="line">   System.out.println(num1+<span class="string">"--"</span>+num2+<span class="string">"---"</span>+num3);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JdbcTemplate就是Spring框架给我们封装好的简单对数据库操作的工具类，返回Map数据，返回List_Map数据，返回一个值，返回一个对象，返回一个List&amp;lt;对象&amp;gt;，添加修改删除&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（十二）AOP的XML方式cglib代理-重点掌握</title>
    <link href="http://heshangcode.coding.me/2018/09/03/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89AOP%E7%9A%84XML%E6%96%B9%E5%BC%8Fcglib%E4%BB%A3%E7%90%86-%E9%87%8D%E7%82%B9%E6%8E%8C%E6%8F%A1/"/>
    <id>http://heshangcode.coding.me/2018/09/03/Spring学习笔记（十二）AOP的XML方式cglib代理-重点掌握/</id>
    <published>2018-09-03T07:24:09.000Z</published>
    <updated>2018-09-03T07:35:53.361Z</updated>
    
    <content type="html"><![CDATA[<p>切点，切面，如何定义切点，前置、后置、放回、异常、环绕通知的XML版</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-项目结构（jar包跟上个一样）"><a href="#1-项目结构（jar包跟上个一样）" class="headerlink" title="1.项目结构（jar包跟上个一样）"></a>1.项目结构（jar包跟上个一样）</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuwdtftz6vj20800acq5z.jpg" alt=""></p><h3 id="2-核心业务代码"><a href="#2-核心业务代码" class="headerlink" title="2.核心业务代码"></a>2.核心业务代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对外提供的核心业务，完成了加法/减法/乘法运算</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ArithmeticService</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.service.ArithmeticService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 核心代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArithmeticServiceImpl</span> <span class="keyword">implements</span> <span class="title">ArithmeticService</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//核心代码</span></span><br><span class="line">      <span class="keyword">int</span> result = x + y;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = x - y;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = x * y;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = x / y;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-切面"><a href="#3-切面" class="headerlink" title="3.切面"></a>3.切面</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service.aspect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Component</span></span><br><span class="line"><span class="comment">//@Aspect //标记这是切面</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"测试出order属性的作用"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//1.前置通知</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test05</span><span class="params">(JoinPoint jp)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//获取get</span></span><br><span class="line">      System.out.println(<span class="string">"==前置通知=="</span>);</span><br><span class="line">      System.out.println(Arrays.asList(jp.getArgs()));</span><br><span class="line">      System.out.println(jp.getSignature().getName());</span><br><span class="line">      System.out.println(jp.getTarget().getClass().getName());</span><br><span class="line">      System.out.println(<span class="string">"==前置通知=="</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//2.后置通知</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test06</span><span class="params">(JoinPoint jp)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"==后置增强=="</span>);</span><br><span class="line">      System.out.println(Arrays.asList(jp.getArgs()));</span><br><span class="line">      System.out.println(jp.getSignature().getName());</span><br><span class="line">      System.out.println(jp.getTarget().getClass().getName());</span><br><span class="line">      System.out.println(<span class="string">"==后置增强=="</span>);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//3.返回通知</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test07</span><span class="params">(JoinPoint jp, <span class="keyword">int</span> hs)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"==返回通知=="</span>);</span><br><span class="line">      System.out.println(<span class="string">"程序正常运行，正确的运行结果为==&gt;"</span> + hs);</span><br><span class="line">      System.out.println(<span class="string">"==返回通知=="</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//4.异常通知</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test08</span><span class="params">(JoinPoint jp, ArithmeticException hs)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"==异常通知=="</span>);</span><br><span class="line">      System.out.println(<span class="string">"程序运行错误==&gt;"</span> + hs);</span><br><span class="line">      System.out.println(<span class="string">"==异常通知=="</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-XML里切点，切面"><a href="#4-XML里切点，切面" class="headerlink" title="4.XML里切点，切面"></a>4.XML里切点，切面</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:util</span>=<span class="string">"http://www.springframework.org/schema/util"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--1.启动Spring注解--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">context:annotation-config</span>&gt;</span><span class="tag">&lt;/<span class="name">context:annotation-config</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--2.扫描--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.hs"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--Spring提供了多种AOP的实现方式，但是我们只用第三方的AOP标准--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--3.启动AOP注解：false是使用默认的java代理，true是使用CGLIB代理--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> <span class="attr">proxy-target-class</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--4.AOP的XML配置方式,false是使用默认的java代理，true是使用CGLIB代理--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--实例化那个类，在切面引用的时候好用--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logger"</span> <span class="attr">class</span>=<span class="string">"com.hs.service.aspect.Logger"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logger111"</span> <span class="attr">class</span>=<span class="string">"com.hs.service.aspect.Logger"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">aop:config</span> <span class="attr">proxy-target-class</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--定义切点，可以把切点放在外面作为公共的，注意pointcut aspect的顺序，对应注解版的@PointCut(value = "execution(* com.hs..service.*Service.*(..))")--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"servicePointCut"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.hs..service.*Service.*(..))"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--定义切面，对应注解版的@Aspect,order,定义切面的执行顺序，不写默认为从上到下执行--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"logger111"</span> <span class="attr">order</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--定义切点，对应注解版的@PointCut(value = "execution(* com.hs..service.*Service.*(..))")--&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--&lt;aop:pointcut id="servicePointCut" expression="execution(* com.hs..service.*Service.*(..))"/&gt;--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">"test01"</span> <span class="attr">pointcut-ref</span>=<span class="string">"servicePointCut"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--定义切面，对应注解版的@Aspect--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"logger"</span> <span class="attr">order</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--定义切点，对应注解版的@PointCut(value = "execution(* com.hs..service.*Service.*(..))")--&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--&lt;aop:pointcut id="servicePointCut" expression="execution(* com.hs..service.*Service.*(..))"/&gt;--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">"test05"</span> <span class="attr">pointcut-ref</span>=<span class="string">"servicePointCut"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首先得实例化</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logger"</span> <span class="attr">class</span>=<span class="string">"com.hs.service.aspect.Logger"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>切点：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"servicePointCut"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.hs..service.*Service.*(..))"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>切面：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"logger111"</span> <span class="attr">order</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--定义切点，对应注解版的@PointCut(value = "execution(* com.hs..service.*Service.*(..))")--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--&lt;aop:pointcut id="servicePointCut" expression="execution(* com.hs..service.*Service.*(..))"/&gt;--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">"test01"</span> <span class="attr">pointcut-ref</span>=<span class="string">"servicePointCut"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.service.ArithmeticService;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArithmeticServiceTest</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> ArithmeticService arithmeticService;</span><br><span class="line">   <span class="keyword">private</span> ApplicationContext ac;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Before</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">      <span class="keyword">this</span>.arithmeticService = <span class="keyword">this</span>.ac.getBean(<span class="string">"arithmeticServiceImpl"</span>, ArithmeticService.class);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAddMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = <span class="keyword">this</span>.arithmeticService.div(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">      System.out.println(<span class="string">"运行的结果："</span>+ result);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;切点，切面，如何定义切点，前置、后置、放回、异常、环绕通知的XML版&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（十一）AOP的注解方式cglib代理</title>
    <link href="http://heshangcode.coding.me/2018/09/03/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89AOP%E7%9A%84%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8Fcglib%E4%BB%A3%E7%90%86/"/>
    <id>http://heshangcode.coding.me/2018/09/03/Spring学习笔记（十一）AOP的注解方式cglib代理/</id>
    <published>2018-09-03T06:32:16.000Z</published>
    <updated>2018-09-03T07:23:26.851Z</updated>
    
    <content type="html"><![CDATA[<p>JDK动态代理与CGLib动态代理均是实现Spring AOP的基础，切点，切面，如何定义切点，前置、后置、放回、异常、环绕通知</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-切点、切面"><a href="#1-切点、切面" class="headerlink" title="1.切点、切面"></a>1.切点、切面</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuwcdzofnyj20vi0indni.jpg" alt=""></p><ol><li>红色的地方就是切面，增加额外的功能</li><li>连接点+增加功能的位置 = 切点</li></ol><h3 id="2-项目结构"><a href="#2-项目结构" class="headerlink" title="2.项目结构"></a>2.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuwcji3krrj20ac0d978r.jpg" alt=""></p><h3 id="3-jar包"><a href="#3-jar包" class="headerlink" title="3.jar包"></a>3.jar包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aspects --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context-support --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-expression --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-tx --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--新增的jar--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- https://mvnrepository.com/artifact/aopalliance/aopalliance --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>aopalliance<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aopalliance<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjrt --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjrt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-核心配置文件beans-xml"><a href="#4-核心配置文件beans-xml" class="headerlink" title="4.核心配置文件beans.xml"></a>4.核心配置文件beans.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:util</span>=<span class="string">"http://www.springframework.org/schema/util"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--1.启动Spring注解--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">context:annotation-config</span>&gt;</span><span class="tag">&lt;/<span class="name">context:annotation-config</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--2.扫描--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.hs"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--Spring提供了多种AOP的实现方式，但是我们只用第三方的AOP标准方式--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--3.启动AOP注解，false是使用默认的java代理，true是使用CGLIB代理--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> <span class="attr">proxy-target-class</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-核心代码"><a href="#5-核心代码" class="headerlink" title="5.核心代码"></a>5.核心代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对外提供的核心业务，完成了加法/减法/乘法运算</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ArithmeticService</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.service.ArithmeticService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 核心代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArithmeticServiceImpl</span> <span class="keyword">implements</span> <span class="title">ArithmeticService</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//核心代码</span></span><br><span class="line">      <span class="keyword">int</span> result = x + y;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = x - y;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = x * y;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = x / y;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-定义切面"><a href="#6-定义切面" class="headerlink" title="6.定义切面"></a>6.定义切面</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service.aspect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span> <span class="comment">//标记这是切面</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//在你运行方法之前执行，并且监控的是接口的执行Add方法，value可以省略</span></span><br><span class="line">   <span class="meta">@Before</span>(value = <span class="string">"execution(int com.hs.service.ArithmeticService.add(int ,int))"</span>)</span><br><span class="line">   <span class="comment">//这句话的意思，</span></span><br><span class="line">   <span class="comment">//执行返回类型为int，com.hs.service.ArithmeticService接口下的add方法，传递的两个参数类型为int，int</span></span><br><span class="line">   <span class="comment">//简单理解为，接口里写的方法，只是少了变量值   int add(int x, int y);</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"@Before在程序之前运行"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.service.ArithmeticService;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArithmeticServiceTest</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> ArithmeticService arithmeticService;</span><br><span class="line">   <span class="keyword">private</span> ApplicationContext ac;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Before</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">      <span class="keyword">this</span>.arithmeticService = <span class="keyword">this</span>.ac.getBean(<span class="string">"arithmeticServiceImpl"</span>, ArithmeticService.class);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAddMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = <span class="keyword">this</span>.arithmeticService.add(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">      System.out.println(<span class="string">"运行的结果："</span>+ result);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台输出：</p><p>@Before在程序之前运行<br>运行的结果：3</p><h3 id="7-如何定义注解切点说明"><a href="#7-如何定义注解切点说明" class="headerlink" title="7.如何定义注解切点说明"></a>7.如何定义注解切点说明</h3><h4 id="1-使用逻辑运算符"><a href="#1-使用逻辑运算符" class="headerlink" title="1.使用逻辑运算符"></a>1.使用逻辑运算符</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Before</span>(value = <span class="string">"execution(int com.hs.service.ArithmeticService.add(int ,int)) or execution(int com.hs.service.ArithmeticService.sub(int ,int))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   System.out.println(<span class="string">"我可以使用逻辑运算符  &amp;&amp;(and) ||(or)"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-使用通配符——推荐"><a href="#2-使用通配符——推荐" class="headerlink" title="2.使用通配符——推荐"></a>2.使用通配符——推荐</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 比较推荐</span></span><br><span class="line"><span class="comment"> * 在execution表达式中可以使用通配符，但是请注意任意的表达式是 ..</span></span><br><span class="line"><span class="comment"> * 第一个*位置：代表返回任意的数据类型</span></span><br><span class="line"><span class="comment"> * ..表示任意的意思，而不是我们之前学习的**</span></span><br><span class="line"><span class="comment"> * 第二个* 监控的以Service结尾的类(接口)</span></span><br><span class="line"><span class="comment"> * 第三个* 监控接口或者类下的所有的方法</span></span><br><span class="line"><span class="comment"> * ..标识任意个参数类型或者参数的个数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Before</span>(value = <span class="string">"execution(* com.hs..*Service.*(..))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   System.out.println(<span class="string">"我可以使用通配符"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-如何定义切点"><a href="#3-如何定义切点" class="headerlink" title="3.如何定义切点"></a>3.如何定义切点</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如何定义切点(可以随意组合)</span></span><br><span class="line"><span class="meta">@Pointcut</span>(value = <span class="string">"execution(int com.hs.service.ArithmeticService.add(int ,int))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addPointCut</span><span class="params">()</span> </span>&#123; &#125;   <span class="comment">//切点的名称是“addPointCut()”</span></span><br><span class="line"><span class="meta">@Pointcut</span>(value = <span class="string">"execution(int com.hs.service.ArithmeticService.sub(int ,int))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">subPointCut</span><span class="params">()</span> </span>&#123; &#125;   <span class="comment">//切点的名称是“subPointCut()”</span></span><br><span class="line"><span class="meta">@Pointcut</span>(value = <span class="string">"execution(int com.hs.service.ArithmeticService.mul(int ,int))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mulPointCut</span><span class="params">()</span> </span>&#123; &#125;   <span class="comment">//切点的名称是“mulPointCut()”</span></span><br><span class="line"><span class="meta">@Pointcut</span>(value = <span class="string">"addPointCut() || mulPointCut()"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addAndMulPointCut</span><span class="params">()</span> </span>&#123; &#125;<span class="comment">//切点的名称是“addAndMulPointCut()”</span></span><br><span class="line"><span class="meta">@Pointcut</span>(value = <span class="string">"execution(* com.hs..service.*Service.*(..))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">allMethodPointCut</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Before   叫前置通知，也叫前置增强</span></span><br><span class="line"><span class="meta">@Before</span>(value = <span class="string">"addAndMulPointCut()"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   System.out.println(<span class="string">"如何定义切点"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-前置通知：不管程序是否正确都会执行"><a href="#8-前置通知：不管程序是否正确都会执行" class="headerlink" title="8.前置通知：不管程序是否正确都会执行"></a>8.前置通知：不管程序是否正确都会执行</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.前置通知(增强)特点：不管程序是否正确都会执行</span></span><br><span class="line"><span class="meta">@Before</span>(value = <span class="string">"allMethodPointCut()"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test05</span><span class="params">(JoinPoint jp)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"==前置通知=="</span>);</span><br><span class="line"><span class="comment">//获取get</span></span><br><span class="line">System.out.println(Arrays.asList(jp.getArgs()));</span><br><span class="line">System.out.println(jp.getSignature().getName());</span><br><span class="line">System.out.println(jp.getTarget().getClass().getName());</span><br><span class="line">System.out.println(<span class="string">"==前置通知=="</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-后置通知：不管程序是否正确都会执行"><a href="#9-后置通知：不管程序是否正确都会执行" class="headerlink" title="9.后置通知：不管程序是否正确都会执行"></a>9.后置通知：不管程序是否正确都会执行</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.后置通知(增强)特点：不管程序是否正确都会执行</span></span><br><span class="line"><span class="meta">@After</span>(value = <span class="string">"allMethodPointCut()"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test06</span><span class="params">(JoinPoint jp)</span> </span>&#123;</span><br><span class="line">   <span class="comment">//获取get</span></span><br><span class="line">   System.out.println(<span class="string">"==后置增强=="</span>);</span><br><span class="line">   System.out.println(Arrays.asList(jp.getArgs()));</span><br><span class="line">   System.out.println(jp.getSignature().getName());</span><br><span class="line">   System.out.println(jp.getTarget().getClass().getName());</span><br><span class="line">   System.out.println(<span class="string">"==后置增强=="</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-返回通知-只有程序是正确的时候才会执行，并且可以获取运行后的数据"><a href="#10-返回通知-只有程序是正确的时候才会执行，并且可以获取运行后的数据" class="headerlink" title="10.返回通知:只有程序是正确的时候才会执行，并且可以获取运行后的数据"></a>10.返回通知:只有程序是正确的时候才会执行，并且可以获取运行后的数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3.返回通知(增强):只有程序是正确的时候才会执行，并且可以获取运行后的数据</span></span><br><span class="line"><span class="meta">@AfterReturning</span>(value = <span class="string">"allMethodPointCut()"</span>,returning = <span class="string">"hs"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test07</span><span class="params">(JoinPoint jp,<span class="keyword">int</span> hs)</span> </span>&#123;</span><br><span class="line">   System.out.println(<span class="string">"==返回通知=="</span>);</span><br><span class="line">   System.out.println(<span class="string">"程序正常运行，正确的运行结果为==&gt;"</span>+hs);</span><br><span class="line">   System.out.println(<span class="string">"==返回通知=="</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-异常通知：只有程序是错误的时候才会执行"><a href="#11-异常通知：只有程序是错误的时候才会执行" class="headerlink" title="11.异常通知：只有程序是错误的时候才会执行"></a>11.异常通知：只有程序是错误的时候才会执行</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//4.异常通知(增强)：只有程序是错误的时候才会执行，</span></span><br><span class="line"><span class="meta">@AfterThrowing</span>(value = <span class="string">"allMethodPointCut()"</span>,throwing = <span class="string">"hs"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test08</span><span class="params">(JoinPoint jp,ArithmeticException hs)</span> </span>&#123;</span><br><span class="line">   System.out.println(<span class="string">"==异常通知=="</span>);</span><br><span class="line">   System.out.println(<span class="string">"程序运行错误==&gt;"</span>+hs);</span><br><span class="line">   System.out.println(<span class="string">"==异常通知=="</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="12-环绕通知"><a href="#12-环绕通知" class="headerlink" title="12.环绕通知"></a>12.环绕通知</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//5.环绕通知</span></span><br><span class="line"><span class="meta">@Around</span>(<span class="string">"allMethodPointCut()"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">test09</span><span class="params">(ProceedingJoinPoint pjp)</span> </span>&#123;</span><br><span class="line">   System.out.println(<span class="string">"写某个功能，前置通知"</span>);</span><br><span class="line">   Object result = <span class="keyword">null</span>;</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">      result = pjp.proceed(); <span class="comment">//执行程序返回运行的结果</span></span><br><span class="line">      System.out.println(<span class="string">"写某个功能，返回通知"</span>);</span><br><span class="line">   &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">      throwable.printStackTrace();</span><br><span class="line">      System.out.println(<span class="string">"写某个功能，异常通知"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   System.out.println(<span class="string">"写某个功能，后置通知"</span>);</span><br><span class="line">   <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.service.ArithmeticService;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArithmeticServiceTest</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> ArithmeticService arithmeticService;</span><br><span class="line">   <span class="keyword">private</span> ApplicationContext ac;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Before</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">      <span class="keyword">this</span>.arithmeticService = <span class="keyword">this</span>.ac.getBean(<span class="string">"arithmeticServiceImpl"</span>, ArithmeticService.class);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAddMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = <span class="keyword">this</span>.arithmeticService.add(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">      System.out.println(<span class="string">"运行的结果："</span>+ result);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JDK动态代理与CGLib动态代理均是实现Spring AOP的基础，切点，切面，如何定义切点，前置、后置、放回、异常、环绕通知&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（十）AOP静态代理和动态代理说明</title>
    <link href="http://heshangcode.coding.me/2018/09/03/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%EF%BC%89AOP%E9%9D%99%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8C%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E8%AF%B4%E6%98%8E/"/>
    <id>http://heshangcode.coding.me/2018/09/03/Spring学习笔记（十）AOP静态代理和动态代理说明/</id>
    <published>2018-09-03T05:55:34.000Z</published>
    <updated>2018-09-03T06:29:58.085Z</updated>
    
    <content type="html"><![CDATA[<p>实例分析，AOP的静态代理和动态代理</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-什么是AOP？"><a href="#1-什么是AOP？" class="headerlink" title="1.什么是AOP？"></a>1.什么是AOP？</h3><p>Aspect Oriented Programming with Spring 面向切面（方面）编程</p><ul><li>面向切面编程是面向对象编程的一个补充而已</li><li>白话：我的理解—-&gt;在不改变原来的代码的基础上增强（增加）新的功能</li></ul><h3 id="2-代码结构"><a href="#2-代码结构" class="headerlink" title="2.代码结构"></a>2.代码结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuwbexneppj207y08umzr.jpg" alt=""></p><h3 id="3-情景描述引发静态代理"><a href="#3-情景描述引发静态代理" class="headerlink" title="3.情景描述引发静态代理"></a>3.情景描述引发静态代理</h3><p>如果现在让你完成一个2个数的四则运算</p><ul><li><p>核心业务完成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对外提供的核心业务，完成了加法/减法/乘法/除法运算</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ArithmeticService</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">int</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 核心代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArithmeticServiceImpl</span> <span class="keyword">implements</span> <span class="title">ArithmeticService</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//核心代码</span></span><br><span class="line">      <span class="keyword">int</span> result = x + y;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = x - y;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = x * y;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = x / y;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>完成了，和尚—&gt;技术经理—&gt;定义接口，悟空程序员—&gt;接口实现类</p></li><li><p>交工客户龙王，龙王需要显示传递数据的信息功能—&gt;和尚—&gt;悟空完成客户需求，但是万一如果又不要这个功能呢，现在引出静态代理，在核心代码的基础上增加新的功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 新增加的功能,采用静态代理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArithmeticServiceLogImpl</span> <span class="keyword">implements</span> <span class="title">ArithmeticService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//声明一个核心代码类的变量，为了后面方便调用核心代码的功能</span></span><br><span class="line">   <span class="keyword">private</span> ArithmeticServiceImpl asc = <span class="keyword">new</span> ArithmeticServiceImpl();</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//后增加的某个功能</span></span><br><span class="line">      System.out.println(<span class="string">"加法传递的参数===&gt;x="</span>+x+<span class="string">",y="</span>+y);</span><br><span class="line"><span class="comment">//    然后调用核心代码的功能</span></span><br><span class="line">      <span class="keyword">return</span> asc.add(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"减法传递的参数===&gt;x="</span>+x+<span class="string">",y="</span>+y);</span><br><span class="line">      <span class="keyword">return</span> asc.sub(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"乘法传递的参数===&gt;x="</span>+x+<span class="string">",y="</span>+y);</span><br><span class="line">      <span class="keyword">return</span> asc.mul(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"除法传递的参数===&gt;x="</span>+x+<span class="string">",y="</span>+y);</span><br><span class="line">      <span class="keyword">return</span> asc.mul(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.proxy.ArithmeticServiceProxy;</span><br><span class="line"><span class="keyword">import</span> com.hs.service.ArithmeticService;</span><br><span class="line"><span class="keyword">import</span> com.hs.service.ArithmeticServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArithmeticServiceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> ArithmeticService arithmeticService;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Before</span> <span class="comment">//在每个单元测试运行之前都要进行这个方法</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.arithmeticService = <span class="keyword">new</span> ArithmeticServiceLogImpl();<span class="comment">//new ArithmeticServiceImpl();    //想用哪个功能就实例化哪个类</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testAddMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> result = <span class="keyword">this</span>.arithmeticService.add(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">      System.out.println(result);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-动态代理"><a href="#4-动态代理" class="headerlink" title="4.动态代理"></a>4.动态代理</h3><p>接口和核心代码不变，</p><p>代理类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.service.ArithmeticService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 代理类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArithmeticServiceProxy</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//定义一个接口变量</span></span><br><span class="line">   <span class="keyword">private</span> ArithmeticService arithmeticService;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">ArithmeticServiceProxy</span><span class="params">(ArithmeticService arithmeticService)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.arithmeticService = arithmeticService;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">      <span class="comment">//写了某个功能，不管程序有没有错误都执行</span></span><br><span class="line">      System.out.println(<span class="string">"在运行方法["</span> + method.getName() + <span class="string">"]之前执行，传递的参数为"</span> + Arrays.asList(args));</span><br><span class="line">      Object result = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">         result = method.invoke(<span class="keyword">this</span>.arithmeticService, args);</span><br><span class="line">         <span class="comment">//写了某个功能，只有程序没有错误才执行</span></span><br><span class="line">         System.out.println(<span class="string">"运行方法成功，结果为："</span>+result);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">         e.printStackTrace();</span><br><span class="line">         <span class="comment">//写了某个功能，程序有错误的时候才执行</span></span><br><span class="line">         System.out.println(<span class="string">"执行的方法错误"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//写了某个功能，不管程序有没有错误都执行</span></span><br><span class="line">      System.out.println(<span class="string">"在运行方法之后执行"</span>);</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.proxy.ArithmeticServiceProxy;</span><br><span class="line"><span class="keyword">import</span> com.hs.service.ArithmeticService;</span><br><span class="line"><span class="keyword">import</span> com.hs.service.ArithmeticServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArithmeticServiceTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> ArithmeticService arithmeticService;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Before</span> <span class="comment">//再每个单元测试运行之前都要进行这个方法</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.arithmeticService = <span class="keyword">new</span> ArithmeticServiceImpl();    <span class="comment">//想用哪个功能就实例化哪个</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 动态代理</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">//实例化代理类</span></span><br><span class="line">      ArithmeticServiceProxy asp = <span class="keyword">new</span> ArithmeticServiceProxy(<span class="keyword">this</span>.arithmeticService);</span><br><span class="line"><span class="comment">//      固定写法</span></span><br><span class="line">      ArithmeticService as = (ArithmeticService) Proxy.newProxyInstance(ArithmeticServiceImpl.class.getClassLoader(), ArithmeticServiceImpl.class.getInterfaces(), asp);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span> result = as.div(<span class="number">10</span>, <span class="number">1</span>);</span><br><span class="line">      System.out.println(result);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实例分析，AOP的静态代理和动态代理&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（九）模拟实际开发过程的调用过程注解版-官方推荐版</title>
    <link href="http://heshangcode.coding.me/2018/09/02/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B9%9D%EF%BC%89%E6%A8%A1%E6%8B%9F%E5%AE%9E%E9%99%85%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B%E6%B3%A8%E8%A7%A3%E7%89%88-%E5%AE%98%E6%96%B9%E6%8E%A8%E8%8D%90%E7%89%88/"/>
    <id>http://heshangcode.coding.me/2018/09/02/Spring学习笔记（九）模拟实际开发过程的调用过程注解版-官方推荐版/</id>
    <published>2018-09-02T12:50:57.000Z</published>
    <updated>2018-09-03T09:12:14.963Z</updated>
    
    <content type="html"><![CDATA[<p>用@Repository、@Service 和 @Constroller，代替@Component，知名见意，知道是哪一层，@Autowired代替@Resource。</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-Repository、-Service-和-Constroller代替-Component"><a href="#1-Repository、-Service-和-Constroller代替-Component" class="headerlink" title="1.@Repository、@Service 和 @Constroller代替@Component"></a>1.@Repository、@Service 和 @Constroller代替@Component</h3><ul><li>@Repository：持久化层、数据访问层、也就是dao层，写在这上面，功能跟@Component，只是为了知名见意</li><li>@Service：写在Service层，业务逻辑层</li><li>@Controller：写在控制层，也就是SpringMvc那层</li></ul><h3 id="2-Autowired代替-Resource"><a href="#2-Autowired代替-Resource" class="headerlink" title="2.@Autowired代替@Resource"></a>2.@Autowired代替@Resource</h3><ul><li>@Autowired是Spring自己的，@Resource不是Spring的</li><li>面试题：@Resource和@Autowired的区别：<ul><li>@Resource先按名称再按照类型查找</li><li>@Autowired先按类型再按照名称查找</li><li>@Qualifier(“bookDaoImpl”)//指明ID的名字</li></ul></li></ul><h3 id="3-项目结构-jar包一样"><a href="#3-项目结构-jar包一样" class="headerlink" title="3.项目结构(jar包一样)"></a>3.项目结构(jar包一样)</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuw9pvrfywj20be0hewku.jpg" alt=""></p><h3 id="4-核心配置文件beans-xml"><a href="#4-核心配置文件beans-xml" class="headerlink" title="4.核心配置文件beans.xml"></a>4.核心配置文件beans.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:util</span>=<span class="string">"http://www.springframework.org/schema/util"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--1.启动Spring注解--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">context:annotation-config</span>&gt;</span><span class="tag">&lt;/<span class="name">context:annotation-config</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--2.扫描--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.hs"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-dao层"><a href="#5-dao层" class="headerlink" title="5.dao层"></a>5.dao层</h3><p>UserDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDaoImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Component//(value = "userDao")  //相当于&lt;bean id="userDaoImpl" class="com.hs.dao.impl.UserDaoImpl"/&gt;</span></span><br><span class="line"><span class="meta">@Repository</span> <span class="comment">//跟上面意思一样，只是为了知名见意</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"UserDao层的实现类---&gt;ADD"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-Service层"><a href="#6-Service层" class="headerlink" title="6.Service层"></a>6.Service层</h3><p>UserService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Component  //相当于&lt;bean id="userServiceImpl" class="com.hs.service.impl.UserServiceImpl"&gt;</span></span><br><span class="line"><span class="meta">@Service</span>    <span class="comment">//跟上面意思一样，只是为了知名见意</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> UserDao <span class="title">getUserDao</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> userDao;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//面试题：Resource和Autowired的区别</span></span><br><span class="line">   <span class="comment">//@Resource先按名称再按照类型查找</span></span><br><span class="line">   <span class="comment">//@Autowired先按类型再按照名称查找</span></span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="comment">//指明id名字</span></span><br><span class="line">   <span class="meta">@Qualifier</span>(value = <span class="string">"userDaoImpl"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDao</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"UserService层的实现类---&gt;ADD"</span>);</span><br><span class="line">      <span class="keyword">this</span>.userDao.add();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-Controller层"><a href="#7-Controller层" class="headerlink" title="7.Controller层"></a>7.Controller层</h3><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Component  //相当于&lt;bean id="userController" class="com.hs.web.UserController"/&gt;</span></span><br><span class="line"><span class="meta">@Controller</span> <span class="comment">//跟上面意思一样，只是为了知名见意</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> UserService <span class="title">getUserService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> userService;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"UserController层---&gt;ADD"</span>);</span><br><span class="line">      <span class="keyword">this</span>.userService.add();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-测试"><a href="#8-测试" class="headerlink" title="8.测试"></a>8.测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.web.UserController;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodTest</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">      UserController controller = applicationContext.getBean(<span class="string">"userController"</span>, UserController.class);</span><br><span class="line">      controller.add();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台输出：</p><p>UserController层—&gt;ADD<br>UserService层的实现类—&gt;ADD<br>UserDao层的实现类—&gt;ADD</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用@Repository、@Service 和 @Constroller，代替@Component，知名见意，知道是哪一层，@Autowired代替@Resource。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（八）模拟实际开发过程的调用过程注解版-传统方式</title>
    <link href="http://heshangcode.coding.me/2018/09/02/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AB%EF%BC%89%E6%A8%A1%E6%8B%9F%E5%AE%9E%E9%99%85%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B%E6%B3%A8%E8%A7%A3%E7%89%88-%E4%BC%A0%E7%BB%9F%E6%96%B9%E5%BC%8F/"/>
    <id>http://heshangcode.coding.me/2018/09/02/Spring学习笔记（八）模拟实际开发过程的调用过程注解版-传统方式/</id>
    <published>2018-09-02T09:42:32.000Z</published>
    <updated>2018-09-02T12:38:13.270Z</updated>
    
    <content type="html"><![CDATA[<p>传统的@Component和@Resource(等价于XML版setter注入)使用说明</p><p>@Component是个泛化概念，可以用在任何层次</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-项目结构-jar同上"><a href="#1-项目结构-jar同上" class="headerlink" title="1.项目结构(jar同上)"></a>1.项目结构(jar同上)</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuvglsd11kj20ar0gzjxc.jpg" alt=""></p><h3 id="2-核心配置文件beans-xml"><a href="#2-核心配置文件beans-xml" class="headerlink" title="2.核心配置文件beans.xml"></a>2.核心配置文件beans.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:util</span>=<span class="string">"http://www.springframework.org/schema/util"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--1.启动Spring注解--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">context:annotation-config</span>&gt;</span><span class="tag">&lt;/<span class="name">context:annotation-config</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--2.扫描--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.hs"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-dao层"><a href="#3-dao层" class="headerlink" title="3.dao层"></a>3.dao层</h3><p>userDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDaoImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span><span class="comment">//(value = "userDao")  //相当于&lt;bean id="userDaoImpl" class="com.hs.dao.impl.UserDaoImpl"/&gt;</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"UserDao层的实现类---&gt;ADD"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-Service层"><a href="#4-Service层" class="headerlink" title="4.Service层"></a>4.Service层</h3><p>UserService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>  <span class="comment">//相当于&lt;bean id="userServiceImpl" class="com.hs.service.impl.UserServiceImpl"&gt;</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> UserDao <span class="title">getUserDao</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> userDao;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/*相当于&lt;property name="userDao"&gt;</span></span><br><span class="line"><span class="comment">         &lt;ref bean="userDaoImpl"/&gt;</span></span><br><span class="line"><span class="comment">      &lt;/property&gt;*/</span></span><br><span class="line">   <span class="meta">@Resource</span>(name = <span class="string">"userDaoImpl"</span>)</span><br><span class="line">   <span class="comment">//下面的查找顺序 先按照名字进行搜索(没有写名字默认就是set后面那个名字) 再按照类型进行搜索(UserDao的实现类)</span></span><br><span class="line">   <span class="comment">//@Resource</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDao</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"UserService层的实现类---&gt;ADD"</span>);</span><br><span class="line">      <span class="keyword">this</span>.userDao.add();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="知识点：-Resource注解"><a href="#知识点：-Resource注解" class="headerlink" title="知识点：@Resource注解"></a>知识点：@Resource注解</h4><blockquote><ul><li><p>先按名称搜索，再按照类型搜索</p></li><li><p>是javax下的，不是Spring自带的</p></li><li>后面会有Spring自带的注解@Autowired推荐</li></ul></blockquote><h3 id="5-Controller层"><a href="#5-Controller层" class="headerlink" title="5.Controller层"></a>5.Controller层</h3><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>  <span class="comment">//相当于&lt;bean id="userController" class="com.hs.web.UserController"/&gt;</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">   <span class="comment">//简写方式，写个就不用写set方法了</span></span><br><span class="line">   <span class="comment">//如果你所在的公司用了测试框架(不是我现在用的单元测试框架)，那么不建议使用简写方式，对测试有影响</span></span><br><span class="line">   <span class="comment">//@Resource(name = "userServiceImpl")</span></span><br><span class="line">   <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> UserService <span class="title">getUserService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> userService;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Resource</span>(name = <span class="string">"userServiceImpl"</span>) <span class="comment">//相当于p:userService-ref="userServiceImpl"</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserService</span><span class="params">(UserService userService)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.userService = userService;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"UserController层---&gt;ADD"</span>);</span><br><span class="line">      <span class="keyword">this</span>.userService.add();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-测试"><a href="#6-测试" class="headerlink" title="6.测试"></a>6.测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.web.UserController;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodTest</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">      UserController controller = applicationContext.getBean(<span class="string">"userController"</span>, UserController.class);</span><br><span class="line">      controller.add();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;传统的@Component和@Resource(等价于XML版setter注入)使用说明&lt;/p&gt;
&lt;p&gt;@Component是个泛化概念，可以用在任何层次&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（七）模拟实际开发过程的调用过程XML版-Setter方式注入</title>
    <link href="http://heshangcode.coding.me/2018/09/02/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89%E6%A8%A1%E6%8B%9F%E5%AE%9E%E9%99%85%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8BXML%E7%89%88-Setter%E6%96%B9%E5%BC%8F%E6%B3%A8%E5%85%A5/"/>
    <id>http://heshangcode.coding.me/2018/09/02/Spring学习笔记（七）模拟实际开发过程的调用过程XML版-Setter方式注入/</id>
    <published>2018-09-02T07:16:56.000Z</published>
    <updated>2018-09-02T12:37:59.854Z</updated>
    
    <content type="html"><![CDATA[<p>模拟实际开发过程的调用过程XML版-Setter方式注入</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuv7zoo59kj20b10ffq8j.jpg" alt=""></p><h3 id="2-jar包跟上个一样"><a href="#2-jar包跟上个一样" class="headerlink" title="2.jar包跟上个一样"></a>2.jar包跟上个一样</h3><h3 id="3-重写set方法"><a href="#3-重写set方法" class="headerlink" title="3.重写set方法"></a>3.重写set方法</h3><p>UserServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDao</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDaoImpl"</span> <span class="attr">class</span>=<span class="string">"com.hs.dao.impl.UserDaoImpl"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--相当于userDao = new userDaoImpl()--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userServiceImpl"</span> <span class="attr">class</span>=<span class="string">"com.hs.service.impl.UserServiceImpl"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userDao"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"userDaoImpl"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在set方法里代替完成了，<code>private UserDao userDao = new userDaoImpl();</code></p><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserService</span><span class="params">(UserService userService)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.userService = userService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userServiceImpl"</span> <span class="attr">class</span>=<span class="string">"com.hs.service.impl.UserServiceImpl"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"userDao"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"userDaoImpl"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--先UserController = new UserController()</span></span><br><span class="line"><span class="comment">   再userService = new userServiceImpl();</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userController"</span> <span class="attr">class</span>=<span class="string">"com.hs.web.UserController"</span> <span class="attr">p:userService-ref</span>=<span class="string">"userServiceImpl"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--&lt;property name="userService" ref="userServiceImpl"/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在set方法里代替完成了<code>private UserService userService = new userServiceImpl();</code></p><h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.web.UserController;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodTest</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">      UserController controller = applicationContext.getBean(<span class="string">"userController"</span>, UserController.class);</span><br><span class="line">      controller.add();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台输出：</p><p>UserController层—&gt;ADD<br>UserService层的实现类—&gt;ADD<br>UserDao层的实现类—&gt;ADD</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;模拟实际开发过程的调用过程XML版-Setter方式注入&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://heshangcode.coding.me/2018/09/02/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%E6%A8%A1%E6%8B%9F%E5%AE%9E%E9%99%85%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E7%9A%84%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8BXML%E7%89%88-%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E6%B3%A8%E5%85%A5/"/>
    <id>http://heshangcode.coding.me/2018/09/02/Spring学习笔记（六）模拟实际开发过程的调用过程XML版-构造函数注入/</id>
    <published>2018-09-02T07:01:35.000Z</published>
    <updated>2018-09-02T12:36:43.706Z</updated>
    
    <content type="html"><![CDATA[<p>用Spring的XML版的构造函数注入完成这个过程</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuv7inn470j20bq0fftek.jpg" alt=""></p><h3 id="2-jar包"><a href="#2-jar包" class="headerlink" title="2.jar包"></a>2.jar包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aspects --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context-support --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-expression --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-tx --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-代替private-UserDao-userDao-new-userDaoImpl"><a href="#3-代替private-UserDao-userDao-new-userDaoImpl" class="headerlink" title="3.代替private UserDao userDao = new userDaoImpl();"></a>3.代替<code>private UserDao userDao = new userDaoImpl();</code></h3><p>UserServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">UserServiceImpl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">UserServiceImpl</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"UserService层的实现类---&gt;ADD"</span>);</span><br><span class="line">      userDao.add();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--实例化--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userDaoImpl"</span> <span class="attr">class</span>=<span class="string">"com.hs.dao.impl.UserDaoImpl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--通过构造函数实例化--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userServiceImpl"</span> <span class="attr">class</span>=<span class="string">"com.hs.service.impl.UserServiceImpl"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"userDao"</span> <span class="attr">ref</span>=<span class="string">"userDaoImpl"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这两段代码相当于，完成了<code>private UserDao userDao = new userDaoImpl();</code></p><h3 id="4-代替private-UserService-userService-new-userServiceImpl"><a href="#4-代替private-UserService-userService-new-userServiceImpl" class="headerlink" title="4.代替private UserService userService = new userServiceImpl();"></a>4.代替<code>private UserService userService = new userServiceImpl();</code></h3><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">UserController</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">UserController</span><span class="params">(UserService userService)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.userService = userService;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"UserController层---&gt;ADD"</span>);</span><br><span class="line">      userService.add();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userServiceImpl"</span> <span class="attr">class</span>=<span class="string">"com.hs.service.impl.UserServiceImpl"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"userDao"</span> <span class="attr">ref</span>=<span class="string">"userDaoImpl"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userController"</span> <span class="attr">class</span>=<span class="string">"com.hs.web.UserController"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"userService"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"userServiceImpl"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这两段代码相当于，完成了<code>private UserService userService = new userServiceImpl();</code></p><h3 id="5-代替UserController-userController-new-UserController"><a href="#5-代替UserController-userController-new-UserController" class="headerlink" title="5.代替UserController userController = new UserController();"></a>5.代替UserController userController = new UserController();</h3><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.web.UserController;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//1.读取配置文件</span></span><br><span class="line">ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line">        <span class="comment">//获取xml版本里的UserController userController = new UserController();</span></span><br><span class="line">UserController userController = applicationContext.getBean(<span class="string">"userController"</span>, UserController.class);</span><br><span class="line">userController.add();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台输出：</p><p>UserController层—&gt;ADD<br>UserService层的实现类—&gt;ADD<br>UserDao层的实现类—&gt;ADD</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用Spring的XML版的构造函数注入完成这个过程&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（五）模拟实际开发的调用过程</title>
    <link href="http://heshangcode.coding.me/2018/09/02/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%E6%A8%A1%E6%8B%9F%E5%AE%9E%E9%99%85%E5%BC%80%E5%8F%91%E7%9A%84%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B/"/>
    <id>http://heshangcode.coding.me/2018/09/02/Spring学习笔记（五）模拟实际开发的调用过程/</id>
    <published>2018-09-02T06:41:06.000Z</published>
    <updated>2018-09-02T12:37:48.585Z</updated>
    
    <content type="html"><![CDATA[<p>用传统方式(以前的知识)来模拟实际开发的调用过程。</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuv6z5lxdkj20ag0dw43a.jpg" alt=""></p><h3 id="2-jar包"><a href="#2-jar包" class="headerlink" title="2.jar包"></a>2.jar包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-dao层"><a href="#3-dao层" class="headerlink" title="3.dao层"></a>3.dao层</h3><p>UserDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDaoImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.UserDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"UserDao层的实现类---&gt;ADD"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-Service层"><a href="#4-Service层" class="headerlink" title="4.Service层"></a>4.Service层</h3><p>UserService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.dao.impl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> com.hs.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">   <span class="comment">//建立联系（一共有三种方式）</span></span><br><span class="line">   <span class="keyword">private</span> UserDao userDao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"UserService层的实现类---&gt;ADD"</span>);</span><br><span class="line">      <span class="keyword">this</span>.userDao.add();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-Controller层"><a href="#5-Controller层" class="headerlink" title="5.Controller层"></a>5.Controller层</h3><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.hs.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"><span class="comment">//建立联系</span></span><br><span class="line">   <span class="keyword">private</span> UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"UserController层---&gt;ADD"</span>);</span><br><span class="line">      <span class="keyword">this</span>.userService.add();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-测试"><a href="#6-测试" class="headerlink" title="6.测试"></a>6.测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.web.UserController;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodTest</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 测试传统调用过程</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      UserController userController = <span class="keyword">new</span> UserController();</span><br><span class="line">      userController.add();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台输出：</p><p>UserController层—&gt;ADD<br>UserService层的实现类—&gt;ADD<br>UserDao层的实现类—&gt;ADD</p><p>程序就是一层一层调用，先调用Controller层—&gt;Service层—&gt;Dao层</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用传统方式(以前的知识)来模拟实际开发的调用过程。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（四）Spring的注入方式-Setter方式推荐</title>
    <link href="http://heshangcode.coding.me/2018/08/23/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89Spring%E7%9A%84%E6%B3%A8%E5%85%A5%E6%96%B9%E5%BC%8F-Setter%E6%96%B9%E5%BC%8F%E6%8E%A8%E8%8D%90/"/>
    <id>http://heshangcode.coding.me/2018/08/23/Spring学习笔记（四）Spring的注入方式-Setter方式推荐/</id>
    <published>2018-08-23T04:57:39.000Z</published>
    <updated>2018-08-23T05:57:55.902Z</updated>
    
    <content type="html"><![CDATA[<p>Setter注入的3种方式，读取属性文件取值，赋值：普通值、数组，list，set、Map和Properties、自定义类型、接口实现类(接口回调)</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fujk0q7go6j209f0czn0z.jpg" alt="">model里的内容跟上篇一样，再写get、set方法、toString方法即可，pom.xml见前几篇</p><h3 id="2-Setter注入的3种方式"><a href="#2-Setter注入的3种方式" class="headerlink" title="2.Setter注入的3种方式"></a>2.Setter注入的3种方式</h3><p>Setter注入方式，必须要提供setter方法，并且有三种方式:标准方式，缩写，p方式(也有p方式引用)</p><h3 id="3-普通值赋值"><a href="#3-普通值赋值" class="headerlink" title="3.普通值赋值"></a>3.普通值赋值</h3><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Setter注入方式，必须要提供setter方法，并且有三种方式:标准方式，缩写，p方式(也有p方式引用)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user01"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span> <span class="attr">p:user_name</span>=<span class="string">"八戒"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--这个name的值不是属性值，是setter方法后面的值首字母小写--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user_id"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>100<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;property name="user_name" value="悟空"/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-加载属性文件"><a href="#4-加载属性文件" class="headerlink" title="4.加载属性文件"></a>4.加载属性文件</h3><p>jdbc.properties</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.mysql.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.mysql.url=jdbc:mysql://localhost:3306/cy42_mss</span><br><span class="line">jdbc.mysql.username=root</span><br><span class="line">jdbc.mysql.password=root</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--3.读取属性文件！！$&#123;key&#125;获取值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-数组、list、map、set、properties"><a href="#5-数组、list、map、set、properties" class="headerlink" title="5.数组、list、map、set、properties"></a>5.数组、list、map、set、properties</h3><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user01"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span> <span class="attr">p:hobbySet-ref</span>=<span class="string">"hobbySetRef"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hobbyArray"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--这里面的标签，赋值跟构造函数初始化一样的--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--可以采用构造函数初始化一样，也可以引用util:list--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hobbyList"</span> <span class="attr">ref</span>=<span class="string">"hobbyListRef"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"map"</span> <span class="attr">ref</span>=<span class="string">"mapRef"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"class"</span>&gt;</span>$&#123;jdbc.mysql.driver&#125;<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--这些util，不会咋用可以百度，util:xxx,list-class可以不用写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:list</span> <span class="attr">id</span>=<span class="string">"hobbyListRef"</span> <span class="attr">list-class</span>=<span class="string">"java.util.ArrayList"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">util:list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:set</span> <span class="attr">id</span>=<span class="string">"hobbySetRef"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">util:set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:map</span> <span class="attr">id</span>=<span class="string">"mapRef"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"class"</span> <span class="attr">value</span>=<span class="string">"计算机"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>和尚<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">util:map</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-自定义类型"><a href="#6-自定义类型" class="headerlink" title="6.自定义类型"></a>6.自定义类型</h3><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user01"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hsRole"</span> <span class="attr">ref</span>=<span class="string">"role"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"role"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.Role"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"role_name"</span> <span class="attr">value</span>=<span class="string">"超级管理员"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-接口实现类-接口回调-以后经常用！！"><a href="#7-接口实现类-接口回调-以后经常用！！" class="headerlink" title="7.接口实现类(接口回调)(以后经常用！！)"></a>7.接口实现类(接口回调)(以后经常用！！)</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user01"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span> <span class="attr">p:hsTest-ref</span>=<span class="string">"testImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"testImpl"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.ITestImpl"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-测试"><a href="#8-测试" class="headerlink" title="8.测试"></a>8.测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user01"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   user.getHsTest().print();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Setter注入的3种方式，读取属性文件取值，赋值：普通值、数组，list，set、Map和Properties、自定义类型、接口实现类(接口回调)&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（三）Spring的注入方式-构造函数注入</title>
    <link href="http://heshangcode.coding.me/2018/08/23/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89Spring%E7%9A%84%E6%B3%A8%E5%85%A5%E6%96%B9%E5%BC%8F-%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E6%B3%A8%E5%85%A5/"/>
    <id>http://heshangcode.coding.me/2018/08/23/Spring学习笔记（三）Spring的注入方式-构造函数注入/</id>
    <published>2018-08-23T04:10:04.000Z</published>
    <updated>2018-09-02T07:33:07.473Z</updated>
    
    <content type="html"><![CDATA[<p>在类名前面加@Component进行实例化类、在beans.xml中用构造函数实例化对象——普通值、数组，list，set、Map和Properties、自定义类型实例化、给自定义类型初始化数据、给自定义类型初始化数据——推荐引用方式、<strong>接口注入实现类(实现接口回调)重点啊！！！</strong></p><a id="more"></a>SpringMvcSSM框架<br><br>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a><br><br>[TOC]<br><br><br><br>### 1.目录结构(需要的jar包均在环境搭建中有)<br><br><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fujideyeitj20bf0ci78w.jpg" alt=""><br><br>### 2.在类名前面加@Component进行实例化类<br><br>@Component//(value = “hsUser”)  //相当于<bean class="com.hs.model.User" id="user"> (value = “hsUser”)就是id=hsUser<br><br>beans.xml<br><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd"</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">     <span class="comment">&lt;!--1.启动Spring注解--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--2.扫描注解--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.hs"</span>/&gt;</span> </span><br><span class="line">      </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span><span class="comment">//(value = "hsUser")  //相当于&lt;bean class="com.hs.model.User" id="user"/&gt; (value = "hsUser")就是id=hsUser</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> String user_name;</span><br><span class="line">   <span class="keyword">private</span> Integer user_id;</span><br><span class="line">   <span class="keyword">private</span> String[] hobbyArray;</span><br><span class="line">   <span class="keyword">private</span> List&lt;String&gt; hobbyList;</span><br><span class="line">   <span class="keyword">private</span> Set&lt;String&gt; hobbySet;</span><br><span class="line">   <span class="keyword">private</span> Map&lt;String, Object&gt; map;</span><br><span class="line">   <span class="keyword">private</span> Properties properties;  <span class="comment">//Map&lt;string,string&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> Role hsRole;    <span class="comment">//这是自定义类型</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> ITest hsTest;   <span class="comment">//定义接口变量</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 这里通过bean.xml构造函数初始化</span></span><br><span class="line"><span class="comment">    * 1.ITestImpl testImpl = new ITestImpl();</span></span><br><span class="line"><span class="comment">    * 2.hsTest = testImpl</span></span><br><span class="line"><span class="comment">    * 3.ITest hsTest = new ITestImpl();</span></span><br><span class="line"><span class="comment">    * 典型的接口回调嘛</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> hsTest</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(ITest hsTest)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hsTest = hsTest;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Role hsRole)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hsRole = hsRole;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Map&lt;String, Object&gt; map, Properties properties)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.map = map;</span><br><span class="line">      <span class="keyword">this</span>.properties = properties;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer user_id, String user_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String user_name, Integer user_id, String[] hobbyArray, List&lt;String&gt; hobbyList, Set&lt;String&gt; hobbySet)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">      <span class="keyword">this</span>.hobbyArray = hobbyArray;</span><br><span class="line">      <span class="keyword">this</span>.hobbyList = hobbyList;</span><br><span class="line">      <span class="keyword">this</span>.hobbySet = hobbySet;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> String[] getHobbyArray() &#123;</span><br><span class="line">      <span class="keyword">return</span> hobbyArray;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHobbyArray</span><span class="params">(String[] hobbyArray)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hobbyArray = hobbyArray;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getHobbyList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hobbyList;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHobbyList</span><span class="params">(List&lt;String&gt; hobbyList)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hobbyList = hobbyList;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getHobbySet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hobbySet;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHobbySet</span><span class="params">(Set&lt;String&gt; hobbySet)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hobbySet = hobbySet;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> map;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMap</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.map = map;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Properties <span class="title">getProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> properties;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProperties</span><span class="params">(Properties properties)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.properties = properties;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Role <span class="title">getHsRole</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hsRole;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHsRole</span><span class="params">(Role hsRole)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hsRole = hsRole;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> ITest <span class="title">getHsTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hsTest;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHsTest</span><span class="params">(ITest hsTest)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hsTest = hsTest;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">            <span class="string">"user_name='"</span> + user_name + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">", user_id="</span> + user_id +</span><br><span class="line">            <span class="string">", hobbyArray="</span> + Arrays.toString(hobbyArray) +</span><br><span class="line">            <span class="string">", hobbyList="</span> + hobbyList +</span><br><span class="line">            <span class="string">", hobbySet="</span> + hobbySet +</span><br><span class="line">            <span class="string">", map="</span> + map +</span><br><span class="line">            <span class="string">", properties="</span> + properties +</span><br><span class="line">            <span class="string">", hsRole="</span> + hsRole +</span><br><span class="line">            <span class="string">", hsTest="</span> + hsTest +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ConstructorObjectTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试在类名前面加<span class="doctag">@Component</span>进行实例化类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-在beans-xml中用构造函数实例化对象——普通值"><a href="#3-在beans-xml中用构造函数实例化对象——普通值" class="headerlink" title="3.在beans.xml中用构造函数实例化对象——普通值"></a>3.在beans.xml中用构造函数实例化对象——普通值</h3><p>在spring中实例化对象，把类的构造函数设置成private，依然可以被实例化，在java中就不能被实例化</p><p>只要见到<bean>标签就是实例化。。。</bean></p><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer user_id, String user_name)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">     <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--User 类通过构造函数实例化--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user01"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--index=""(可以省略)是设置参数的索引(0开始)，是第几个 type可以不用写</span></span><br><span class="line"><span class="comment">name就是构造函数的参数值，value就是赋的值</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--翻译constructor：构造函数--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"user_id"</span> <span class="attr">value</span>=<span class="string">"100"</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">type</span>=<span class="string">"java.lang.Integer"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"user_name"</span> <span class="attr">index</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>悟空<span class="tag">&lt;/<span class="name">value</span>&gt;</span> <span class="comment">&lt;!--上面是简写--&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--设置空是&lt;null/&gt;--&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ConstructorObjectTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试在beans.xml中用构造函数实例化对象——普通值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user01"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-构造函数实例化数组，list，set"><a href="#4-构造函数实例化数组，list，set" class="headerlink" title="4.构造函数实例化数组，list，set"></a>4.构造函数实例化数组，list，set</h3><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String user_name, Integer user_id, String[] hobbyArray, List&lt;String&gt; hobbyList, Set&lt;String&gt; hobbySet)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">   <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   <span class="keyword">this</span>.hobbyArray = hobbyArray;</span><br><span class="line">   <span class="keyword">this</span>.hobbyList = hobbyList;</span><br><span class="line">   <span class="keyword">this</span>.hobbySet = hobbySet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--构造函数实例化数组，list，set--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user02"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"user_name"</span> <span class="attr">value</span>=<span class="string">"八戒"</span> <span class="attr">index</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"user_id"</span> <span class="attr">value</span>=<span class="string">"200"</span> <span class="attr">index</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hobbyArray"</span> <span class="attr">index</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hobbyList"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hobbySet"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ConstructorObjectTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试在beans.xml中用构造函数实例化对象——数组，list，set</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user02"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-构造函数实例化Map和Properties"><a href="#5-构造函数实例化Map和Properties" class="headerlink" title="5.构造函数实例化Map和Properties"></a>5.构造函数实例化Map和Properties</h3><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Map&lt;String, Object&gt; map, Properties properties)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.map = map;</span><br><span class="line">   <span class="keyword">this</span>.properties = properties;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--构造函数实例化Map，Properties--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user03"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"hs"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>和尚<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--缩写--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"悟空"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--给Properties赋值--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"age"</span>&gt;</span>100<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"RuntimeExceiption"</span>&gt;</span>error<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试在beans.xml中用构造函数实例化对象——Map和Properties</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user03"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-初始化自定义类型"><a href="#6-初始化自定义类型" class="headerlink" title="6.初始化自定义类型"></a>6.初始化自定义类型</h3><p>Role.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> String role_name;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Role</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Role</span><span class="params">(String role_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.role_name = role_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getRole_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> role_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_name</span><span class="params">(String role_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.role_name = role_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"Role&#123;"</span> +</span><br><span class="line">            <span class="string">"role_name='"</span> + role_name + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Role hsRole;    <span class="comment">//这是自定义类型</span></span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--构造函数初始化自定义类型--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user04"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hsRole"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"role1"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.Role"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义类型实例化，给User类中的Role类的变量，进行实例化操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test05</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user04"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   <span class="comment">//下面这个证明User类的那个bean Role role,范围只能在User里</span></span><br><span class="line">   <span class="comment">/*Role role1 = ac.getBean("role1", Role.class);</span></span><br><span class="line"><span class="comment">   System.out.println(role1);*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-构造函数实例化自定义类型"><a href="#7-构造函数实例化自定义类型" class="headerlink" title="7.构造函数实例化自定义类型"></a>7.构造函数实例化自定义类型</h3><p>Role.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Role</span><span class="params">(String role_name)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.role_name = role_name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Role hsRole)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.hsRole = hsRole;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--构造函数实例化自定义类型--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user05"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hsRole"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.hs.model.Role"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"role_name"</span> <span class="attr">value</span>=<span class="string">"超级管理员"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 给自定义类型初始化数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test06</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">User user = ac.getBean(<span class="string">"user05"</span>,User.class);</span><br><span class="line">System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-推荐引用方式——构造函数实例化自定义类型"><a href="#8-推荐引用方式——构造函数实例化自定义类型" class="headerlink" title="8.推荐引用方式——构造函数实例化自定义类型"></a>8.推荐引用方式——构造函数实例化自定义类型</h3><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--构造函数实例化自定义类型——推荐引用方式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user06"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--&lt;constructor-arg name="hsRole"&gt;</span></span><br><span class="line"><span class="comment">      &amp;lt;!&amp;ndash;引用bean，下面简写&amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">      &lt;ref bean="role2"/&gt;</span></span><br><span class="line"><span class="comment">   &lt;/constructor-arg&gt;--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hsRole"</span> <span class="attr">ref</span>=<span class="string">"role2"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"role2"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.Role"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"role_name"</span> <span class="attr">value</span>=<span class="string">"引用方式推荐"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 给自定义类型初始化数据——推荐引用方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test07</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user06"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   Role role = ac.getBean(<span class="string">"role2"</span>, Role.class);</span><br><span class="line">   System.out.println(role);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-构造函数实现接口回调，接口注入实现类（重点！！！）"><a href="#9-构造函数实现接口回调，接口注入实现类（重点！！！）" class="headerlink" title="9.构造函数实现接口回调，接口注入实现类（重点！！！）"></a>9.构造函数实现接口回调，接口注入实现类（重点！！！）</h3><p>ITest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ITest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ITestImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ITestImpl</span> <span class="keyword">implements</span> <span class="title">ITest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"Hello Word!!"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> ITest hsTest;   <span class="comment">//定义接口变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这里通过bean.xml构造函数初始化</span></span><br><span class="line"><span class="comment"> * 1.ITestImpl testImpl = new ITestImpl();</span></span><br><span class="line"><span class="comment"> * 2.hsTest = testImpl</span></span><br><span class="line"><span class="comment"> * 3.ITest hsTest = new ITestImpl();</span></span><br><span class="line"><span class="comment"> * 典型的接口回调嘛</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> hsTest</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(ITest hsTest)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.hsTest = hsTest;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--实现接口回调，接口注入实现类--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这里通过bean.xml构造函数初始化</span></span><br><span class="line"><span class="comment"> 1.ITestImpl testImpl = new ITestImpl();</span></span><br><span class="line"><span class="comment"> 2.hsTest = testImpl --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user07"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hsTest"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"testImpl"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--ITestImpl testImpl = new ITestImpl();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"testImpl"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.ITestImpl"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接口注入实现类，实现接口回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test08</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user07"</span>,User.class);</span><br><span class="line">   user.getHsTest().print();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></bean>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在类名前面加@Component进行实例化类、在beans.xml中用构造函数实例化对象——普通值、数组，list，set、Map和Properties、自定义类型实例化、给自定义类型初始化数据、给自定义类型初始化数据——推荐引用方式、&lt;strong&gt;接口注入实现类(实现接口回调)重点啊！！！&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（二）Spring的环境搭建</title>
    <link href="http://heshangcode.coding.me/2018/08/23/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89Spring%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://heshangcode.coding.me/2018/08/23/Spring学习笔记（二）Spring的环境搭建/</id>
    <published>2018-08-23T03:39:12.000Z</published>
    <updated>2018-08-23T05:44:42.297Z</updated>
    
    <content type="html"><![CDATA[<p>Spring个人概述，核心配置文件(.xml)里的bean标签什么时候被实例化，获取对象的两种方式，Bean的范围说明，beans.xml就是spring框架提供的容器(管理Bean Bean就是对象 必须通过类 类必须可能进行实例化)</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-Spring个人概述"><a href="#1-Spring个人概述" class="headerlink" title="1.Spring个人概述"></a>1.Spring个人概述</h3><ul><li><p>Spring是轻量级别开源的框架(重量级别EJB)，解决并发也比较优秀</p></li><li><p>重点：Spring是一个 IoC(DI) 和 AOP 的 容器框架（JAVAEE框架的集合）:它主要是管理Bean的生命周期使用</p><p>XML完成对Bean的实例化</p><p>注解也是完成对Bean的实例化操作</p></li><li><p>Spring是一站式服务</p><ul><li><p>什么是IoC？</p><ul><li><p>控制反转：控制反转（Inversion of Control，缩写为IoC），是<a href="https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B" target="_blank" rel="noopener">面向对象编程</a>中的一种设计原则，可以用来减低计算机代码之间的<a href="https://baike.baidu.com/item/%E8%80%A6%E5%90%88%E5%BA%A6" target="_blank" rel="noopener">耦合度</a>。其中最常见的方式叫做依赖注入（Dependency Injection，简称DI），还有一种方式叫“依赖查找”（Dependency Lookup）。通过控制反转，对象在被创建的时候，由一个调控系统内所有对象的外界实体，将其所依赖的对象的引用传递给它。也可以说，依赖被注入到对象中。</p></li><li><p>注入方式：<a href="https://zhidao.baidu.com/question/489516951.html" target="_blank" rel="noopener">https://zhidao.baidu.com/question/489516951.html</a></p></li><li><p>举例子说明控制反转</p><p>| 和尚是一个编剧写剧本，当我写该剧本的时候，我并不需要考虑谁合适演，但是我应该有权利决定谁来演 |<br>| ———————————————————— |<br>| 导演出现，编剧将选人物的权利移交出去，控制权移交出去         |<br>| 出品人出现，导演将选人物的权利移交出去，控制权移交出去       |<br>| 点餐                                                         |<br>| 最开始：自己去食堂，自己去打菜，自己吃                       |<br>| 外卖出现：只是需要发送一个请求告知外卖小哥，我想吃什么，那么外卖小哥为我们服务，将需要的菜取回来给我们品尝 |<br>| java体现                                                     |<br>| 容器框架(Bean的生命周期创建 使用 销毁)                       |<br>| 管理Bean，也就是创建对象(也就是注入)(就不用我们自己new创建对象了) |</p></li></ul></li></ul></li></ul><h3 id="2-项目结构"><a href="#2-项目结构" class="headerlink" title="2.项目结构"></a>2.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fujhwuaa3nj20bk0a7n0w.jpg" alt=""></p><h3 id="3-Spring环境搭建"><a href="#3-Spring环境搭建" class="headerlink" title="3.Spring环境搭建"></a>3.Spring环境搭建</h3><p>框架流程都是：先找jar包=&gt;入口文件(核心配置文件beans.xml官方推荐的名字是applicationContext.xml)=&gt;使用API调用过程=&gt;测试</p><h3 id="4-jar包"><a href="#4-jar包" class="headerlink" title="4.jar包"></a>4.jar包</h3><p>pom.xml加入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aspects --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context-support --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-expression --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-tx --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-核心配置文件-入口"><a href="#5-核心配置文件-入口" class="headerlink" title="5.核心配置文件(入口)"></a>5.核心配置文件(入口)</h3><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> String user_name;</span><br><span class="line">   <span class="keyword">private</span> Integer user_id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--beans.xml就是spring框架提供的容器--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--管理Bean Bean就是对象 必须通过类 类必须可能进行实例化--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--下面那个代码相当于</span></span><br><span class="line"><span class="comment">   java代码</span></span><br><span class="line"><span class="comment">   HashMap map1 = new HashMap();   HashMapjava内置的类</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--&lt;bean id="map1" class="java.util.HashMap"&gt;&lt;/bean&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--static User u1 = new User();只有一个new对象，Bean的范围说明——scope="singleton"默认为单例模式,scope可以不用写--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"u1"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span> <span class="attr">scope</span>=<span class="string">"singleton"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--User u2 = new User(); prototype多例模式，需要对象就new一个，每个不同--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"u2"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-使用API调用过程"><a href="#6-使用API调用过程" class="headerlink" title="6.使用API调用过程"></a>6.使用API调用过程</h3><p>获取对象两种方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User user = (User) ac.getBean(<span class="string">"u1"</span>);</span><br><span class="line">User user = ac.getBean(<span class="string">"u1"</span>, User.class);</span><br></pre></td></tr></table></figure><p>ObjectTest.java</p><p>读取核心配置文件 == 发现了Bean标签就会对class对应的类进行实例化操作</p><p> ApplicationContext ac = new ClassPathXmlApplicationContext(“beans.xml”);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 同一个类的实例化对象比较</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//    1.读取核心配置文件 == 发现了Bean标签就会对class对应的类进行实例化操作</span></span><br><span class="line">      ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"><span class="comment">//    u1就是bean标签里的id的名字</span></span><br><span class="line">      User user1 = ac.getBean(<span class="string">"u1"</span>, User.class);</span><br><span class="line">      User user2 = ac.getBean(<span class="string">"u2"</span>, User.class);</span><br><span class="line">      System.out.println(user1);</span><br><span class="line">      System.out.println(user2);</span><br><span class="line">      System.out.println(user1==user2);   <span class="comment">//false</span></span><br><span class="line">      System.out.println(user1.equals(user2));    <span class="comment">//false</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="7-bean的范围说明"><a href="#7-bean的范围说明" class="headerlink" title="7.bean的范围说明"></a>7.bean的范围说明</h3><p>ObjectTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Bean的范围说明——默认为单例模式</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//    1.读取核心配置文件 == 发现了Bean标签就会对class对应的类进行实例化操作</span></span><br><span class="line">      ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">      User user1 = ac.getBean(<span class="string">"u1"</span>, User.class);</span><br><span class="line">      User user2 = ac.getBean(<span class="string">"u1"</span>, User.class);</span><br><span class="line">      System.out.println(user1);</span><br><span class="line">      System.out.println(user2);</span><br><span class="line">      System.out.println(user1==user2);   <span class="comment">//true</span></span><br><span class="line">      System.out.println(user1.equals(user2));    <span class="comment">//true</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Bean的范围说明——设置多例模式</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//    1.读取核心配置文件 == 发现了Bean标签就会对class对应的类进行实例化操作</span></span><br><span class="line">      ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">      User user1 = ac.getBean(<span class="string">"u2"</span>, User.class);</span><br><span class="line">      User user2 = ac.getBean(<span class="string">"u2"</span>, User.class);</span><br><span class="line">      System.out.println(user1);</span><br><span class="line">      System.out.println(user2);</span><br><span class="line">      System.out.println(user1==user2);   <span class="comment">//false</span></span><br><span class="line">      System.out.println(user1.equals(user2));    <span class="comment">//false</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring个人概述，核心配置文件(.xml)里的bean标签什么时候被实例化，获取对象的两种方式，Bean的范围说明，beans.xml就是spring框架提供的容器(管理Bean Bean就是对象 必须通过类 类必须可能进行实例化)&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>idea创建maven项目</title>
    <link href="http://heshangcode.coding.me/2018/08/22/idea%E5%88%9B%E5%BB%BAmaven%E9%A1%B9%E7%9B%AE/"/>
    <id>http://heshangcode.coding.me/2018/08/22/idea创建maven项目/</id>
    <published>2018-08-22T11:31:24.000Z</published>
    <updated>2018-08-23T05:54:45.081Z</updated>
    
    <content type="html"><![CDATA[<p>为什么要用maven呢，一方面jar包方便，另一方面以后工作中肯定要用到，现在就先学习学习，然后自己也在网上找了很多的教程，每个教程都各有特点，然后我自己就给自己总结了一个教程，做一个记录。</p><a id="more"></a><h3 id="1-用模板快速创建Java-SE工程"><a href="#1-用模板快速创建Java-SE工程" class="headerlink" title="1.用模板快速创建Java SE工程"></a>1.用模板快速创建Java SE工程</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuiqh1atrxj20r70lkmzl.jpg" alt=""></p><p>然后出现GroupID和ArtifactID填写，这两个是什么呢？</p><h4 id="GroupID和ArtifactID的意思"><a href="#GroupID和ArtifactID的意思" class="headerlink" title="GroupID和ArtifactID的意思"></a>GroupID和ArtifactID的意思</h4><blockquote><p>转载：<a href="https://blog.csdn.net/qq_30137611/article/details/76762070" target="_blank" rel="noopener">https://blog.csdn.net/qq_30137611/article/details/76762070</a></p><p><strong>GroupId</strong>和<strong>ArtifactId</strong>被统称为“坐标”是为了保证项目唯一性而提出的，如果你要把你项目弄到maven本地仓库去，你想要找到你的项目就必须根据这两个id去查找。  　　</p><p><strong>GroupId</strong>一般分为多个段，这里我只说两段，第一段为域，第二段为公司名称。域又分为org、com、cn等等许多，其中org为非营利组织，com为商业组织。举个apache公司的tomcat项目例子：这个项目的<strong>GroupId</strong>是org.apache，它的域是org（因为tomcat是非营利项目），公司名称是apache，<strong>ArtifactId</strong>是tomcat。  </p><p>比如我创建一个项目，我一般会将<strong>GroupId</strong>设置为cn.mht，cn表示域为中国，mht是我个人姓名缩写，<strong>ArtifactId</strong>设置为testProj，表示你这个项目的名称是testProj，依照这个设置，在你创建Maven工程后，新建包的时候，包结构最好是<strong>cn.zr.testProj</strong>打头的，如果有个StudentDao[Dao层的]，它的全路径就是<strong>cn.zr.testProj</strong>.dao.StudentDao</p></blockquote><p>然后我自己的，<strong>GroupId</strong>一般就写com.hs</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuipxw4ot2j20ox0kdmxx.jpg" alt="">然后next会出现这个，user setting file 就是你自己maven的配置文件路径，local repository就是你自己设置的本地仓库路径</p><h4 id="新建好的目录结构都什么意思"><a href="#新建好的目录结构都什么意思" class="headerlink" title="新建好的目录结构都什么意思"></a>新建好的目录结构都什么意思</h4><p>然后一直next，这里会一直加载你依赖的包资源，这里点箭头的地方<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuiq04znzdj21fw0n2e81.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuiq24x9zxj20cq09ltcc.jpg" alt=""></p><p>新建好的项目，结构就是这样，跟不用maven创建的目录结构完全不一样，有点难受，然后自己百度了一大堆教程吧，自己也记录一下，com.hs下的都是快速模板的测试代码，可以删了</p><table><thead><tr><th style="text-align:left">src/main/java</th><th style="text-align:left">项目的java源代码</th></tr></thead><tbody><tr><td style="text-align:left">src/main/resources</td><td style="text-align:left">项目的资源，比如SSM框架的核心文件，property文件</td></tr><tr><td style="text-align:left">src/test/java</td><td style="text-align:left">项目的测试类，</td></tr><tr><td style="text-align:left">src/test/resources</td><td style="text-align:left">测试使用的资源</td></tr><tr><td style="text-align:left">pom.xml</td><td style="text-align:left">就是你写依赖包的地方</td></tr></tbody></table><p>然后你就会发现，创建好的结果没有resources目录，这个就需要自己创建了，首先自己在java同级层级，创建一个resources文件夹，test同理这样<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuiqdfki88j21330jxdqy.jpg" alt=""></p><h3 id="2-用模板快速创建Java-EE工程"><a href="#2-用模板快速创建Java-EE工程" class="headerlink" title="2.用模板快速创建Java EE工程"></a>2.用模板快速创建Java EE工程</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuiqi7ng4lj20r10llacn.jpg" alt=""></p><p>然后会同样出现上面的几步</p><h3 id="3-不用快速模板生成工程"><a href="#3-不用快速模板生成工程" class="headerlink" title="3.不用快速模板生成工程"></a>3.不用快速模板生成工程</h3><p>把生成的图里的，方框里的√，不要勾选就可以了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为什么要用maven呢，一方面jar包方便，另一方面以后工作中肯定要用到，现在就先学习学习，然后自己也在网上找了很多的教程，每个教程都各有特点，然后我自己就给自己总结了一个教程，做一个记录。&lt;/p&gt;
    
    </summary>
    
      <category term="idea" scheme="http://heshangcode.coding.me/categories/idea/"/>
    
    
      <category term="idea" scheme="http://heshangcode.coding.me/tags/idea/"/>
    
      <category term="maven" scheme="http://heshangcode.coding.me/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（一）Java基础知识复习</title>
    <link href="http://heshangcode.coding.me/2018/08/22/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0/"/>
    <id>http://heshangcode.coding.me/2018/08/22/Spring学习笔记（一）Java基础知识复习/</id>
    <published>2018-08-22T11:27:38.000Z</published>
    <updated>2018-08-23T05:44:31.666Z</updated>
    
    <content type="html"><![CDATA[<p>对象的创建方式、获取对象并且进行比较、==和equals的区别、单例模式(饿汉和懒汉)、对象的初始化数据操作、数组的数据初始化操作有几种、各个类型的初始值是什么，User u1 = new User();这句话包含的知识点、无参构造函数和有参构造函数</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>学习spring的时候，都是用的maven项目学习，idea如何创建maven项目教程，<a href="http://heshangcode.coding.me/2018/08/22/idea%E5%88%9B%E5%BB%BAmaven%E9%A1%B9%E7%9B%AE/">传送门</a></p><p>[TOC]</p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuitw4f66gj209q0a8tbv.jpg" alt=""></p><h3 id="2-需要的jar包"><a href="#2-需要的jar包" class="headerlink" title="2.需要的jar包"></a>2.需要的jar包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-对象的创建方式"><a href="#3-对象的创建方式" class="headerlink" title="3.对象的创建方式"></a>3.对象的创建方式</h3><ul><li><p>使用new关键字实例化对象</p></li><li><p>使用Class_forName实例化对象</p><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> String user_name;</span><br><span class="line">   <span class="keyword">private</span> Integer user_id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CreateObject.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对象的创建方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CreateObject</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 使用new关键字实例化对象</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      User u = <span class="keyword">new</span> User();</span><br><span class="line">      System.out.println(u);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 使用Class_forName实例化对象</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> ClassNotFoundException</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> IllegalAccessException</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> InstantiationException</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException, IllegalAccessException, InstantiationException </span>&#123;</span><br><span class="line">      User u = (User) Class.forName(<span class="string">"com.hs.model.User"</span>).newInstance();   <span class="comment">//com.hs.model.User为类的全路径，newInstance()实例化对象</span></span><br><span class="line">      System.out.println(u);</span><br><span class="line">      u.setUser_name(<span class="string">"悟空"</span>);</span><br><span class="line">      System.out.println(u.getUser_name());</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-获取对象并且进行比较"><a href="#4-获取对象并且进行比较" class="headerlink" title="4.获取对象并且进行比较"></a>4.获取对象并且进行比较</h3><ul><li>new 一次，就产生一个新的对象，两个对象都是不一样的，都是新的</li><li>对象每次都可以是一样的、同一个实例</li></ul><p>GetObject.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取对象并且进行比较</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetObject</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 考查知识点，对象每次都可以是新的</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      User u1 = <span class="keyword">this</span>.getUser();</span><br><span class="line">      User u2 = <span class="keyword">this</span>.getUser();</span><br><span class="line">      System.out.println(u1);</span><br><span class="line">      System.out.println(u2);</span><br><span class="line">      System.out.println(u1 == u2);   <span class="comment">//结果是false</span></span><br><span class="line">      System.out.println(u1.equals(u2));  <span class="comment">//结果是false</span></span><br><span class="line">      <span class="comment">//百度==和equals比较的是什么？是内存地址，如果对象(都是继承了object(里面有equals方法))里重写equals，又是什么结果，</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">//new 一次，就产生一个新的对象(内存地址不一样)，两个对象都是不一样的，都是新的</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 考查知识点，对象每次都可以是一样的、同一个实例</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      User u1 = <span class="keyword">this</span>.getUser02();</span><br><span class="line">      User u2 = <span class="keyword">this</span>.getUser02();</span><br><span class="line">      System.out.println(u1);</span><br><span class="line">      System.out.println(u2);</span><br><span class="line">      System.out.println(u1 == u2);   <span class="comment">//结果是true</span></span><br><span class="line">      System.out.println(u1.equals(u2));  <span class="comment">//结果是true</span></span><br><span class="line">      <span class="comment">//百度==和equals比较的是什么？是内存地址，如果对象(都是继承了object(里面有equals方法))里重写equals，又是什么结果，</span></span><br><span class="line">      u1.setUser_name(<span class="string">"悟空"</span>);</span><br><span class="line"></span><br><span class="line">      System.out.println(u2.getUser_name());  <span class="comment">//输出悟空，为什么会这样？设计到一个叫引用传递的</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> User u1 = <span class="keyword">new</span> User();    <span class="comment">//设计模式-单例的设计 饿汉(不管你用不用，我都先创建好),加了一个static，表示这是一个共享数据</span></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> User <span class="title">getUser02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.u1;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//懒汉(你用我才创建)---线程不安全</span></span><br><span class="line">   <span class="comment">/*private static User u2;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   public User getUser002() &#123;</span></span><br><span class="line"><span class="comment">      if (u2 == null) &#123;</span></span><br><span class="line"><span class="comment">         u2 = new User();</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">      return this.u2;</span></span><br><span class="line"><span class="comment">   &#125;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-和equals的区别"><a href="#5-和equals的区别" class="headerlink" title="5.==和equals的区别"></a>5.==和equals的区别</h3><ol><li><p>==是判断两个变量或实例是不是指向同一个内存空间<br>   equals是判断两个变量或实例所指向的内存空间的值是不是相同 </p></li><li><p>==是指对内存地址进行比较<br>   equals()是对字符串的内容进行比较</p></li><li><p>==指引用是否相同<br>   equals()指的是值是否相同</p></li><li><p>如果对象(都是继承了object(里面有equals方法))里重写equals了，又是不同结果</p></li></ol><h3 id="6-单例模式-设计模式"><a href="#6-单例模式-设计模式" class="headerlink" title="6.单例模式-设计模式"></a>6.单例模式-设计模式</h3><ul><li><p>饿汉:不管你用不用，我都先创建好</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> User u1 = <span class="keyword">new</span> User();    <span class="comment">//加了一个static，表示这是一个共享数据</span></span><br></pre></td></tr></table></figure></li><li><p>懒汉：你用我才创建，线程不安全</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> User u2;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> User <span class="title">getUser002</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (u2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">         u2 = <span class="keyword">new</span> User();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.u2;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="7-对象的初始化数据操作"><a href="#7-对象的初始化数据操作" class="headerlink" title="7.对象的初始化数据操作"></a>7.对象的初始化数据操作</h3><ol><li>构造函数—初始化数据</li><li>Setter方法</li><li>如果对象的属性不是private，可以实例化对象.属性=xx赋值</li></ol><p>InitObject.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 构造函数—初始化数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   User u1 = <span class="keyword">new</span> User();</span><br><span class="line">   <span class="comment">/*这一句话设计到的知识点：</span></span><br><span class="line"><span class="comment">   new 开辟一块堆内存空间</span></span><br><span class="line"><span class="comment">   User(); 构造函数</span></span><br><span class="line"><span class="comment">         1.创建对象</span></span><br><span class="line"><span class="comment">         2.对数据进行初始化操作</span></span><br><span class="line"><span class="comment">   u1: 在栈内存中定义了一个变量指向了堆内存空间</span></span><br><span class="line"><span class="comment">   * */</span></span><br><span class="line">   <span class="comment">/*构造函数知识点：</span></span><br><span class="line"><span class="comment">   1.默认有一个无参构造函数</span></span><br><span class="line"><span class="comment">   2.若写了一个有参构造函数，覆盖了默认的无参，直接new User()报错</span></span><br><span class="line"><span class="comment">   3.第2点解决办法就是，再写一次无参构造函数</span></span><br><span class="line"><span class="comment">   4.每个构造函数默认一个super(),不写也有，并且得在首行</span></span><br><span class="line"><span class="comment">   * */</span></span><br><span class="line">   System.out.println(u1.getUser_name());  <span class="comment">//初始化的数据为空</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * setter方法初始化数据，其实如果属性不private，可以直接对象的变量.属性赋值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   User u1 = <span class="keyword">new</span> User();</span><br><span class="line">   u1.setUser_id(<span class="number">200</span>);</span><br><span class="line">   u1.setUser_name(<span class="string">"八戒"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-数组的初始化操作有几种"><a href="#8-数组的初始化操作有几种" class="headerlink" title="8.数组的初始化操作有几种"></a>8.数组的初始化操作有几种</h3><ol><li>动态初始化</li><li>静态初始化</li></ol><p>InitObject.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Test</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="comment">//动态初始化</span></span><br><span class="line">   <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">   <span class="comment">//char[] arr = new char[3];</span></span><br><span class="line">   System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">   <span class="comment">//静态初始化</span></span><br><span class="line">   <span class="keyword">boolean</span>[] arr2 = &#123;<span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">true</span>&#125;;   <span class="comment">//下面的那种简写</span></span><br><span class="line">   <span class="keyword">boolean</span>[] arr3 = <span class="keyword">new</span> <span class="keyword">boolean</span>[]&#123;<span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">true</span>&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-数组各个类型的初始值-默认值"><a href="#9-数组各个类型的初始值-默认值" class="headerlink" title="9.数组各个类型的初始值(默认值)"></a>9.数组各个类型的初始值(默认值)</h3><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">默认值</th></tr></thead><tbody><tr><td style="text-align:center">int</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">short</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">byte</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">float</td><td style="text-align:center">0.0f</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">0.0d</td></tr><tr><td style="text-align:center">long</td><td style="text-align:center">0L</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center">false</td></tr><tr><td style="text-align:center">char</td><td style="text-align:center">‘/uoooo’(就是一个空白的)</td></tr><tr><td style="text-align:center">String</td><td style="text-align:center">null</td></tr></tbody></table><p>10.User u1 = new User();这句话包含的知识点</p><ol><li>new 开辟一块堆内存空间</li><li>User(); 构造函数<pre><code>1.创建对象2.对数据进行初始化操作</code></pre></li><li>u1: 在栈内存中定义了一个变量指向了堆内存空间</li></ol><h3 id="11-无参构造函数和有参构造函数"><a href="#11-无参构造函数和有参构造函数" class="headerlink" title="11.无参构造函数和有参构造函数"></a>11.无参构造函数和有参构造函数</h3><ol><li>默认有一个无参构造函数</li><li>若写了一个有参构造函数，覆盖了默认的无参，直接new User()报错</li><li>第2点解决办法就是，再写一次无参构造函数</li><li>每个构造函数默认一个super(),不写也有，并且得在首行</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对象的创建方式、获取对象并且进行比较、==和equals的区别、单例模式(饿汉和懒汉)、对象的初始化数据操作、数组的数据初始化操作有几种、各个类型的初始值是什么，User u1 = new User();这句话包含的知识点、无参构造函数和有参构造函数&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（十二）踩过的坑（400、500异常）</title>
    <link href="http://heshangcode.coding.me/2018/08/21/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91%EF%BC%88400%E3%80%81500%E5%BC%82%E5%B8%B8%EF%BC%89/"/>
    <id>http://heshangcode.coding.me/2018/08/21/SpringMvc学习笔记（十二）踩过的坑（400、500异常）/</id>
    <published>2018-08-21T05:58:15.000Z</published>
    <updated>2018-08-23T05:57:47.882Z</updated>
    
    <content type="html"><![CDATA[<p>一些经常遇见的报400、500的错误，如果要用到HttpServletRequest这些包的，idea中springmvc文件上传的文件会在out里路径有，修改项目名字，运行报错</p><a id="more"></a><h3 id="1-400异常"><a href="#1-400异常" class="headerlink" title="1.400异常"></a>1.400异常</h3><h4 id="1-当你不传递要去数据的时候-那么会报400错误，没有传递hs-tomcat的数据"><a href="#1-当你不传递要去数据的时候-那么会报400错误，没有传递hs-tomcat的数据" class="headerlink" title="1.当你不传递要去数据的时候,那么会报400错误，没有传递hs=tomcat的数据"></a>1.当你不传递要去数据的时候,那么会报400错误，没有传递hs=tomcat的数据</h4><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuhahscjoyj20w708l0td.jpg" alt=""></p><h4 id="2-后台接收数据，数据类型转换失败"><a href="#2-后台接收数据，数据类型转换失败" class="headerlink" title="2.后台接收数据，数据类型转换失败"></a>2.后台接收数据，数据类型转换失败</h4><p>接收的数据类型是Integer，但是传过去的是字符串</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuhao0krh3j21cy07jaal.jpg" alt=""></p><h3 id="2-500异常"><a href="#2-500异常" class="headerlink" title="2.500异常"></a>2.500异常</h3><p>当你修改一个项目的名字，然后运行的时候会报这个错误，只需要把out里的缓存删掉，然后从新运行即可</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuhap4su4gj21cm0q8to0.jpg" alt=""></p><h3 id="3-映射路径相同的"><a href="#3-映射路径相同的" class="headerlink" title="3.映射路径相同的"></a>3.映射路径相同的</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuhadnnqzfj20oa032t90.jpg" alt=""></p><p>模棱两可错误，controller里有两个相同的映射路径，/cy42/test03存在在两个方法里</p><h3 id="4-cannot-resolve-symbol-‘HttpServletRequest’"><a href="#4-cannot-resolve-symbol-‘HttpServletRequest’" class="headerlink" title="4.cannot resolve symbol ‘HttpServletRequest’"></a>4.cannot resolve symbol ‘HttpServletRequest’</h3><p>IDEA异常 cannot resolve symbol ‘HttpServletRequest’,找不到HttpServletRequest这些包，在idea中需要添加tomcat的Libraries，eclipse不需用</p><h3 id="5-tomcat控制台-localhost-log-等意思"><a href="#5-tomcat控制台-localhost-log-等意思" class="headerlink" title="5.tomcat控制台 localhost log 等意思"></a>5.tomcat控制台 localhost log 等意思</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuh9oatk2oj20ii022747.jpg" alt=""><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuh9pitbuzj20fe0cv0ve.jpg" alt=""></p><h3 id="6-部署项目到tomcat的时候，发现没有你的项目"><a href="#6-部署项目到tomcat的时候，发现没有你的项目" class="headerlink" title="6.部署项目到tomcat的时候，发现没有你的项目"></a>6.部署项目到tomcat的时候，发现没有你的项目</h3><p>复制了一个module，发现部署项目到tomcat，然后没有你的项目，这样解决</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuh9t42am8j20fe0adwey.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuh9tituf6j20fe096q47.jpg" alt=""></p><p>部署项目的区别<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuh9v0iuqoj20fe090jtv.jpg" alt=""></p><h3 id="7-项目命名的时候不能用点"><a href="#7-项目命名的时候不能用点" class="headerlink" title="7.项目命名的时候不能用点"></a>7.项目命名的时候不能用点</h3><p>导入项目的时候会出现这个情况，点代表层级文件</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuhasej40uj20aq01kmx9.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一些经常遇见的报400、500的错误，如果要用到HttpServletRequest这些包的，idea中springmvc文件上传的文件会在out里路径有，修改项目名字，运行报错&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（十一）拦截器专题</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E6%8B%A6%E6%88%AA%E5%99%A8%E4%B8%93%E9%A2%98/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（十一）拦截器专题/</id>
    <published>2018-08-20T15:12:20.000Z</published>
    <updated>2018-08-23T05:57:43.689Z</updated>
    
    <content type="html"><![CDATA[<p> 拦截器就是过滤器的一种, 拦截器有且只能拦截Controller层(Servlet) ，本文实现一个登录拦截器，没有登录就不能访问登录之后的页面。</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fugl251u8rj20ch0gyaap.jpg" alt=""></p><h3 id="2-拦截器"><a href="#2-拦截器" class="headerlink" title="2.拦截器"></a>2.拦截器</h3><p>Java Web阶段学习过滤器</p><ul><li>实现javax.servlet.Filter接口</li><li>过滤器是在服务器启动的时候就对齐进行实例化操作,如果你的过滤器错误,那么服务将无法启动,所以整个程序无法运行<ul><li>init 初始化数据</li><li>doFilter(ServletRequest req , ServletResponse resp, ChainFilter chain)<ul><li>强制类型转换 HttpServletRequest request = (HttpServletRequest)req;</li><li>关键的代码  chain.doFilter(req,resp); <ul><li>访问下一个过滤器或者资源</li></ul></li></ul></li><li>destroy 服务器关闭</li></ul></li></ul><p>在web.xml中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-patterns</span>&gt;</span>过滤的路径,我们自己可以设置规则 *.jsp *.html /*<span class="tag">&lt;/<span class="name">url-patterns</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>servlet过滤器名字<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>拦截器 : 理解为 拦截器就是过滤器的一种, 拦截器有且只能拦截Controller层(Servlet) @Controller的注解层次</p><h3 id="3-如何建立拦截器"><a href="#3-如何建立拦截器" class="headerlink" title="3.如何建立拦截器"></a>3.如何建立拦截器</h3><h4 id="1-新建一个类"><a href="#1-新建一个类" class="headerlink" title="1.新建一个类"></a>1.新建一个类</h4><p>MyInterceptor.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="comment">///一般情况下,我们只是关心preHandle方法即可</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"preHandle:访问Controller之前执行"</span>);</span><br><span class="line"><span class="comment">//    return false;   //阻止访问下一个</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;    <span class="comment">//访问下一个拦截器或资源</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"postHandle:访问到正确的视图之前"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"afterCompletion:JSP页面加载完毕之后执行"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-配置文件"><a href="#2-配置文件" class="headerlink" title="2.配置文件"></a>2.配置文件</h4><p>在springmvc.xml中加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--7.配置自定义的拦截器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--下面这个可以有多个--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--拦截的路径，类似url-patterns--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/sys/**"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/vip/**"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--排除路径，以下路径不经过拦截器处理--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">"/vip/test02/"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--使用哪个拦截器处理--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.hs.interceptor.MyInterceptor"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-新建controller"><a href="#3-新建controller" class="headerlink" title="3.新建controller"></a>3.新建controller</h4><p>DemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/sys/test01"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"Controller层test01方法"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/result01"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/vip/test02"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"Controller层test02方法"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/result02"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-页面代码"><a href="#4-页面代码" class="headerlink" title="4.页面代码"></a>4.页面代码</h4><p>result01.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">System.out.println</span>("<span class="attr">JSP-result01</span>页面");%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>resulet01.jsp<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>result02.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">System.out.println</span>("<span class="attr">JSP-result02</span>页面");%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>resulet02.jsp<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试，在浏览器网址栏依次输入/sys/test01，/vip/test02，查看控制台输出</p><h3 id="4-实现一个登录拦截器"><a href="#4-实现一个登录拦截器" class="headerlink" title="4.实现一个登录拦截器"></a>4.实现一个登录拦截器</h3><h5 id="配置springmvc-xml"><a href="#配置springmvc-xml" class="headerlink" title="配置springmvc.xml"></a>配置springmvc.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--登录设置的拦截器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/sys/**"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">"/sys/login"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.hs.interceptor.LoginInterceptor"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="LoginController-java"><a href="#LoginController-java" class="headerlink" title="LoginController.java"></a>LoginController.java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/sys"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 在地址栏输入/sys/login 进行请求转发跳转页面</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/login"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 表单提交验证，存入session</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@PostMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String account,HttpServletRequest request)</span></span>&#123;</span><br><span class="line">      System.out.println(account);</span><br><span class="line">      HttpSession session  = request.getSession();</span><br><span class="line">      <span class="keyword">if</span>(<span class="string">"admin"</span>.equals(account))&#123;</span><br><span class="line">         session.setAttribute(<span class="string">"session_user"</span>, account);</span><br><span class="line">         <span class="comment">//redirect重定向跳到另外一个controller里</span></span><br><span class="line">         <span class="keyword">return</span> <span class="string">"redirect:/sys/main"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/login"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 登录成功重定向到这个controller，然后这个controller请求转发到一个页面</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/main"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/result01"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="login-jsp"><a href="#login-jsp" class="headerlink" title="login.jsp"></a>login.jsp</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"login"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"account"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里有一个很大的坑，自己纠结了很久，action的路径问题！！！</p><p>如果写sys/login是绝对路径，login相对路径，因为请求转发到login.jsp,但是网址栏还是在sys这层，表单提交要到login那个，要不然就用相对路径，要不然就是绝对路径，相对直接login就行，绝对路径就是要这样写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">   //项目的发布路径，例如<span class="attr">:</span>  /<span class="attr">rabc</span></span></span><br><span class="line"><span class="tag">   <span class="attr">String</span> <span class="attr">path</span> = <span class="string">request.getContextPath();</span></span></span><br><span class="line"><span class="tag">   /*</span></span><br><span class="line"><span class="tag">   全路径，形式如下<span class="attr">:</span> <span class="attr">http:</span>//<span class="attr">127.0.0.1:8001</span>/<span class="attr">rbac</span>/</span></span><br><span class="line"><span class="tag">   <span class="attr">request.getScheme</span>()      ——&gt;</span> http 获取协议</span><br><span class="line">   request.getServerName()  --&gt; 127.0.0.1 获取服务名</span><br><span class="line">   request.getServerPort()  --&gt; 8001 获取端口号</span><br><span class="line">   path                     --&gt; /rbac 获取访问的路径 路</span><br><span class="line">   */</span><br><span class="line">   String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">%--</span></span></span><br><span class="line">   &lt;base/&gt;标签解决路径问题</span><br><span class="line">   参考文章:http://www.cnblogs.com/muqianying/archive/2012/03/16/2400280.html</span><br><span class="line">--%&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--action的路径问题，sys</span>/<span class="attr">login</span>绝对路径，<span class="attr">login</span>相对路径，因为请求转发到<span class="attr">login.jsp</span>,但是网址栏还是在<span class="attr">sys</span>这层，表单提交要到<span class="attr">login</span>那个，要不然就用相对路径，要不然就是绝对路径，相对直接<span class="attr">login</span>就行，绝对就是这样上面那一大堆<span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"sys/login"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"account"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="LoginInterceptor-java，登录拦截器"><a href="#LoginInterceptor-java，登录拦截器" class="headerlink" title="LoginInterceptor.java，登录拦截器"></a>LoginInterceptor.java，登录拦截器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.handler.HandlerInterceptorAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录拦截器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginInterceptor</span> <span class="keyword">extends</span> <span class="title">HandlerInterceptorAdapter</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="comment">//1.获取HttpSession</span></span><br><span class="line">      HttpSession session = request.getSession();</span><br><span class="line">      <span class="comment">//2.判断是否登录</span></span><br><span class="line">      <span class="keyword">if</span> (session.getAttribute(<span class="string">"session_user"</span>) == <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="comment">//3.防止浏览器的后退功能</span></span><br><span class="line">         response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line">         PrintWriter out = response.getWriter();</span><br><span class="line"></span><br><span class="line">         out.write(<span class="string">"&lt;script&gt;"</span>);</span><br><span class="line">         out.write(<span class="string">"alert('您还没有登录过该系统，请登录！！！');"</span>);</span><br><span class="line">         out.write(<span class="string">"window.top.location.href='"</span>+request.getContextPath()+<span class="string">"/sys/login'"</span>);</span><br><span class="line">         out.write(<span class="string">"&lt;/script&gt;"</span>);</span><br><span class="line"></span><br><span class="line">         out.flush();</span><br><span class="line">         out.close();</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 拦截器就是过滤器的一种, 拦截器有且只能拦截Controller层(Servlet) ，本文实现一个登录拦截器，没有登录就不能访问登录之后的页面。&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（十）异常处理专题</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%EF%BC%89%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E4%B8%93%E9%A2%98/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（十）异常处理专题/</id>
    <published>2018-08-20T14:33:56.000Z</published>
    <updated>2018-08-23T05:57:38.734Z</updated>
    
    <content type="html"><![CDATA[<p>遇见异常跳转到自己设置的页面，注解方式处理局部异常，监听Controller类的全局异常处理，springmvc配置统一的简单异常处理，监听所有的页面异常</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fugk5dczdzj20cd0dbgm3.jpg" alt=""></p><h3 id="2-局部异常处理"><a href="#2-局部异常处理" class="headerlink" title="2.局部异常处理"></a>2.局部异常处理</h3><p>ExceptionDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 经典异常处理_注解方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionDemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/ex01"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> i = <span class="number">10</span> / <span class="number">0</span>; <span class="comment">//会报这个错误Request processing failed; nested exception is java.lang.ArithmeticException: / by zero</span></span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/result"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 注解方式，处理异常，程序遇见这个异常，就会执行注解里的内容，</span></span><br><span class="line"><span class="comment">    *作用范围只有本类有效！！！</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="comment">//里面可以写多个异常，用,隔开，，，其实也可以总的写一个异常Exception,class</span></span><br><span class="line">   <span class="meta">@ExceptionHandler</span>(value = &#123;ArithmeticException.class&#125;)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">exception01</span><span class="params">(ArithmeticException ex)</span> </span>&#123;</span><br><span class="line">      ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line"></span><br><span class="line">      mav.addObject(<span class="string">"ex"</span>, ex);</span><br><span class="line"></span><br><span class="line">      mav.setViewName(<span class="string">"jsp/error"</span>);</span><br><span class="line">      <span class="keyword">return</span> mav;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>error.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope.message&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">id</span>=<span class="string">"debug"</span>&gt;</span>[DEBUG]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"error"</span> <span class="attr">style</span>=<span class="string">"display: none"</span>&gt;</span></span><br><span class="line">   $&#123;requestScope.ex&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    window.onload = function () &#123;</span></span><br><span class="line"><span class="undefined">        document.getElementById("debug").onclick = function () &#123;</span></span><br><span class="line"><span class="undefined">           document.getElementById("error").style.display = "block";</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-ControllerAdvice监听所有Controller类的异常"><a href="#3-ControllerAdvice监听所有Controller类的异常" class="headerlink" title="3.@ControllerAdvice监听所有Controller类的异常"></a>3.@ControllerAdvice监听所有Controller类的异常</h3><p>ExceptionAllController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ControllerAdvice这个表示监听只要有Controller的类的异常，同样如果自身类有注解监听，满足谁近就运行谁的原则</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionAllController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 监听Controller类的异常方式一</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> ex</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ExceptionHandler</span>(value = &#123;Exception.class&#125;)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">exception01</span><span class="params">(Exception ex)</span> </span>&#123;</span><br><span class="line">      ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line"></span><br><span class="line">      mav.addObject(<span class="string">"ex"</span>, ex);</span><br><span class="line"></span><br><span class="line">      mav.setViewName(<span class="string">"jsp/error02"</span>);</span><br><span class="line">      <span class="keyword">return</span> mav;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ExceptionDemoController.java把上面那个局部处理异常注释就行，</p><p>error02.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">本页是全局的异常监听跳转页面，本次监听到的异常是</span><br><span class="line">$&#123;requestScope.ex&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-springmvc-xml配置简单处理异常"><a href="#4-springmvc-xml配置简单处理异常" class="headerlink" title="4.springmvc.xml配置简单处理异常"></a>4.springmvc.xml配置简单处理异常</h3><p>springmvc.xml加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--6.统一的简单异常处理，监听所有的页面异常--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"simpleMappingExceptionResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--出现异常，默认跳转的页面--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultErrorView"</span> <span class="attr">value</span>=<span class="string">"jsp/error"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--类似于这个mav.addObject("ex", ex);--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exceptionAttribute"</span> <span class="attr">value</span>=<span class="string">"ex"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--异常映射，若出现下列异常，就跳转相应的页面，不跳默认的--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exceptionMappings"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"ArithmeticException"</span>&gt;</span>jsp/error<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"ArrayIndexOutOfBoundsException"</span>&gt;</span>jsp/error<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"RuntimeException"</span>&gt;</span>jsp/error<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"Exception"</span>&gt;</span>jsp/error<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-自定义处理异常"><a href="#5-自定义处理异常" class="headerlink" title="5.自定义处理异常"></a>5.自定义处理异常</h3><p>ExceptionAllController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 监听Controller类的异常方式二自定义异常</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> ex</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ExceptionHandler</span>(value = &#123;Exception.class&#125;)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">exception02</span><span class="params">(Exception ex, Model model)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//判断类的类型</span></span><br><span class="line">      <span class="keyword">if</span> (ex <span class="keyword">instanceof</span> ArrayIndexOutOfBoundsException) &#123;</span><br><span class="line">         model.addAttribute(<span class="string">"message"</span>, <span class="string">"数组越界异常"</span>);<span class="comment">//给客户看的</span></span><br><span class="line">         model.addAttribute(<span class="string">"ex"</span>, ex);</span><br><span class="line"><span class="comment">//       return "jsp/error";</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (ex <span class="keyword">instanceof</span> ArithmeticException) &#123;</span><br><span class="line">         model.addAttribute(<span class="string">"message"</span>, <span class="string">"运算异常"</span>);    <span class="comment">//给客户看的</span></span><br><span class="line">         model.addAttribute(<span class="string">"ex"</span>, ex);</span><br><span class="line"><span class="comment">//       return "jsp/error";</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//处理自定义异常</span></span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/error"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 监听Controller类的异常方式二自定义异常____返回json格式</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> ex</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ExceptionHandler</span>(value = &#123;Exception.class&#125;)</span><br><span class="line">   <span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Map&lt;String,Object&gt; <span class="title">exception03</span><span class="params">(Exception ex)</span> </span>&#123;</span><br><span class="line">      Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String,Object&gt;();</span><br><span class="line">      <span class="comment">//判断类的类型</span></span><br><span class="line">      <span class="keyword">if</span> (ex <span class="keyword">instanceof</span> ArrayIndexOutOfBoundsException) &#123;</span><br><span class="line">         map.put(<span class="string">"message"</span>, <span class="string">"数组越界异常"</span>);<span class="comment">//给客户看的</span></span><br><span class="line">         map.put(<span class="string">"ex"</span>, ex);</span><br><span class="line"><span class="comment">//       return "jsp/error";</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (ex <span class="keyword">instanceof</span> ArithmeticException) &#123;</span><br><span class="line">         map.put(<span class="string">"message"</span>, <span class="string">"运算异常"</span>);    <span class="comment">//给客户看的</span></span><br><span class="line">         map.put(<span class="string">"ex"</span>, ex);</span><br><span class="line"><span class="comment">//       return "jsp/error";</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//处理自定义异常</span></span><br><span class="line">      <span class="keyword">return</span> map;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>result.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">没有遇见注解里的异常，成功跳转</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;遇见异常跳转到自己设置的页面，注解方式处理局部异常，监听Controller类的全局异常处理，springmvc配置统一的简单异常处理，监听所有的页面异常&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（九）文件上传和下载</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B9%9D%EF%BC%89%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（九）文件上传和下载/</id>
    <published>2018-08-20T13:53:40.000Z</published>
    <updated>2018-08-23T05:57:06.498Z</updated>
    
    <content type="html"><![CDATA[<p>文件上传和下载，在上传的操作之后，跳转到下载页面</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fugihqoo1oj20bz0biq3b.jpg" alt=""><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fugiipepjoj20br0dedgm.jpg" alt=""></p><h3 id="2-上传操作"><a href="#2-上传操作" class="headerlink" title="2.上传操作"></a>2.上传操作</h3><p>单文件的上传</p><ul><li>form表单传递数据</li><li>请求必须为POST请求</li><li>使用二进制流的方式传递数据 enctype=”multipart/form-data”</li><li>文件域 &lt;input type=”file” name=”myfile”/&gt;</li><li>上传的工具有两种：<ul><li>Servlet3.0</li><li>Commons-FileUpload<ul><li>commons-fileupload.jar</li><li>commons-io.jar</li></ul></li></ul></li></ul><h4 id="第一步：配置解析器"><a href="#第一步：配置解析器" class="headerlink" title="第一步：配置解析器"></a>第一步：配置解析器</h4><p>springmvc.xml加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--5.使用上传的解析器，如果发现是上传操作，会自动使用该解析器帮我们完成相应的操作--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--该ID为固定值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--设置上传文件编码--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--简写方式 标签p c注入</span></span><br><span class="line"><span class="comment">   p:defaultEncoding = "UTF-8"--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--设置文件上传最大值024*200即200K--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"20971520"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--缓存，读取文件到内存中最大的字节数，可以不设置--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxInMemorySize"</span> <span class="attr">value</span>=<span class="string">"2048"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--延时提高上传效率，一个类似懒加载的属性--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"resolveLazily"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果是图片资源，还要配置静态资源排除，见之前的笔记</p><h4 id="第二步：前端页面表单和前台验证"><a href="#第二步：前端页面表单和前台验证" class="headerlink" title="第二步：前端页面表单和前台验证"></a>第二步：前端页面表单和前台验证</h4><p>file.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>单文件上传<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"upload01"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span> <span class="attr">id</span>=<span class="string">"uploadForm"</span>&gt;</span></span><br><span class="line">   标题：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">   文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"myfile"</span> <span class="attr">id</span>=<span class="string">"myfile"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"resource/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    $(function () &#123;</span></span><br><span class="line"><span class="undefined">        //元素选择器</span></span><br><span class="line"><span class="undefined">        $("button").click(function () &#123;</span></span><br><span class="line"><span class="undefined">            //1.获取上传文件的对象，是数组，获取的第一个</span></span><br><span class="line"><span class="undefined">            var myfile = $("#myfile").prop("files")[0];</span></span><br><span class="line"><span class="undefined">            //2.判断文件是否有</span></span><br><span class="line"><span class="undefined">            if (myfile) &#123;</span></span><br><span class="line"><span class="undefined">                //3.获取文件名称</span></span><br><span class="line"><span class="undefined">                var fileName = myfile.name;</span></span><br><span class="line"><span class="undefined">                //4.获取文件的后缀名称</span></span><br><span class="line"><span class="undefined">                var ext = fileName.substring(fileName.lastIndexOf(".") + 1);</span></span><br><span class="line"><span class="undefined">                //5.设置允许上传的文件后缀名称</span></span><br><span class="line"><span class="undefined">                var allowFileTypes = ["jpg", "png", "gif", "jpeg", "dmp", "rar"];</span></span><br><span class="line"><span class="undefined">                //6.设置一个标识，用来做判断</span></span><br><span class="line"><span class="undefined">                var flag = false;</span></span><br><span class="line"><span class="undefined">                //循环判断上传格式是否正确</span></span><br><span class="line"><span class="undefined">                for (var i = 0; i &lt; allowFileTypes.length; i++) &#123;</span></span><br><span class="line"><span class="undefined">                    if (ext == allowFileTypes[i]) &#123;</span></span><br><span class="line"><span class="undefined">                        flag = true;</span></span><br><span class="line"><span class="undefined">                        break;</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">                if (!flag) &#123;</span></span><br><span class="line"><span class="undefined">                    alert("您上传的文件格式不正确，允许的格式为：" + allowFileTypes.join("  |  "));</span></span><br><span class="line"><span class="undefined">                    return false;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">                //7.判断文件的大小</span></span><br><span class="line"><span class="undefined">                if (myfile.size &gt; 20 * 1024 * 1024) &#123;</span></span><br><span class="line"><span class="undefined">                    alert("您上传的文件过大，请重新选择")</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">                return false;</span></span><br><span class="line"><span class="undefined">                //8.表单提交</span></span><br><span class="line"><span class="undefined">                $&#123;"#uploadForm"&#125;.submit();</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            else &#123;</span></span><br><span class="line"><span class="undefined">                alert("请选择您要上传的文件");</span></span><br><span class="line"><span class="undefined">                return false;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="第三步：后台处理"><a href="#第三步：后台处理" class="headerlink" title="第三步：后台处理"></a>第三步：后台处理</h4><p>UploadDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FilenameUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件上传操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadDemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 单文件上传_标准写法</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> title</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> myfile</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@PostMapping</span>(<span class="string">"/upload01"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">(String title, MultipartFile myfile, HttpServletRequest request)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">      ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line"><span class="comment">//    System.out.println(title);</span></span><br><span class="line">      <span class="comment">//1.获取上传文件的名称</span></span><br><span class="line">      String fileName = myfile.getOriginalFilename();</span><br><span class="line">      mav.addObject(<span class="string">"fileName"</span>, fileName);</span><br><span class="line">      <span class="comment">//2.判断文件名称是否有值,isEmpty是这个字符串的length=0为true</span></span><br><span class="line">      <span class="keyword">if</span> (!fileName.isEmpty()) &#123;</span><br><span class="line">         <span class="comment">//3.获取服务器的绝对路径</span></span><br><span class="line">         String path = request.getServletContext().getRealPath(<span class="string">"/upload"</span>);</span><br><span class="line">         <span class="comment">//4.建立联系</span></span><br><span class="line">         File folder = <span class="keyword">new</span> File(path);</span><br><span class="line">         <span class="comment">//5.判断该文件是否存在，不存在则创建文件夹</span></span><br><span class="line">         <span class="keyword">if</span> (!folder.exists()) &#123;</span><br><span class="line">            folder.mkdirs();    <span class="comment">//创建文件夹</span></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//6,获取上传文件的后缀名称</span></span><br><span class="line">         String ext = FilenameUtils.getExtension(fileName);</span><br><span class="line">         <span class="comment">//7.创建新的文件名称</span></span><br><span class="line">         <span class="comment">//String newFileName = UUID.randomUUID().toString() + "." + ext;</span></span><br><span class="line">         <span class="comment">//或者用时间戳创建名称</span></span><br><span class="line">         String newFileName = <span class="keyword">new</span> Date().getTime() + <span class="string">"_"</span> + <span class="keyword">new</span> Random().nextInt(<span class="number">100000</span>) + <span class="string">"."</span> + ext;</span><br><span class="line">         mav.addObject(<span class="string">"newFileName"</span>, newFileName);</span><br><span class="line"><span class="comment">//       System.out.println(newFileName);</span></span><br><span class="line">         <span class="comment">//8.文件上传，File.separator为斜线</span></span><br><span class="line">         myfile.transferTo(<span class="keyword">new</span> File(path + File.separator + newFileName));</span><br><span class="line">      &#125;</span><br><span class="line">      mav.addObject(<span class="string">"hs"</span>, <span class="string">"和尚"</span>);</span><br><span class="line">      mav.setViewName(<span class="string">"jsp/result"</span>);</span><br><span class="line">      <span class="comment">/*System.out.println("测试是否可以获取正常的数据:"+title);</span></span><br><span class="line"><span class="comment">      System.out.println("=====");</span></span><br><span class="line"><span class="comment">      System.out.println("文件的MIME类型 :"+myfile.getContentType());</span></span><br><span class="line"><span class="comment">      System.out.println("文件NAME属性对应的值 :"+myfile.getName());</span></span><br><span class="line"><span class="comment">      System.out.println("上传文件的名称 :"+myfile.getOriginalFilename());</span></span><br><span class="line"><span class="comment">      System.out.println("上传文件的大小 :"+myfile.getSize());*/</span></span><br><span class="line">      <span class="keyword">return</span> mav;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-下载操作"><a href="#3-下载操作" class="headerlink" title="3.下载操作"></a>3.下载操作</h3><h4 id="方式一：直接超链接方式显示"><a href="#方式一：直接超链接方式显示" class="headerlink" title="方式一：直接超链接方式显示"></a>方式一：直接超链接方式显示</h4><p>result.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>直接超链接方式显示<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"upload/$&#123;newFileName &#125;"</span>&gt;</span>$&#123;fileName &#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="方式二：HTML5-中的download属性"><a href="#方式二：HTML5-中的download属性" class="headerlink" title="方式二：HTML5 中的download属性"></a>方式二：HTML5 中的download属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>HTML5 中的download属性<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"upload/$&#123;newFileName &#125;"</span> <span class="attr">download</span>=<span class="string">"$&#123;fileName &#125;"</span>&gt;</span>$&#123;fileName &#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="方式三：使用流的方法–到控制层处理"><a href="#方式三：使用流的方法–到控制层处理" class="headerlink" title="方式三：使用流的方法–到控制层处理"></a>方式三：使用流的方法–到控制层处理</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>使用流的方法--到控制层处理，发送请求到控制器，download<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"download?newFileName=$&#123;newFileName&#125;&amp;fileName=$&#123;fileName&#125;"</span>&gt;</span>$&#123;fileName &#125;下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在springmvc.xml声明处理byte数组，在解决@ResponseBody在IE浏览器的BUG问题上面</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--解决下载的时候转换问题,声明处理byte数组--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.ByteArrayHttpMessageConverter"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>DownloadDemoController.java处理流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件下载操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownloadDemoController</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 文件下载，使用流的方法</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> newFileName</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> fileName</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/download"</span>)</span><br><span class="line">   <span class="keyword">public</span> ResponseEntity&lt;<span class="keyword">byte</span>[]&gt; test02(String newFileName, String fileName, HttpServletRequest request) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">      <span class="comment">//获取服务端的绝对路径</span></span><br><span class="line">      String path = request.getServletContext().getRealPath(<span class="string">"/upload/"</span>);</span><br><span class="line"></span><br><span class="line">      HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">      <span class="comment">//设置相应的内容为流</span></span><br><span class="line">      headers.setContentType(MediaType.TEXT_EVENT_STREAM);</span><br><span class="line">      <span class="comment">//设置下载的名称--和中文乱码的问题</span></span><br><span class="line">      headers.setContentDispositionFormData(<span class="string">"attachment"</span>,</span><br><span class="line">            <span class="keyword">new</span> String(fileName.getBytes(<span class="string">"UTF-8"</span>), <span class="string">"ISO8859-1"</span>)</span><br><span class="line">            );</span><br><span class="line">      <span class="comment">//找到文件</span></span><br><span class="line">      File file = <span class="keyword">new</span> File(path + File.separator + newFileName);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;<span class="keyword">byte</span>[]&gt;(FileUtils.readFileToByteArray(file),<span class="comment">/*将文件转换为byte数组*/</span></span><br><span class="line">            headers,</span><br><span class="line">            HttpStatus.CREATED);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文件上传和下载，在上传的操作之后，跳转到下载页面&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
</feed>
