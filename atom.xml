<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>heshang</title>
  <icon>https://www.gravatar.com/avatar/ff0fad28696a2c137c9f67b2f18f359f</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://heshangcode.coding.me/"/>
  <updated>2018-08-23T05:57:55.902Z</updated>
  <id>http://heshangcode.coding.me/</id>
  
  <author>
    <name>和尚</name>
    <email>914727235@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring学习笔记（四）Spring的注入方式-Setter方式推荐</title>
    <link href="http://heshangcode.coding.me/2018/08/23/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89Spring%E7%9A%84%E6%B3%A8%E5%85%A5%E6%96%B9%E5%BC%8F-Setter%E6%96%B9%E5%BC%8F%E6%8E%A8%E8%8D%90/"/>
    <id>http://heshangcode.coding.me/2018/08/23/Spring学习笔记（四）Spring的注入方式-Setter方式推荐/</id>
    <published>2018-08-23T04:57:39.000Z</published>
    <updated>2018-08-23T05:57:55.902Z</updated>
    
    <content type="html"><![CDATA[<p>Setter注入的3种方式，读取属性文件取值，赋值：普通值、数组，list，set、Map和Properties、自定义类型、接口实现类(接口回调)</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fujk0q7go6j209f0czn0z.jpg" alt="">model里的内容跟上篇一样，再写get、set方法、toString方法即可，pom.xml见前几篇</p><h3 id="2-Setter注入的3种方式"><a href="#2-Setter注入的3种方式" class="headerlink" title="2.Setter注入的3种方式"></a>2.Setter注入的3种方式</h3><p>Setter注入方式，必须要提供setter方法，并且有三种方式:标准方式，缩写，p方式(也有p方式引用)</p><h3 id="3-普通值赋值"><a href="#3-普通值赋值" class="headerlink" title="3.普通值赋值"></a>3.普通值赋值</h3><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Setter注入方式，必须要提供setter方法，并且有三种方式:标准方式，缩写，p方式(也有p方式引用)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user01"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span> <span class="attr">p:user_name</span>=<span class="string">"八戒"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--这个name的值不是属性值，是setter方法后面的值首字母小写--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user_id"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>100<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;property name="user_name" value="悟空"/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-加载属性文件"><a href="#4-加载属性文件" class="headerlink" title="4.加载属性文件"></a>4.加载属性文件</h3><p>jdbc.properties</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.mysql.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.mysql.url=jdbc:mysql://localhost:3306/cy42_mss</span><br><span class="line">jdbc.mysql.username=root</span><br><span class="line">jdbc.mysql.password=root</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--3.读取属性文件！！$&#123;key&#125;获取值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-数组、list、map、set、properties"><a href="#5-数组、list、map、set、properties" class="headerlink" title="5.数组、list、map、set、properties"></a>5.数组、list、map、set、properties</h3><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user01"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span> <span class="attr">p:hobbySet-ref</span>=<span class="string">"hobbySetRef"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hobbyArray"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--这里面的标签，赋值跟构造函数初始化一样的--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--可以采用构造函数初始化一样，也可以引用util:list--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hobbyList"</span> <span class="attr">ref</span>=<span class="string">"hobbyListRef"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"map"</span> <span class="attr">ref</span>=<span class="string">"mapRef"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"class"</span>&gt;</span>$&#123;jdbc.mysql.driver&#125;<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--这些util，不会咋用可以百度，util:xxx,list-class可以不用写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:list</span> <span class="attr">id</span>=<span class="string">"hobbyListRef"</span> <span class="attr">list-class</span>=<span class="string">"java.util.ArrayList"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">util:list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:set</span> <span class="attr">id</span>=<span class="string">"hobbySetRef"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">util:set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:map</span> <span class="attr">id</span>=<span class="string">"mapRef"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"class"</span> <span class="attr">value</span>=<span class="string">"计算机"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>和尚<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">util:map</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-自定义类型"><a href="#6-自定义类型" class="headerlink" title="6.自定义类型"></a>6.自定义类型</h3><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user01"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hsRole"</span> <span class="attr">ref</span>=<span class="string">"role"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"role"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.Role"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"role_name"</span> <span class="attr">value</span>=<span class="string">"超级管理员"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-接口实现类-接口回调-以后经常用！！"><a href="#7-接口实现类-接口回调-以后经常用！！" class="headerlink" title="7.接口实现类(接口回调)(以后经常用！！)"></a>7.接口实现类(接口回调)(以后经常用！！)</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user01"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span> <span class="attr">p:hsTest-ref</span>=<span class="string">"testImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"testImpl"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.ITestImpl"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-测试"><a href="#8-测试" class="headerlink" title="8.测试"></a>8.测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user01"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   user.getHsTest().print();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Setter注入的3种方式，读取属性文件取值，赋值：普通值、数组，list，set、Map和Properties、自定义类型、接口实现类(接口回调)&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（三）Spring的注入方式-构造函数注入</title>
    <link href="http://heshangcode.coding.me/2018/08/23/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89Spring%E7%9A%84%E6%B3%A8%E5%85%A5%E6%96%B9%E5%BC%8F-%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E6%B3%A8%E5%85%A5/"/>
    <id>http://heshangcode.coding.me/2018/08/23/Spring学习笔记（三）Spring的注入方式-构造函数注入/</id>
    <published>2018-08-23T04:10:04.000Z</published>
    <updated>2018-08-23T05:48:28.166Z</updated>
    
    <content type="html"><![CDATA[<p>在类名前面加@Component进行实例化类、在beans.xml中用构造函数实例化对象——普通值、数组，list，set、Map和Properties、自定义类型实例化、给自定义类型初始化数据、给自定义类型初始化数据——推荐引用方式、<strong>接口注入实现类(实现接口回调)重点啊！！！</strong></p><a id="more"></a>SpringMvcSSM框架<br><br>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a><br><br>[TOC]<br><br><br><br>### 1.目录结构(需要的jar包均在环境搭建中有)<br><br><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fujideyeitj20bf0ci78w.jpg" alt=""><br><br>### 2.在类名前面加@Component进行实例化类<br><br>@Component//(value = “hsUser”)  //相当于<bean class="com.hs.model.User" id="user"> (value = “hsUser”)就是id=hsUser<br><br>beans.xml<br><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd"</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">     <span class="comment">&lt;!--1.启动Spring注解--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--2.扫描注解--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.hs"</span>/&gt;</span> </span><br><span class="line">      </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span><span class="comment">//(value = "hsUser")  //相当于&lt;bean class="com.hs.model.User" id="user"/&gt; (value = "hsUser")就是id=hsUser</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> String user_name;</span><br><span class="line">   <span class="keyword">private</span> Integer user_id;</span><br><span class="line">   <span class="keyword">private</span> String[] hobbyArray;</span><br><span class="line">   <span class="keyword">private</span> List&lt;String&gt; hobbyList;</span><br><span class="line">   <span class="keyword">private</span> Set&lt;String&gt; hobbySet;</span><br><span class="line">   <span class="keyword">private</span> Map&lt;String, Object&gt; map;</span><br><span class="line">   <span class="keyword">private</span> Properties properties;  <span class="comment">//Map&lt;string,string&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> Role hsRole;    <span class="comment">//这是自定义类型</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> ITest hsTest;   <span class="comment">//定义接口变量</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 这里通过bean.xml构造函数初始化</span></span><br><span class="line"><span class="comment">    * 1.ITestImpl testImpl = new ITestImpl();</span></span><br><span class="line"><span class="comment">    * 2.hsTest = testImpl</span></span><br><span class="line"><span class="comment">    * 3.ITest hsTest = new ITestImpl();</span></span><br><span class="line"><span class="comment">    * 典型的接口回调嘛</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> hsTest</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(ITest hsTest)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hsTest = hsTest;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Role hsRole)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hsRole = hsRole;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Map&lt;String, Object&gt; map, Properties properties)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.map = map;</span><br><span class="line">      <span class="keyword">this</span>.properties = properties;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer user_id, String user_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String user_name, Integer user_id, String[] hobbyArray, List&lt;String&gt; hobbyList, Set&lt;String&gt; hobbySet)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">      <span class="keyword">this</span>.hobbyArray = hobbyArray;</span><br><span class="line">      <span class="keyword">this</span>.hobbyList = hobbyList;</span><br><span class="line">      <span class="keyword">this</span>.hobbySet = hobbySet;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> String[] getHobbyArray() &#123;</span><br><span class="line">      <span class="keyword">return</span> hobbyArray;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHobbyArray</span><span class="params">(String[] hobbyArray)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hobbyArray = hobbyArray;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getHobbyList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hobbyList;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHobbyList</span><span class="params">(List&lt;String&gt; hobbyList)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hobbyList = hobbyList;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getHobbySet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hobbySet;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHobbySet</span><span class="params">(Set&lt;String&gt; hobbySet)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hobbySet = hobbySet;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> map;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMap</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.map = map;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Properties <span class="title">getProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> properties;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProperties</span><span class="params">(Properties properties)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.properties = properties;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Role <span class="title">getHsRole</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hsRole;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHsRole</span><span class="params">(Role hsRole)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hsRole = hsRole;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> ITest <span class="title">getHsTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> hsTest;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHsTest</span><span class="params">(ITest hsTest)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hsTest = hsTest;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">            <span class="string">"user_name='"</span> + user_name + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">", user_id="</span> + user_id +</span><br><span class="line">            <span class="string">", hobbyArray="</span> + Arrays.toString(hobbyArray) +</span><br><span class="line">            <span class="string">", hobbyList="</span> + hobbyList +</span><br><span class="line">            <span class="string">", hobbySet="</span> + hobbySet +</span><br><span class="line">            <span class="string">", map="</span> + map +</span><br><span class="line">            <span class="string">", properties="</span> + properties +</span><br><span class="line">            <span class="string">", hsRole="</span> + hsRole +</span><br><span class="line">            <span class="string">", hsTest="</span> + hsTest +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ConstructorObjectTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试在类名前面加<span class="doctag">@Component</span>进行实例化类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-在beans-xml中用构造函数实例化对象——普通值"><a href="#3-在beans-xml中用构造函数实例化对象——普通值" class="headerlink" title="3.在beans.xml中用构造函数实例化对象——普通值"></a>3.在beans.xml中用构造函数实例化对象——普通值</h3><p>在spring中实例化对象，把类的构造函数设置成private，依然可以被实例化，在java中就不能被实例化</p><p>只要见到<bean>标签就是实例化。。。</bean></p><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Integer user_id, String user_name)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">     <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--User 类通过构造函数实例化--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user01"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--index=""(可以省略)是设置参数的索引(0开始)，是第几个 type可以不用写</span></span><br><span class="line"><span class="comment">name就是构造函数的参数值，value就是赋的值</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--翻译constructor：构造函数--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"user_id"</span> <span class="attr">value</span>=<span class="string">"100"</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">type</span>=<span class="string">"java.lang.Integer"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"user_name"</span> <span class="attr">index</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">value</span>&gt;</span>悟空<span class="tag">&lt;/<span class="name">value</span>&gt;</span> <span class="comment">&lt;!--上面是简写--&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--设置空是&lt;null/&gt;--&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ConstructorObjectTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试在beans.xml中用构造函数实例化对象——普通值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user01"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-构造函数实例化数组，list，set"><a href="#4-构造函数实例化数组，list，set" class="headerlink" title="4.构造函数实例化数组，list，set"></a>4.构造函数实例化数组，list，set</h3><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String user_name, Integer user_id, String[] hobbyArray, List&lt;String&gt; hobbyList, Set&lt;String&gt; hobbySet)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">   <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   <span class="keyword">this</span>.hobbyArray = hobbyArray;</span><br><span class="line">   <span class="keyword">this</span>.hobbyList = hobbyList;</span><br><span class="line">   <span class="keyword">this</span>.hobbySet = hobbySet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--构造函数实例化数组，list，set--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user02"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"user_name"</span> <span class="attr">value</span>=<span class="string">"八戒"</span> <span class="attr">index</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"user_id"</span> <span class="attr">value</span>=<span class="string">"200"</span> <span class="attr">index</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hobbyArray"</span> <span class="attr">index</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hobbyList"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hobbySet"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ConstructorObjectTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试在beans.xml中用构造函数实例化对象——数组，list，set</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user02"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-构造函数实例化Map和Properties"><a href="#5-构造函数实例化Map和Properties" class="headerlink" title="5.构造函数实例化Map和Properties"></a>5.构造函数实例化Map和Properties</h3><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Map&lt;String, Object&gt; map, Properties properties)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.map = map;</span><br><span class="line">   <span class="keyword">this</span>.properties = properties;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--构造函数实例化Map，Properties--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user03"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"hs"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>和尚<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--缩写--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"悟空"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--给Properties赋值--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"age"</span>&gt;</span>100<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"RuntimeExceiption"</span>&gt;</span>error<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试在beans.xml中用构造函数实例化对象——Map和Properties</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test04</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user03"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-初始化自定义类型"><a href="#6-初始化自定义类型" class="headerlink" title="6.初始化自定义类型"></a>6.初始化自定义类型</h3><p>Role.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> String role_name;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Role</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Role</span><span class="params">(String role_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.role_name = role_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getRole_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> role_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_name</span><span class="params">(String role_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.role_name = role_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"Role&#123;"</span> +</span><br><span class="line">            <span class="string">"role_name='"</span> + role_name + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Role hsRole;    <span class="comment">//这是自定义类型</span></span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--构造函数初始化自定义类型--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user04"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hsRole"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"role1"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.Role"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义类型实例化，给User类中的Role类的变量，进行实例化操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test05</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user04"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   <span class="comment">//下面这个证明User类的那个bean Role role,范围只能在User里</span></span><br><span class="line">   <span class="comment">/*Role role1 = ac.getBean("role1", Role.class);</span></span><br><span class="line"><span class="comment">   System.out.println(role1);*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-构造函数实例化自定义类型"><a href="#7-构造函数实例化自定义类型" class="headerlink" title="7.构造函数实例化自定义类型"></a>7.构造函数实例化自定义类型</h3><p>Role.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Role</span><span class="params">(String role_name)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.role_name = role_name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(Role hsRole)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.hsRole = hsRole;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--构造函数实例化自定义类型--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user05"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hsRole"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.hs.model.Role"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"role_name"</span> <span class="attr">value</span>=<span class="string">"超级管理员"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 给自定义类型初始化数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test06</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">User user = ac.getBean(<span class="string">"user05"</span>,User.class);</span><br><span class="line">System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-推荐引用方式——构造函数实例化自定义类型"><a href="#8-推荐引用方式——构造函数实例化自定义类型" class="headerlink" title="8.推荐引用方式——构造函数实例化自定义类型"></a>8.推荐引用方式——构造函数实例化自定义类型</h3><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--构造函数实例化自定义类型——推荐引用方式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user06"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--&lt;constructor-arg name="hsRole"&gt;</span></span><br><span class="line"><span class="comment">      &amp;lt;!&amp;ndash;引用bean，下面简写&amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">      &lt;ref bean="role2"/&gt;</span></span><br><span class="line"><span class="comment">   &lt;/constructor-arg&gt;--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hsRole"</span> <span class="attr">ref</span>=<span class="string">"role2"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"role2"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.Role"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"role_name"</span> <span class="attr">value</span>=<span class="string">"引用方式推荐"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 给自定义类型初始化数据——推荐引用方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test07</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user06"</span>,User.class);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   Role role = ac.getBean(<span class="string">"role2"</span>, Role.class);</span><br><span class="line">   System.out.println(role);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-构造函数实现接口回调，接口注入实现类（重点！！！）"><a href="#9-构造函数实现接口回调，接口注入实现类（重点！！！）" class="headerlink" title="9.构造函数实现接口回调，接口注入实现类（重点！！！）"></a>9.构造函数实现接口回调，接口注入实现类（重点！！！）</h3><p>ITest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ITest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ITestImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ITestImpl</span> <span class="keyword">implements</span> <span class="title">ITest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"Hello Word!!"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> ITest hsTest;   <span class="comment">//定义接口变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这里通过bean.xml构造函数初始化</span></span><br><span class="line"><span class="comment"> * 1.ITestImpl testImpl = new ITestImpl();</span></span><br><span class="line"><span class="comment"> * 2.hsTest = testImpl</span></span><br><span class="line"><span class="comment"> * 3.ITest hsTest = new ITestImpl();</span></span><br><span class="line"><span class="comment"> * 典型的接口回调嘛</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> hsTest</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(ITest hsTest)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">this</span>.hsTest = hsTest;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--实现接口回调，接口注入实现类--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这里通过bean.xml构造函数初始化</span></span><br><span class="line"><span class="comment"> 1.ITestImpl testImpl = new ITestImpl();</span></span><br><span class="line"><span class="comment"> 2.hsTest = testImpl --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user07"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"hsTest"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"testImpl"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--ITestImpl testImpl = new ITestImpl();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"testImpl"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.ITestImpl"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接口注入实现类，实现接口回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test08</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">   User user = ac.getBean(<span class="string">"user07"</span>,User.class);</span><br><span class="line">   user.getHsTest().print();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></bean>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在类名前面加@Component进行实例化类、在beans.xml中用构造函数实例化对象——普通值、数组，list，set、Map和Properties、自定义类型实例化、给自定义类型初始化数据、给自定义类型初始化数据——推荐引用方式、&lt;strong&gt;接口注入实现类(实现接口回调)重点啊！！！&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（二）Spring的环境搭建</title>
    <link href="http://heshangcode.coding.me/2018/08/23/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89Spring%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://heshangcode.coding.me/2018/08/23/Spring学习笔记（二）Spring的环境搭建/</id>
    <published>2018-08-23T03:39:12.000Z</published>
    <updated>2018-08-23T05:44:42.297Z</updated>
    
    <content type="html"><![CDATA[<p>Spring个人概述，核心配置文件(.xml)里的bean标签什么时候被实例化，获取对象的两种方式，Bean的范围说明，beans.xml就是spring框架提供的容器(管理Bean Bean就是对象 必须通过类 类必须可能进行实例化)</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>[TOC]</p><h3 id="1-Spring个人概述"><a href="#1-Spring个人概述" class="headerlink" title="1.Spring个人概述"></a>1.Spring个人概述</h3><ul><li><p>Spring是轻量级别开源的框架(重量级别EJB)，解决并发也比较优秀</p></li><li><p>重点：Spring是一个 IoC(DI) 和 AOP 的 容器框架（JAVAEE框架的集合）:它主要是管理Bean的生命周期使用</p><p>XML完成对Bean的实例化</p><p>注解也是完成对Bean的实例化操作</p></li><li><p>Spring是一站式服务</p><ul><li><p>什么是IoC？</p><ul><li><p>控制反转：控制反转（Inversion of Control，缩写为IoC），是<a href="https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B" target="_blank" rel="noopener">面向对象编程</a>中的一种设计原则，可以用来减低计算机代码之间的<a href="https://baike.baidu.com/item/%E8%80%A6%E5%90%88%E5%BA%A6" target="_blank" rel="noopener">耦合度</a>。其中最常见的方式叫做依赖注入（Dependency Injection，简称DI），还有一种方式叫“依赖查找”（Dependency Lookup）。通过控制反转，对象在被创建的时候，由一个调控系统内所有对象的外界实体，将其所依赖的对象的引用传递给它。也可以说，依赖被注入到对象中。</p></li><li><p>注入方式：<a href="https://zhidao.baidu.com/question/489516951.html" target="_blank" rel="noopener">https://zhidao.baidu.com/question/489516951.html</a></p></li><li><p>举例子说明控制反转</p><p>| 和尚是一个编剧写剧本，当我写该剧本的时候，我并不需要考虑谁合适演，但是我应该有权利决定谁来演 |<br>| ———————————————————— |<br>| 导演出现，编剧将选人物的权利移交出去，控制权移交出去         |<br>| 出品人出现，导演将选人物的权利移交出去，控制权移交出去       |<br>| 点餐                                                         |<br>| 最开始：自己去食堂，自己去打菜，自己吃                       |<br>| 外卖出现：只是需要发送一个请求告知外卖小哥，我想吃什么，那么外卖小哥为我们服务，将需要的菜取回来给我们品尝 |<br>| java体现                                                     |<br>| 容器框架(Bean的生命周期创建 使用 销毁)                       |<br>| 管理Bean，也就是创建对象(也就是注入)(就不用我们自己new创建对象了) |</p></li></ul></li></ul></li></ul><h3 id="2-项目结构"><a href="#2-项目结构" class="headerlink" title="2.项目结构"></a>2.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fujhwuaa3nj20bk0a7n0w.jpg" alt=""></p><h3 id="3-Spring环境搭建"><a href="#3-Spring环境搭建" class="headerlink" title="3.Spring环境搭建"></a>3.Spring环境搭建</h3><p>框架流程都是：先找jar包=&gt;入口文件(核心配置文件beans.xml官方推荐的名字是applicationContext.xml)=&gt;使用API调用过程=&gt;测试</p><h3 id="4-jar包"><a href="#4-jar包" class="headerlink" title="4.jar包"></a>4.jar包</h3><p>pom.xml加入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aspects --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context-support --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-expression --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-tx --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-核心配置文件-入口"><a href="#5-核心配置文件-入口" class="headerlink" title="5.核心配置文件(入口)"></a>5.核心配置文件(入口)</h3><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> String user_name;</span><br><span class="line">   <span class="keyword">private</span> Integer user_id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--beans.xml就是spring框架提供的容器--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--管理Bean Bean就是对象 必须通过类 类必须可能进行实例化--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--下面那个代码相当于</span></span><br><span class="line"><span class="comment">   java代码</span></span><br><span class="line"><span class="comment">   HashMap map1 = new HashMap();   HashMapjava内置的类</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--&lt;bean id="map1" class="java.util.HashMap"&gt;&lt;/bean&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--static User u1 = new User();只有一个new对象，Bean的范围说明——scope="singleton"默认为单例模式,scope可以不用写--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"u1"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span> <span class="attr">scope</span>=<span class="string">"singleton"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--User u2 = new User(); prototype多例模式，需要对象就new一个，每个不同--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"u2"</span> <span class="attr">class</span>=<span class="string">"com.hs.model.User"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-使用API调用过程"><a href="#6-使用API调用过程" class="headerlink" title="6.使用API调用过程"></a>6.使用API调用过程</h3><p>获取对象两种方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User user = (User) ac.getBean(<span class="string">"u1"</span>);</span><br><span class="line">User user = ac.getBean(<span class="string">"u1"</span>, User.class);</span><br></pre></td></tr></table></figure><p>ObjectTest.java</p><p>读取核心配置文件 == 发现了Bean标签就会对class对应的类进行实例化操作</p><p> ApplicationContext ac = new ClassPathXmlApplicationContext(“beans.xml”);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 同一个类的实例化对象比较</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//    1.读取核心配置文件 == 发现了Bean标签就会对class对应的类进行实例化操作</span></span><br><span class="line">      ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"><span class="comment">//    u1就是bean标签里的id的名字</span></span><br><span class="line">      User user1 = ac.getBean(<span class="string">"u1"</span>, User.class);</span><br><span class="line">      User user2 = ac.getBean(<span class="string">"u2"</span>, User.class);</span><br><span class="line">      System.out.println(user1);</span><br><span class="line">      System.out.println(user2);</span><br><span class="line">      System.out.println(user1==user2);   <span class="comment">//false</span></span><br><span class="line">      System.out.println(user1.equals(user2));    <span class="comment">//false</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="7-bean的范围说明"><a href="#7-bean的范围说明" class="headerlink" title="7.bean的范围说明"></a>7.bean的范围说明</h3><p>ObjectTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Bean的范围说明——默认为单例模式</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//    1.读取核心配置文件 == 发现了Bean标签就会对class对应的类进行实例化操作</span></span><br><span class="line">      ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">      User user1 = ac.getBean(<span class="string">"u1"</span>, User.class);</span><br><span class="line">      User user2 = ac.getBean(<span class="string">"u1"</span>, User.class);</span><br><span class="line">      System.out.println(user1);</span><br><span class="line">      System.out.println(user2);</span><br><span class="line">      System.out.println(user1==user2);   <span class="comment">//true</span></span><br><span class="line">      System.out.println(user1.equals(user2));    <span class="comment">//true</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Bean的范围说明——设置多例模式</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//    1.读取核心配置文件 == 发现了Bean标签就会对class对应的类进行实例化操作</span></span><br><span class="line">      ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"beans.xml"</span>);</span><br><span class="line"></span><br><span class="line">      User user1 = ac.getBean(<span class="string">"u2"</span>, User.class);</span><br><span class="line">      User user2 = ac.getBean(<span class="string">"u2"</span>, User.class);</span><br><span class="line">      System.out.println(user1);</span><br><span class="line">      System.out.println(user2);</span><br><span class="line">      System.out.println(user1==user2);   <span class="comment">//false</span></span><br><span class="line">      System.out.println(user1.equals(user2));    <span class="comment">//false</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring个人概述，核心配置文件(.xml)里的bean标签什么时候被实例化，获取对象的两种方式，Bean的范围说明，beans.xml就是spring框架提供的容器(管理Bean Bean就是对象 必须通过类 类必须可能进行实例化)&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>idea创建maven项目</title>
    <link href="http://heshangcode.coding.me/2018/08/22/idea%E5%88%9B%E5%BB%BAmaven%E9%A1%B9%E7%9B%AE/"/>
    <id>http://heshangcode.coding.me/2018/08/22/idea创建maven项目/</id>
    <published>2018-08-22T11:31:24.000Z</published>
    <updated>2018-08-23T05:54:45.081Z</updated>
    
    <content type="html"><![CDATA[<p>为什么要用maven呢，一方面jar包方便，另一方面以后工作中肯定要用到，现在就先学习学习，然后自己也在网上找了很多的教程，每个教程都各有特点，然后我自己就给自己总结了一个教程，做一个记录。</p><a id="more"></a><h3 id="1-用模板快速创建Java-SE工程"><a href="#1-用模板快速创建Java-SE工程" class="headerlink" title="1.用模板快速创建Java SE工程"></a>1.用模板快速创建Java SE工程</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuiqh1atrxj20r70lkmzl.jpg" alt=""></p><p>然后出现GroupID和ArtifactID填写，这两个是什么呢？</p><h4 id="GroupID和ArtifactID的意思"><a href="#GroupID和ArtifactID的意思" class="headerlink" title="GroupID和ArtifactID的意思"></a>GroupID和ArtifactID的意思</h4><blockquote><p>转载：<a href="https://blog.csdn.net/qq_30137611/article/details/76762070" target="_blank" rel="noopener">https://blog.csdn.net/qq_30137611/article/details/76762070</a></p><p><strong>GroupId</strong>和<strong>ArtifactId</strong>被统称为“坐标”是为了保证项目唯一性而提出的，如果你要把你项目弄到maven本地仓库去，你想要找到你的项目就必须根据这两个id去查找。  　　</p><p><strong>GroupId</strong>一般分为多个段，这里我只说两段，第一段为域，第二段为公司名称。域又分为org、com、cn等等许多，其中org为非营利组织，com为商业组织。举个apache公司的tomcat项目例子：这个项目的<strong>GroupId</strong>是org.apache，它的域是org（因为tomcat是非营利项目），公司名称是apache，<strong>ArtifactId</strong>是tomcat。  </p><p>比如我创建一个项目，我一般会将<strong>GroupId</strong>设置为cn.mht，cn表示域为中国，mht是我个人姓名缩写，<strong>ArtifactId</strong>设置为testProj，表示你这个项目的名称是testProj，依照这个设置，在你创建Maven工程后，新建包的时候，包结构最好是<strong>cn.zr.testProj</strong>打头的，如果有个StudentDao[Dao层的]，它的全路径就是<strong>cn.zr.testProj</strong>.dao.StudentDao</p></blockquote><p>然后我自己的，<strong>GroupId</strong>一般就写com.hs</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuipxw4ot2j20ox0kdmxx.jpg" alt="">然后next会出现这个，user setting file 就是你自己maven的配置文件路径，local repository就是你自己设置的本地仓库路径</p><h4 id="新建好的目录结构都什么意思"><a href="#新建好的目录结构都什么意思" class="headerlink" title="新建好的目录结构都什么意思"></a>新建好的目录结构都什么意思</h4><p>然后一直next，这里会一直加载你依赖的包资源，这里点箭头的地方<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuiq04znzdj21fw0n2e81.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuiq24x9zxj20cq09ltcc.jpg" alt=""></p><p>新建好的项目，结构就是这样，跟不用maven创建的目录结构完全不一样，有点难受，然后自己百度了一大堆教程吧，自己也记录一下，com.hs下的都是快速模板的测试代码，可以删了</p><table><thead><tr><th style="text-align:left">src/main/java</th><th style="text-align:left">项目的java源代码</th></tr></thead><tbody><tr><td style="text-align:left">src/main/resources</td><td style="text-align:left">项目的资源，比如SSM框架的核心文件，property文件</td></tr><tr><td style="text-align:left">src/test/java</td><td style="text-align:left">项目的测试类，</td></tr><tr><td style="text-align:left">src/test/resources</td><td style="text-align:left">测试使用的资源</td></tr><tr><td style="text-align:left">pom.xml</td><td style="text-align:left">就是你写依赖包的地方</td></tr></tbody></table><p>然后你就会发现，创建好的结果没有resources目录，这个就需要自己创建了，首先自己在java同级层级，创建一个resources文件夹，test同理这样<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuiqdfki88j21330jxdqy.jpg" alt=""></p><h3 id="2-用模板快速创建Java-EE工程"><a href="#2-用模板快速创建Java-EE工程" class="headerlink" title="2.用模板快速创建Java EE工程"></a>2.用模板快速创建Java EE工程</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuiqi7ng4lj20r10llacn.jpg" alt=""></p><p>然后会同样出现上面的几步</p><h3 id="3-不用快速模板生成工程"><a href="#3-不用快速模板生成工程" class="headerlink" title="3.不用快速模板生成工程"></a>3.不用快速模板生成工程</h3><p>把生成的图里的，方框里的√，不要勾选就可以了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为什么要用maven呢，一方面jar包方便，另一方面以后工作中肯定要用到，现在就先学习学习，然后自己也在网上找了很多的教程，每个教程都各有特点，然后我自己就给自己总结了一个教程，做一个记录。&lt;/p&gt;
    
    </summary>
    
      <category term="idea" scheme="http://heshangcode.coding.me/categories/idea/"/>
    
    
      <category term="idea" scheme="http://heshangcode.coding.me/tags/idea/"/>
    
      <category term="maven" scheme="http://heshangcode.coding.me/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习笔记（一）Java基础知识复习</title>
    <link href="http://heshangcode.coding.me/2018/08/22/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0/"/>
    <id>http://heshangcode.coding.me/2018/08/22/Spring学习笔记（一）Java基础知识复习/</id>
    <published>2018-08-22T11:27:38.000Z</published>
    <updated>2018-08-23T05:44:31.666Z</updated>
    
    <content type="html"><![CDATA[<p>对象的创建方式、获取对象并且进行比较、==和equals的区别、单例模式(饿汉和懒汉)、对象的初始化数据操作、数组的数据初始化操作有几种、各个类型的初始值是什么，User u1 = new User();这句话包含的知识点、无参构造函数和有参构造函数</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><p>学习spring的时候，都是用的maven项目学习，idea如何创建maven项目教程，<a href="http://heshangcode.coding.me/2018/08/22/idea%E5%88%9B%E5%BB%BAmaven%E9%A1%B9%E7%9B%AE/">传送门</a></p><p>[TOC]</p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuitw4f66gj209q0a8tbv.jpg" alt=""></p><h3 id="2-需要的jar包"><a href="#2-需要的jar包" class="headerlink" title="2.需要的jar包"></a>2.需要的jar包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-对象的创建方式"><a href="#3-对象的创建方式" class="headerlink" title="3.对象的创建方式"></a>3.对象的创建方式</h3><ul><li><p>使用new关键字实例化对象</p></li><li><p>使用Class_forName实例化对象</p><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> String user_name;</span><br><span class="line">   <span class="keyword">private</span> Integer user_id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CreateObject.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对象的创建方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CreateObject</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 使用new关键字实例化对象</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      User u = <span class="keyword">new</span> User();</span><br><span class="line">      System.out.println(u);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 使用Class_forName实例化对象</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> ClassNotFoundException</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> IllegalAccessException</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> InstantiationException</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> <span class="keyword">throws</span> ClassNotFoundException, IllegalAccessException, InstantiationException </span>&#123;</span><br><span class="line">      User u = (User) Class.forName(<span class="string">"com.hs.model.User"</span>).newInstance();   <span class="comment">//com.hs.model.User为类的全路径，newInstance()实例化对象</span></span><br><span class="line">      System.out.println(u);</span><br><span class="line">      u.setUser_name(<span class="string">"悟空"</span>);</span><br><span class="line">      System.out.println(u.getUser_name());</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-获取对象并且进行比较"><a href="#4-获取对象并且进行比较" class="headerlink" title="4.获取对象并且进行比较"></a>4.获取对象并且进行比较</h3><ul><li>new 一次，就产生一个新的对象，两个对象都是不一样的，都是新的</li><li>对象每次都可以是一样的、同一个实例</li></ul><p>GetObject.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取对象并且进行比较</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetObject</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 考查知识点，对象每次都可以是新的</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      User u1 = <span class="keyword">this</span>.getUser();</span><br><span class="line">      User u2 = <span class="keyword">this</span>.getUser();</span><br><span class="line">      System.out.println(u1);</span><br><span class="line">      System.out.println(u2);</span><br><span class="line">      System.out.println(u1 == u2);   <span class="comment">//结果是false</span></span><br><span class="line">      System.out.println(u1.equals(u2));  <span class="comment">//结果是false</span></span><br><span class="line">      <span class="comment">//百度==和equals比较的是什么？是内存地址，如果对象(都是继承了object(里面有equals方法))里重写equals，又是什么结果，</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">//new 一次，就产生一个新的对象(内存地址不一样)，两个对象都是不一样的，都是新的</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 考查知识点，对象每次都可以是一样的、同一个实例</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      User u1 = <span class="keyword">this</span>.getUser02();</span><br><span class="line">      User u2 = <span class="keyword">this</span>.getUser02();</span><br><span class="line">      System.out.println(u1);</span><br><span class="line">      System.out.println(u2);</span><br><span class="line">      System.out.println(u1 == u2);   <span class="comment">//结果是true</span></span><br><span class="line">      System.out.println(u1.equals(u2));  <span class="comment">//结果是true</span></span><br><span class="line">      <span class="comment">//百度==和equals比较的是什么？是内存地址，如果对象(都是继承了object(里面有equals方法))里重写equals，又是什么结果，</span></span><br><span class="line">      u1.setUser_name(<span class="string">"悟空"</span>);</span><br><span class="line"></span><br><span class="line">      System.out.println(u2.getUser_name());  <span class="comment">//输出悟空，为什么会这样？设计到一个叫引用传递的</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> User u1 = <span class="keyword">new</span> User();    <span class="comment">//设计模式-单例的设计 饿汉(不管你用不用，我都先创建好),加了一个static，表示这是一个共享数据</span></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> User <span class="title">getUser02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.u1;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//懒汉(你用我才创建)---线程不安全</span></span><br><span class="line">   <span class="comment">/*private static User u2;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   public User getUser002() &#123;</span></span><br><span class="line"><span class="comment">      if (u2 == null) &#123;</span></span><br><span class="line"><span class="comment">         u2 = new User();</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">      return this.u2;</span></span><br><span class="line"><span class="comment">   &#125;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-和equals的区别"><a href="#5-和equals的区别" class="headerlink" title="5.==和equals的区别"></a>5.==和equals的区别</h3><ol><li><p>==是判断两个变量或实例是不是指向同一个内存空间<br>   equals是判断两个变量或实例所指向的内存空间的值是不是相同 </p></li><li><p>==是指对内存地址进行比较<br>   equals()是对字符串的内容进行比较</p></li><li><p>==指引用是否相同<br>   equals()指的是值是否相同</p></li><li><p>如果对象(都是继承了object(里面有equals方法))里重写equals了，又是不同结果</p></li></ol><h3 id="6-单例模式-设计模式"><a href="#6-单例模式-设计模式" class="headerlink" title="6.单例模式-设计模式"></a>6.单例模式-设计模式</h3><ul><li><p>饿汉:不管你用不用，我都先创建好</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> User u1 = <span class="keyword">new</span> User();    <span class="comment">//加了一个static，表示这是一个共享数据</span></span><br></pre></td></tr></table></figure></li><li><p>懒汉：你用我才创建，线程不安全</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> User u2;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> User <span class="title">getUser002</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (u2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">         u2 = <span class="keyword">new</span> User();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.u2;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="7-对象的初始化数据操作"><a href="#7-对象的初始化数据操作" class="headerlink" title="7.对象的初始化数据操作"></a>7.对象的初始化数据操作</h3><ol><li>构造函数—初始化数据</li><li>Setter方法</li><li>如果对象的属性不是private，可以实例化对象.属性=xx赋值</li></ol><p>InitObject.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 构造函数—初始化数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   User u1 = <span class="keyword">new</span> User();</span><br><span class="line">   <span class="comment">/*这一句话设计到的知识点：</span></span><br><span class="line"><span class="comment">   new 开辟一块堆内存空间</span></span><br><span class="line"><span class="comment">   User(); 构造函数</span></span><br><span class="line"><span class="comment">         1.创建对象</span></span><br><span class="line"><span class="comment">         2.对数据进行初始化操作</span></span><br><span class="line"><span class="comment">   u1: 在栈内存中定义了一个变量指向了堆内存空间</span></span><br><span class="line"><span class="comment">   * */</span></span><br><span class="line">   <span class="comment">/*构造函数知识点：</span></span><br><span class="line"><span class="comment">   1.默认有一个无参构造函数</span></span><br><span class="line"><span class="comment">   2.若写了一个有参构造函数，覆盖了默认的无参，直接new User()报错</span></span><br><span class="line"><span class="comment">   3.第2点解决办法就是，再写一次无参构造函数</span></span><br><span class="line"><span class="comment">   4.每个构造函数默认一个super(),不写也有，并且得在首行</span></span><br><span class="line"><span class="comment">   * */</span></span><br><span class="line">   System.out.println(u1.getUser_name());  <span class="comment">//初始化的数据为空</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * setter方法初始化数据，其实如果属性不private，可以直接对象的变量.属性赋值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   User u1 = <span class="keyword">new</span> User();</span><br><span class="line">   u1.setUser_id(<span class="number">200</span>);</span><br><span class="line">   u1.setUser_name(<span class="string">"八戒"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-数组的初始化操作有几种"><a href="#8-数组的初始化操作有几种" class="headerlink" title="8.数组的初始化操作有几种"></a>8.数组的初始化操作有几种</h3><ol><li>动态初始化</li><li>静态初始化</li></ol><p>InitObject.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Test</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="comment">//动态初始化</span></span><br><span class="line">   <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">   <span class="comment">//char[] arr = new char[3];</span></span><br><span class="line">   System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">   <span class="comment">//静态初始化</span></span><br><span class="line">   <span class="keyword">boolean</span>[] arr2 = &#123;<span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">true</span>&#125;;   <span class="comment">//下面的那种简写</span></span><br><span class="line">   <span class="keyword">boolean</span>[] arr3 = <span class="keyword">new</span> <span class="keyword">boolean</span>[]&#123;<span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">true</span>&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-数组各个类型的初始值-默认值"><a href="#9-数组各个类型的初始值-默认值" class="headerlink" title="9.数组各个类型的初始值(默认值)"></a>9.数组各个类型的初始值(默认值)</h3><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">默认值</th></tr></thead><tbody><tr><td style="text-align:center">int</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">short</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">byte</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">float</td><td style="text-align:center">0.0f</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">0.0d</td></tr><tr><td style="text-align:center">long</td><td style="text-align:center">0L</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center">false</td></tr><tr><td style="text-align:center">char</td><td style="text-align:center">‘/uoooo’(就是一个空白的)</td></tr><tr><td style="text-align:center">String</td><td style="text-align:center">null</td></tr></tbody></table><p>10.User u1 = new User();这句话包含的知识点</p><ol><li>new 开辟一块堆内存空间</li><li>User(); 构造函数<pre><code>1.创建对象2.对数据进行初始化操作</code></pre></li><li>u1: 在栈内存中定义了一个变量指向了堆内存空间</li></ol><h3 id="11-无参构造函数和有参构造函数"><a href="#11-无参构造函数和有参构造函数" class="headerlink" title="11.无参构造函数和有参构造函数"></a>11.无参构造函数和有参构造函数</h3><ol><li>默认有一个无参构造函数</li><li>若写了一个有参构造函数，覆盖了默认的无参，直接new User()报错</li><li>第2点解决办法就是，再写一次无参构造函数</li><li>每个构造函数默认一个super(),不写也有，并且得在首行</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对象的创建方式、获取对象并且进行比较、==和equals的区别、单例模式(饿汉和懒汉)、对象的初始化数据操作、数组的数据初始化操作有几种、各个类型的初始值是什么，User u1 = new User();这句话包含的知识点、无参构造函数和有参构造函数&lt;/p&gt;
    
    </summary>
    
      <category term="Spring学习总结" scheme="http://heshangcode.coding.me/categories/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://heshangcode.coding.me/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（十二）踩过的坑（400、500异常）</title>
    <link href="http://heshangcode.coding.me/2018/08/21/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91%EF%BC%88400%E3%80%81500%E5%BC%82%E5%B8%B8%EF%BC%89/"/>
    <id>http://heshangcode.coding.me/2018/08/21/SpringMvc学习笔记（十二）踩过的坑（400、500异常）/</id>
    <published>2018-08-21T05:58:15.000Z</published>
    <updated>2018-08-23T05:57:47.882Z</updated>
    
    <content type="html"><![CDATA[<p>一些经常遇见的报400、500的错误，如果要用到HttpServletRequest这些包的，idea中springmvc文件上传的文件会在out里路径有，修改项目名字，运行报错</p><a id="more"></a><h3 id="1-400异常"><a href="#1-400异常" class="headerlink" title="1.400异常"></a>1.400异常</h3><h4 id="1-当你不传递要去数据的时候-那么会报400错误，没有传递hs-tomcat的数据"><a href="#1-当你不传递要去数据的时候-那么会报400错误，没有传递hs-tomcat的数据" class="headerlink" title="1.当你不传递要去数据的时候,那么会报400错误，没有传递hs=tomcat的数据"></a>1.当你不传递要去数据的时候,那么会报400错误，没有传递hs=tomcat的数据</h4><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuhahscjoyj20w708l0td.jpg" alt=""></p><h4 id="2-后台接收数据，数据类型转换失败"><a href="#2-后台接收数据，数据类型转换失败" class="headerlink" title="2.后台接收数据，数据类型转换失败"></a>2.后台接收数据，数据类型转换失败</h4><p>接收的数据类型是Integer，但是传过去的是字符串</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuhao0krh3j21cy07jaal.jpg" alt=""></p><h3 id="2-500异常"><a href="#2-500异常" class="headerlink" title="2.500异常"></a>2.500异常</h3><p>当你修改一个项目的名字，然后运行的时候会报这个错误，只需要把out里的缓存删掉，然后从新运行即可</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuhap4su4gj21cm0q8to0.jpg" alt=""></p><h3 id="3-映射路径相同的"><a href="#3-映射路径相同的" class="headerlink" title="3.映射路径相同的"></a>3.映射路径相同的</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuhadnnqzfj20oa032t90.jpg" alt=""></p><p>模棱两可错误，controller里有两个相同的映射路径，/cy42/test03存在在两个方法里</p><h3 id="4-cannot-resolve-symbol-‘HttpServletRequest’"><a href="#4-cannot-resolve-symbol-‘HttpServletRequest’" class="headerlink" title="4.cannot resolve symbol ‘HttpServletRequest’"></a>4.cannot resolve symbol ‘HttpServletRequest’</h3><p>IDEA异常 cannot resolve symbol ‘HttpServletRequest’,找不到HttpServletRequest这些包，在idea中需要添加tomcat的Libraries，eclipse不需用</p><h3 id="5-tomcat控制台-localhost-log-等意思"><a href="#5-tomcat控制台-localhost-log-等意思" class="headerlink" title="5.tomcat控制台 localhost log 等意思"></a>5.tomcat控制台 localhost log 等意思</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuh9oatk2oj20ii022747.jpg" alt=""><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuh9pitbuzj20fe0cv0ve.jpg" alt=""></p><h3 id="6-部署项目到tomcat的时候，发现没有你的项目"><a href="#6-部署项目到tomcat的时候，发现没有你的项目" class="headerlink" title="6.部署项目到tomcat的时候，发现没有你的项目"></a>6.部署项目到tomcat的时候，发现没有你的项目</h3><p>复制了一个module，发现部署项目到tomcat，然后没有你的项目，这样解决</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuh9t42am8j20fe0adwey.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuh9tituf6j20fe096q47.jpg" alt=""></p><p>部署项目的区别<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuh9v0iuqoj20fe090jtv.jpg" alt=""></p><h3 id="7-项目命名的时候不能用点"><a href="#7-项目命名的时候不能用点" class="headerlink" title="7.项目命名的时候不能用点"></a>7.项目命名的时候不能用点</h3><p>导入项目的时候会出现这个情况，点代表层级文件</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuhasej40uj20aq01kmx9.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一些经常遇见的报400、500的错误，如果要用到HttpServletRequest这些包的，idea中springmvc文件上传的文件会在out里路径有，修改项目名字，运行报错&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（十一）拦截器专题</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E6%8B%A6%E6%88%AA%E5%99%A8%E4%B8%93%E9%A2%98/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（十一）拦截器专题/</id>
    <published>2018-08-20T15:12:20.000Z</published>
    <updated>2018-08-23T05:57:43.689Z</updated>
    
    <content type="html"><![CDATA[<p> 拦截器就是过滤器的一种, 拦截器有且只能拦截Controller层(Servlet) ，本文实现一个登录拦截器，没有登录就不能访问登录之后的页面。</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fugl251u8rj20ch0gyaap.jpg" alt=""></p><h3 id="2-拦截器"><a href="#2-拦截器" class="headerlink" title="2.拦截器"></a>2.拦截器</h3><p>Java Web阶段学习过滤器</p><ul><li>实现javax.servlet.Filter接口</li><li>过滤器是在服务器启动的时候就对齐进行实例化操作,如果你的过滤器错误,那么服务将无法启动,所以整个程序无法运行<ul><li>init 初始化数据</li><li>doFilter(ServletRequest req , ServletResponse resp, ChainFilter chain)<ul><li>强制类型转换 HttpServletRequest request = (HttpServletRequest)req;</li><li>关键的代码  chain.doFilter(req,resp); <ul><li>访问下一个过滤器或者资源</li></ul></li></ul></li><li>destroy 服务器关闭</li></ul></li></ul><p>在web.xml中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-patterns</span>&gt;</span>过滤的路径,我们自己可以设置规则 *.jsp *.html /*<span class="tag">&lt;/<span class="name">url-patterns</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>servlet过滤器名字<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>拦截器 : 理解为 拦截器就是过滤器的一种, 拦截器有且只能拦截Controller层(Servlet) @Controller的注解层次</p><h3 id="3-如何建立拦截器"><a href="#3-如何建立拦截器" class="headerlink" title="3.如何建立拦截器"></a>3.如何建立拦截器</h3><h4 id="1-新建一个类"><a href="#1-新建一个类" class="headerlink" title="1.新建一个类"></a>1.新建一个类</h4><p>MyInterceptor.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="comment">///一般情况下,我们只是关心preHandle方法即可</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"preHandle:访问Controller之前执行"</span>);</span><br><span class="line"><span class="comment">//    return false;   //阻止访问下一个</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;    <span class="comment">//访问下一个拦截器或资源</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"postHandle:访问到正确的视图之前"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Object o, Exception e)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"afterCompletion:JSP页面加载完毕之后执行"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-配置文件"><a href="#2-配置文件" class="headerlink" title="2.配置文件"></a>2.配置文件</h4><p>在springmvc.xml中加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--7.配置自定义的拦截器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--下面这个可以有多个--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--拦截的路径，类似url-patterns--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/sys/**"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/vip/**"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--排除路径，以下路径不经过拦截器处理--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">"/vip/test02/"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--使用哪个拦截器处理--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.hs.interceptor.MyInterceptor"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-新建controller"><a href="#3-新建controller" class="headerlink" title="3.新建controller"></a>3.新建controller</h4><p>DemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/sys/test01"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"Controller层test01方法"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/result01"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/vip/test02"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"Controller层test02方法"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/result02"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-页面代码"><a href="#4-页面代码" class="headerlink" title="4.页面代码"></a>4.页面代码</h4><p>result01.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">System.out.println</span>("<span class="attr">JSP-result01</span>页面");%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>resulet01.jsp<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>result02.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">System.out.println</span>("<span class="attr">JSP-result02</span>页面");%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>resulet02.jsp<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试，在浏览器网址栏依次输入/sys/test01，/vip/test02，查看控制台输出</p><h3 id="4-实现一个登录拦截器"><a href="#4-实现一个登录拦截器" class="headerlink" title="4.实现一个登录拦截器"></a>4.实现一个登录拦截器</h3><h5 id="配置springmvc-xml"><a href="#配置springmvc-xml" class="headerlink" title="配置springmvc.xml"></a>配置springmvc.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--登录设置的拦截器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/sys/**"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">"/sys/login"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.hs.interceptor.LoginInterceptor"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="LoginController-java"><a href="#LoginController-java" class="headerlink" title="LoginController.java"></a>LoginController.java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/sys"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 在地址栏输入/sys/login 进行请求转发跳转页面</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/login"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 表单提交验证，存入session</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> account</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@PostMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String account,HttpServletRequest request)</span></span>&#123;</span><br><span class="line">      System.out.println(account);</span><br><span class="line">      HttpSession session  = request.getSession();</span><br><span class="line">      <span class="keyword">if</span>(<span class="string">"admin"</span>.equals(account))&#123;</span><br><span class="line">         session.setAttribute(<span class="string">"session_user"</span>, account);</span><br><span class="line">         <span class="comment">//redirect重定向跳到另外一个controller里</span></span><br><span class="line">         <span class="keyword">return</span> <span class="string">"redirect:/sys/main"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/login"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 登录成功重定向到这个controller，然后这个controller请求转发到一个页面</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/main"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/result01"</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="login-jsp"><a href="#login-jsp" class="headerlink" title="login.jsp"></a>login.jsp</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"login"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"account"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里有一个很大的坑，自己纠结了很久，action的路径问题！！！</p><p>如果写sys/login是绝对路径，login相对路径，因为请求转发到login.jsp,但是网址栏还是在sys这层，表单提交要到login那个，要不然就用相对路径，要不然就是绝对路径，相对直接login就行，绝对路径就是要这样写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">   //项目的发布路径，例如<span class="attr">:</span>  /<span class="attr">rabc</span></span></span><br><span class="line"><span class="tag">   <span class="attr">String</span> <span class="attr">path</span> = <span class="string">request.getContextPath();</span></span></span><br><span class="line"><span class="tag">   /*</span></span><br><span class="line"><span class="tag">   全路径，形式如下<span class="attr">:</span> <span class="attr">http:</span>//<span class="attr">127.0.0.1:8001</span>/<span class="attr">rbac</span>/</span></span><br><span class="line"><span class="tag">   <span class="attr">request.getScheme</span>()      ——&gt;</span> http 获取协议</span><br><span class="line">   request.getServerName()  --&gt; 127.0.0.1 获取服务名</span><br><span class="line">   request.getServerPort()  --&gt; 8001 获取端口号</span><br><span class="line">   path                     --&gt; /rbac 获取访问的路径 路</span><br><span class="line">   */</span><br><span class="line">   String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">%--</span></span></span><br><span class="line">   &lt;base/&gt;标签解决路径问题</span><br><span class="line">   参考文章:http://www.cnblogs.com/muqianying/archive/2012/03/16/2400280.html</span><br><span class="line">--%&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--action的路径问题，sys</span>/<span class="attr">login</span>绝对路径，<span class="attr">login</span>相对路径，因为请求转发到<span class="attr">login.jsp</span>,但是网址栏还是在<span class="attr">sys</span>这层，表单提交要到<span class="attr">login</span>那个，要不然就用相对路径，要不然就是绝对路径，相对直接<span class="attr">login</span>就行，绝对就是这样上面那一大堆<span class="attr">--</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"sys/login"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"account"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="LoginInterceptor-java，登录拦截器"><a href="#LoginInterceptor-java，登录拦截器" class="headerlink" title="LoginInterceptor.java，登录拦截器"></a>LoginInterceptor.java，登录拦截器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.handler.HandlerInterceptorAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录拦截器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginInterceptor</span> <span class="keyword">extends</span> <span class="title">HandlerInterceptorAdapter</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="comment">//1.获取HttpSession</span></span><br><span class="line">      HttpSession session = request.getSession();</span><br><span class="line">      <span class="comment">//2.判断是否登录</span></span><br><span class="line">      <span class="keyword">if</span> (session.getAttribute(<span class="string">"session_user"</span>) == <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="comment">//3.防止浏览器的后退功能</span></span><br><span class="line">         response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line">         PrintWriter out = response.getWriter();</span><br><span class="line"></span><br><span class="line">         out.write(<span class="string">"&lt;script&gt;"</span>);</span><br><span class="line">         out.write(<span class="string">"alert('您还没有登录过该系统，请登录！！！');"</span>);</span><br><span class="line">         out.write(<span class="string">"window.top.location.href='"</span>+request.getContextPath()+<span class="string">"/sys/login'"</span>);</span><br><span class="line">         out.write(<span class="string">"&lt;/script&gt;"</span>);</span><br><span class="line"></span><br><span class="line">         out.flush();</span><br><span class="line">         out.close();</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 拦截器就是过滤器的一种, 拦截器有且只能拦截Controller层(Servlet) ，本文实现一个登录拦截器，没有登录就不能访问登录之后的页面。&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（十）异常处理专题</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%8D%81%EF%BC%89%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E4%B8%93%E9%A2%98/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（十）异常处理专题/</id>
    <published>2018-08-20T14:33:56.000Z</published>
    <updated>2018-08-23T05:57:38.734Z</updated>
    
    <content type="html"><![CDATA[<p>遇见异常跳转到自己设置的页面，注解方式处理局部异常，监听Controller类的全局异常处理，springmvc配置统一的简单异常处理，监听所有的页面异常</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fugk5dczdzj20cd0dbgm3.jpg" alt=""></p><h3 id="2-局部异常处理"><a href="#2-局部异常处理" class="headerlink" title="2.局部异常处理"></a>2.局部异常处理</h3><p>ExceptionDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 经典异常处理_注解方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionDemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/ex01"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> i = <span class="number">10</span> / <span class="number">0</span>; <span class="comment">//会报这个错误Request processing failed; nested exception is java.lang.ArithmeticException: / by zero</span></span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/result"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 注解方式，处理异常，程序遇见这个异常，就会执行注解里的内容，</span></span><br><span class="line"><span class="comment">    *作用范围只有本类有效！！！</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="comment">//里面可以写多个异常，用,隔开，，，其实也可以总的写一个异常Exception,class</span></span><br><span class="line">   <span class="meta">@ExceptionHandler</span>(value = &#123;ArithmeticException.class&#125;)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">exception01</span><span class="params">(ArithmeticException ex)</span> </span>&#123;</span><br><span class="line">      ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line"></span><br><span class="line">      mav.addObject(<span class="string">"ex"</span>, ex);</span><br><span class="line"></span><br><span class="line">      mav.setViewName(<span class="string">"jsp/error"</span>);</span><br><span class="line">      <span class="keyword">return</span> mav;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>error.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope.message&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">id</span>=<span class="string">"debug"</span>&gt;</span>[DEBUG]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"error"</span> <span class="attr">style</span>=<span class="string">"display: none"</span>&gt;</span></span><br><span class="line">   $&#123;requestScope.ex&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    window.onload = function () &#123;</span></span><br><span class="line"><span class="undefined">        document.getElementById("debug").onclick = function () &#123;</span></span><br><span class="line"><span class="undefined">           document.getElementById("error").style.display = "block";</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-ControllerAdvice监听所有Controller类的异常"><a href="#3-ControllerAdvice监听所有Controller类的异常" class="headerlink" title="3.@ControllerAdvice监听所有Controller类的异常"></a>3.@ControllerAdvice监听所有Controller类的异常</h3><p>ExceptionAllController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ControllerAdvice这个表示监听只要有Controller的类的异常，同样如果自身类有注解监听，满足谁近就运行谁的原则</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionAllController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 监听Controller类的异常方式一</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> ex</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ExceptionHandler</span>(value = &#123;Exception.class&#125;)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">exception01</span><span class="params">(Exception ex)</span> </span>&#123;</span><br><span class="line">      ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line"></span><br><span class="line">      mav.addObject(<span class="string">"ex"</span>, ex);</span><br><span class="line"></span><br><span class="line">      mav.setViewName(<span class="string">"jsp/error02"</span>);</span><br><span class="line">      <span class="keyword">return</span> mav;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ExceptionDemoController.java把上面那个局部处理异常注释就行，</p><p>error02.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">本页是全局的异常监听跳转页面，本次监听到的异常是</span><br><span class="line">$&#123;requestScope.ex&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-springmvc-xml配置简单处理异常"><a href="#4-springmvc-xml配置简单处理异常" class="headerlink" title="4.springmvc.xml配置简单处理异常"></a>4.springmvc.xml配置简单处理异常</h3><p>springmvc.xml加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--6.统一的简单异常处理，监听所有的页面异常--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"simpleMappingExceptionResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--出现异常，默认跳转的页面--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultErrorView"</span> <span class="attr">value</span>=<span class="string">"jsp/error"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--类似于这个mav.addObject("ex", ex);--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exceptionAttribute"</span> <span class="attr">value</span>=<span class="string">"ex"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--异常映射，若出现下列异常，就跳转相应的页面，不跳默认的--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exceptionMappings"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"ArithmeticException"</span>&gt;</span>jsp/error<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"ArrayIndexOutOfBoundsException"</span>&gt;</span>jsp/error<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"RuntimeException"</span>&gt;</span>jsp/error<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"Exception"</span>&gt;</span>jsp/error<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-自定义处理异常"><a href="#5-自定义处理异常" class="headerlink" title="5.自定义处理异常"></a>5.自定义处理异常</h3><p>ExceptionAllController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 监听Controller类的异常方式二自定义异常</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> ex</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ExceptionHandler</span>(value = &#123;Exception.class&#125;)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">exception02</span><span class="params">(Exception ex, Model model)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//判断类的类型</span></span><br><span class="line">      <span class="keyword">if</span> (ex <span class="keyword">instanceof</span> ArrayIndexOutOfBoundsException) &#123;</span><br><span class="line">         model.addAttribute(<span class="string">"message"</span>, <span class="string">"数组越界异常"</span>);<span class="comment">//给客户看的</span></span><br><span class="line">         model.addAttribute(<span class="string">"ex"</span>, ex);</span><br><span class="line"><span class="comment">//       return "jsp/error";</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (ex <span class="keyword">instanceof</span> ArithmeticException) &#123;</span><br><span class="line">         model.addAttribute(<span class="string">"message"</span>, <span class="string">"运算异常"</span>);    <span class="comment">//给客户看的</span></span><br><span class="line">         model.addAttribute(<span class="string">"ex"</span>, ex);</span><br><span class="line"><span class="comment">//       return "jsp/error";</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//处理自定义异常</span></span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/error"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 监听Controller类的异常方式二自定义异常____返回json格式</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> ex</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@ExceptionHandler</span>(value = &#123;Exception.class&#125;)</span><br><span class="line">   <span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Map&lt;String,Object&gt; <span class="title">exception03</span><span class="params">(Exception ex)</span> </span>&#123;</span><br><span class="line">      Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String,Object&gt;();</span><br><span class="line">      <span class="comment">//判断类的类型</span></span><br><span class="line">      <span class="keyword">if</span> (ex <span class="keyword">instanceof</span> ArrayIndexOutOfBoundsException) &#123;</span><br><span class="line">         map.put(<span class="string">"message"</span>, <span class="string">"数组越界异常"</span>);<span class="comment">//给客户看的</span></span><br><span class="line">         map.put(<span class="string">"ex"</span>, ex);</span><br><span class="line"><span class="comment">//       return "jsp/error";</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (ex <span class="keyword">instanceof</span> ArithmeticException) &#123;</span><br><span class="line">         map.put(<span class="string">"message"</span>, <span class="string">"运算异常"</span>);    <span class="comment">//给客户看的</span></span><br><span class="line">         map.put(<span class="string">"ex"</span>, ex);</span><br><span class="line"><span class="comment">//       return "jsp/error";</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//处理自定义异常</span></span><br><span class="line">      <span class="keyword">return</span> map;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>result.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">没有遇见注解里的异常，成功跳转</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;遇见异常跳转到自己设置的页面，注解方式处理局部异常，监听Controller类的全局异常处理，springmvc配置统一的简单异常处理，监听所有的页面异常&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（九）文件上传和下载</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B9%9D%EF%BC%89%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（九）文件上传和下载/</id>
    <published>2018-08-20T13:53:40.000Z</published>
    <updated>2018-08-23T05:57:06.498Z</updated>
    
    <content type="html"><![CDATA[<p>文件上传和下载，在上传的操作之后，跳转到下载页面</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fugihqoo1oj20bz0biq3b.jpg" alt=""><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fugiipepjoj20br0dedgm.jpg" alt=""></p><h3 id="2-上传操作"><a href="#2-上传操作" class="headerlink" title="2.上传操作"></a>2.上传操作</h3><p>单文件的上传</p><ul><li>form表单传递数据</li><li>请求必须为POST请求</li><li>使用二进制流的方式传递数据 enctype=”multipart/form-data”</li><li>文件域 &lt;input type=”file” name=”myfile”/&gt;</li><li>上传的工具有两种：<ul><li>Servlet3.0</li><li>Commons-FileUpload<ul><li>commons-fileupload.jar</li><li>commons-io.jar</li></ul></li></ul></li></ul><h4 id="第一步：配置解析器"><a href="#第一步：配置解析器" class="headerlink" title="第一步：配置解析器"></a>第一步：配置解析器</h4><p>springmvc.xml加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--5.使用上传的解析器，如果发现是上传操作，会自动使用该解析器帮我们完成相应的操作--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--该ID为固定值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--设置上传文件编码--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--简写方式 标签p c注入</span></span><br><span class="line"><span class="comment">   p:defaultEncoding = "UTF-8"--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--设置文件上传最大值024*200即200K--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"20971520"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--缓存，读取文件到内存中最大的字节数，可以不设置--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxInMemorySize"</span> <span class="attr">value</span>=<span class="string">"2048"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--延时提高上传效率，一个类似懒加载的属性--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"resolveLazily"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果是图片资源，还要配置静态资源排除，见之前的笔记</p><h4 id="第二步：前端页面表单和前台验证"><a href="#第二步：前端页面表单和前台验证" class="headerlink" title="第二步：前端页面表单和前台验证"></a>第二步：前端页面表单和前台验证</h4><p>file.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>单文件上传<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"upload01"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span> <span class="attr">id</span>=<span class="string">"uploadForm"</span>&gt;</span></span><br><span class="line">   标题：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">   文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"myfile"</span> <span class="attr">id</span>=<span class="string">"myfile"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"resource/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    $(function () &#123;</span></span><br><span class="line"><span class="undefined">        //元素选择器</span></span><br><span class="line"><span class="undefined">        $("button").click(function () &#123;</span></span><br><span class="line"><span class="undefined">            //1.获取上传文件的对象，是数组，获取的第一个</span></span><br><span class="line"><span class="undefined">            var myfile = $("#myfile").prop("files")[0];</span></span><br><span class="line"><span class="undefined">            //2.判断文件是否有</span></span><br><span class="line"><span class="undefined">            if (myfile) &#123;</span></span><br><span class="line"><span class="undefined">                //3.获取文件名称</span></span><br><span class="line"><span class="undefined">                var fileName = myfile.name;</span></span><br><span class="line"><span class="undefined">                //4.获取文件的后缀名称</span></span><br><span class="line"><span class="undefined">                var ext = fileName.substring(fileName.lastIndexOf(".") + 1);</span></span><br><span class="line"><span class="undefined">                //5.设置允许上传的文件后缀名称</span></span><br><span class="line"><span class="undefined">                var allowFileTypes = ["jpg", "png", "gif", "jpeg", "dmp", "rar"];</span></span><br><span class="line"><span class="undefined">                //6.设置一个标识，用来做判断</span></span><br><span class="line"><span class="undefined">                var flag = false;</span></span><br><span class="line"><span class="undefined">                //循环判断上传格式是否正确</span></span><br><span class="line"><span class="undefined">                for (var i = 0; i &lt; allowFileTypes.length; i++) &#123;</span></span><br><span class="line"><span class="undefined">                    if (ext == allowFileTypes[i]) &#123;</span></span><br><span class="line"><span class="undefined">                        flag = true;</span></span><br><span class="line"><span class="undefined">                        break;</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">                if (!flag) &#123;</span></span><br><span class="line"><span class="undefined">                    alert("您上传的文件格式不正确，允许的格式为：" + allowFileTypes.join("  |  "));</span></span><br><span class="line"><span class="undefined">                    return false;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">                //7.判断文件的大小</span></span><br><span class="line"><span class="undefined">                if (myfile.size &gt; 20 * 1024 * 1024) &#123;</span></span><br><span class="line"><span class="undefined">                    alert("您上传的文件过大，请重新选择")</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">                return false;</span></span><br><span class="line"><span class="undefined">                //8.表单提交</span></span><br><span class="line"><span class="undefined">                $&#123;"#uploadForm"&#125;.submit();</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            else &#123;</span></span><br><span class="line"><span class="undefined">                alert("请选择您要上传的文件");</span></span><br><span class="line"><span class="undefined">                return false;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="第三步：后台处理"><a href="#第三步：后台处理" class="headerlink" title="第三步：后台处理"></a>第三步：后台处理</h4><p>UploadDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FilenameUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件上传操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadDemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 单文件上传_标准写法</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> title</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> myfile</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@PostMapping</span>(<span class="string">"/upload01"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">(String title, MultipartFile myfile, HttpServletRequest request)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">      ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line"><span class="comment">//    System.out.println(title);</span></span><br><span class="line">      <span class="comment">//1.获取上传文件的名称</span></span><br><span class="line">      String fileName = myfile.getOriginalFilename();</span><br><span class="line">      mav.addObject(<span class="string">"fileName"</span>, fileName);</span><br><span class="line">      <span class="comment">//2.判断文件名称是否有值,isEmpty是这个字符串的length=0为true</span></span><br><span class="line">      <span class="keyword">if</span> (!fileName.isEmpty()) &#123;</span><br><span class="line">         <span class="comment">//3.获取服务器的绝对路径</span></span><br><span class="line">         String path = request.getServletContext().getRealPath(<span class="string">"/upload"</span>);</span><br><span class="line">         <span class="comment">//4.建立联系</span></span><br><span class="line">         File folder = <span class="keyword">new</span> File(path);</span><br><span class="line">         <span class="comment">//5.判断该文件是否存在，不存在则创建文件夹</span></span><br><span class="line">         <span class="keyword">if</span> (!folder.exists()) &#123;</span><br><span class="line">            folder.mkdirs();    <span class="comment">//创建文件夹</span></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//6,获取上传文件的后缀名称</span></span><br><span class="line">         String ext = FilenameUtils.getExtension(fileName);</span><br><span class="line">         <span class="comment">//7.创建新的文件名称</span></span><br><span class="line">         <span class="comment">//String newFileName = UUID.randomUUID().toString() + "." + ext;</span></span><br><span class="line">         <span class="comment">//或者用时间戳创建名称</span></span><br><span class="line">         String newFileName = <span class="keyword">new</span> Date().getTime() + <span class="string">"_"</span> + <span class="keyword">new</span> Random().nextInt(<span class="number">100000</span>) + <span class="string">"."</span> + ext;</span><br><span class="line">         mav.addObject(<span class="string">"newFileName"</span>, newFileName);</span><br><span class="line"><span class="comment">//       System.out.println(newFileName);</span></span><br><span class="line">         <span class="comment">//8.文件上传，File.separator为斜线</span></span><br><span class="line">         myfile.transferTo(<span class="keyword">new</span> File(path + File.separator + newFileName));</span><br><span class="line">      &#125;</span><br><span class="line">      mav.addObject(<span class="string">"hs"</span>, <span class="string">"和尚"</span>);</span><br><span class="line">      mav.setViewName(<span class="string">"jsp/result"</span>);</span><br><span class="line">      <span class="comment">/*System.out.println("测试是否可以获取正常的数据:"+title);</span></span><br><span class="line"><span class="comment">      System.out.println("=====");</span></span><br><span class="line"><span class="comment">      System.out.println("文件的MIME类型 :"+myfile.getContentType());</span></span><br><span class="line"><span class="comment">      System.out.println("文件NAME属性对应的值 :"+myfile.getName());</span></span><br><span class="line"><span class="comment">      System.out.println("上传文件的名称 :"+myfile.getOriginalFilename());</span></span><br><span class="line"><span class="comment">      System.out.println("上传文件的大小 :"+myfile.getSize());*/</span></span><br><span class="line">      <span class="keyword">return</span> mav;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-下载操作"><a href="#3-下载操作" class="headerlink" title="3.下载操作"></a>3.下载操作</h3><h4 id="方式一：直接超链接方式显示"><a href="#方式一：直接超链接方式显示" class="headerlink" title="方式一：直接超链接方式显示"></a>方式一：直接超链接方式显示</h4><p>result.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>直接超链接方式显示<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"upload/$&#123;newFileName &#125;"</span>&gt;</span>$&#123;fileName &#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="方式二：HTML5-中的download属性"><a href="#方式二：HTML5-中的download属性" class="headerlink" title="方式二：HTML5 中的download属性"></a>方式二：HTML5 中的download属性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>HTML5 中的download属性<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"upload/$&#123;newFileName &#125;"</span> <span class="attr">download</span>=<span class="string">"$&#123;fileName &#125;"</span>&gt;</span>$&#123;fileName &#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="方式三：使用流的方法–到控制层处理"><a href="#方式三：使用流的方法–到控制层处理" class="headerlink" title="方式三：使用流的方法–到控制层处理"></a>方式三：使用流的方法–到控制层处理</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>使用流的方法--到控制层处理，发送请求到控制器，download<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"download?newFileName=$&#123;newFileName&#125;&amp;fileName=$&#123;fileName&#125;"</span>&gt;</span>$&#123;fileName &#125;下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在springmvc.xml声明处理byte数组，在解决@ResponseBody在IE浏览器的BUG问题上面</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--解决下载的时候转换问题,声明处理byte数组--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.ByteArrayHttpMessageConverter"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>DownloadDemoController.java处理流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件下载操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownloadDemoController</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 文件下载，使用流的方法</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> newFileName</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> fileName</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/download"</span>)</span><br><span class="line">   <span class="keyword">public</span> ResponseEntity&lt;<span class="keyword">byte</span>[]&gt; test02(String newFileName, String fileName, HttpServletRequest request) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">      <span class="comment">//获取服务端的绝对路径</span></span><br><span class="line">      String path = request.getServletContext().getRealPath(<span class="string">"/upload/"</span>);</span><br><span class="line"></span><br><span class="line">      HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">      <span class="comment">//设置相应的内容为流</span></span><br><span class="line">      headers.setContentType(MediaType.TEXT_EVENT_STREAM);</span><br><span class="line">      <span class="comment">//设置下载的名称--和中文乱码的问题</span></span><br><span class="line">      headers.setContentDispositionFormData(<span class="string">"attachment"</span>,</span><br><span class="line">            <span class="keyword">new</span> String(fileName.getBytes(<span class="string">"UTF-8"</span>), <span class="string">"ISO8859-1"</span>)</span><br><span class="line">            );</span><br><span class="line">      <span class="comment">//找到文件</span></span><br><span class="line">      File file = <span class="keyword">new</span> File(path + File.separator + newFileName);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;<span class="keyword">byte</span>[]&gt;(FileUtils.readFileToByteArray(file),<span class="comment">/*将文件转换为byte数组*/</span></span><br><span class="line">            headers,</span><br><span class="line">            HttpStatus.CREATED);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文件上传和下载，在上传的操作之后，跳转到下载页面&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（八）服务端数据传递客户端显示--后台传数据到前台</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AB%EF%BC%89%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%92%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%98%BE%E7%A4%BA-%E5%90%8E%E5%8F%B0%E4%BC%A0%E6%95%B0%E6%8D%AE%E5%88%B0%E5%89%8D%E5%8F%B0/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（八）服务端数据传递客户端显示-后台传数据到前台/</id>
    <published>2018-08-20T12:19:04.000Z</published>
    <updated>2018-08-23T05:57:15.769Z</updated>
    
    <content type="html"><![CDATA[<p>JavaWeb阶段传递数据，ModelAndView传递数据，其他方式传递数据,通过读取ModelAndView的源码分析，ResponseEntiy返回JSON数据 - IE和谷歌浏览器正常，JSON返回日期处理方式</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fugfpj8cr6j209f0j6q3a.jpg" alt=""></p><h3 id="2-JavaWeb阶段传递数据"><a href="#2-JavaWeb阶段传递数据" class="headerlink" title="2.JavaWeb阶段传递数据"></a>2.JavaWeb阶段传递数据</h3><p>ModelAndViewDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JavaWeb阶段传递数据</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ServletException</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/server01"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span>   <span class="comment">//不处理</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">   request.setAttribute(<span class="string">"hs"</span>, <span class="string">"和尚"</span>);</span><br><span class="line">   request.setAttribute(<span class="string">"class"</span>, <span class="string">"计算机"</span>);</span><br><span class="line">   request.setAttribute(<span class="string">"number"</span>, <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//请求转发传递数据---这个没有通过视图解析器</span></span><br><span class="line">   request.getRequestDispatcher(<span class="string">"/WEB-INF/jsp/result01.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>result01.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>数据获取方式<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope.hs&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope["class"]&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;number&#125; ---默认情况下是从pageContext-&gt;request-&gt;session-&gt;application下开始寻找<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-ModelAndView传递数据—指明了key值"><a href="#3-ModelAndView传递数据—指明了key值" class="headerlink" title="3.ModelAndView传递数据—指明了key值"></a>3.ModelAndView传递数据—指明了key值</h3><p>ModelAndViewDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 通过ModelAndView传递数据</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/server02"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line"></span><br><span class="line"><span class="comment">//    mav.addObject() 没有指明KEY</span></span><br><span class="line">      <span class="comment">//一步一步的追源码，发现一个ModelMap的类实例化对象.用它的addAttribute方法添加，ModelMap又是继承了HashMap</span></span><br><span class="line">      mav.addObject(<span class="string">"title"</span>, <span class="string">"通过ModelAndView传递数据"</span>);</span><br><span class="line">      mav.addObject(<span class="string">"hs"</span>, <span class="string">"中国和尚"</span>);</span><br><span class="line">      mav.addObject(<span class="string">"class"</span>, <span class="string">"计算机计科"</span>);</span><br><span class="line">      mav.addObject(<span class="string">"number"</span>, <span class="number">11</span>);</span><br><span class="line">      mav.setViewName(<span class="string">"jsp/result02"</span>);    <span class="comment">//请求转发，通过视图解析器</span></span><br><span class="line">      <span class="keyword">return</span> mav;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>result02.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;title&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope.hs&#125; --指明范围了的<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope["class"]&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;number&#125; ---默认情况下是从pageContext-&gt;request-&gt;session-&gt;application下开始寻找<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-ModelAndView传递数据—没有指明key值"><a href="#4-ModelAndView传递数据—没有指明key值" class="headerlink" title="4.ModelAndView传递数据—没有指明key值"></a>4.ModelAndView传递数据—没有指明key值</h3><p>ModelAndViewDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 传递数据没有指明KEY_默认KEY的规则</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/server03"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">      mav.addObject(<span class="string">"integer"</span>, <span class="number">100</span>);</span><br><span class="line">      mav.addObject(<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">      mav.addObject(<span class="string">"string"</span>, <span class="string">"字符串"</span>);</span><br><span class="line">      mav.addObject(<span class="string">"悟空"</span>);</span><br><span class="line"><span class="comment">//    规则：客户端获取没有加key的数据，默认key正常是数据对应的类型的首字母小写 Integer---integer  String---string</span></span><br><span class="line"><span class="comment">//      两个key一样的,只认最后一个</span></span><br><span class="line"><span class="comment">//    double是关键字，不能$&#123;double&#125;,只能$&#123;requestScope["double"] &#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">double</span> a = <span class="number">123.123</span>;</span><br><span class="line">      mav.addObject(a);</span><br><span class="line"></span><br><span class="line">      User user = <span class="keyword">new</span> User();</span><br><span class="line">      user.setMydate(<span class="keyword">new</span> Date());</span><br><span class="line">      mav.addObject(user);</span><br><span class="line"></span><br><span class="line">      mav.setViewName(<span class="string">"jsp/result03"</span>);    <span class="comment">//请求转发，通过视图解析器</span></span><br><span class="line">      <span class="keyword">return</span> mav;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>result03.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"fmt"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jstl/fmt_rt"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope.integer &#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope.string &#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope["double"] &#125;-----因为double是关键字，所以不能.double<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope.user.mydate &#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope["user"]["mydate"] &#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">日期格式化</span><br><span class="line"><span class="tag">&lt;<span class="name">fmt:formatDate</span> <span class="attr">value</span>=<span class="string">"$&#123;user.mydate &#125;"</span> <span class="attr">pattern</span>=<span class="string">"yyyy-MM-dd HH:mm:ss"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-其他方式传递数据-通过读取ModelAndView的源码分析"><a href="#5-其他方式传递数据-通过读取ModelAndView的源码分析" class="headerlink" title="5.其他方式传递数据,通过读取ModelAndView的源码分析"></a>5.其他方式传递数据,通过读取ModelAndView的源码分析</h3><p>OtherDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.ModelMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 其他的方式传递数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OtherDemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *其他1--通过Map在形参中实例化</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/server04"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test01</span><span class="params">(Map&lt;String,Object&gt; map)</span> </span>&#123;</span><br><span class="line">      map.put(<span class="string">"title"</span>, <span class="string">"Map在形参中定义，可以传递数据"</span>);</span><br><span class="line">      map.put(<span class="string">"hs"</span>, <span class="string">"123"</span>);</span><br><span class="line">      map.put(<span class="string">"class"</span>, <span class="string">"12222"</span>);</span><br><span class="line">      map.put(<span class="string">"number"</span>, <span class="number">1111</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/result04"</span>;  <span class="comment">//通过请求转发视图解析器</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 其他2--通过ModelMap在形参中实例化</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> modelMap</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/server05"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test02</span><span class="params">(ModelMap modelMap)</span> </span>&#123;</span><br><span class="line">      modelMap.addAttribute(<span class="string">"title"</span>, <span class="string">"ModelMap进行传递数据"</span>);</span><br><span class="line">      modelMap.addAttribute(<span class="string">"hs"</span>, <span class="string">"123"</span>);</span><br><span class="line">      modelMap.addAttribute(<span class="string">"class"</span>, <span class="string">"12222"</span>);</span><br><span class="line">      modelMap.addAttribute(<span class="string">"number"</span>, <span class="number">1111</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/result04"</span>;  <span class="comment">//通过请求转发视图解析器</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 其他3--通过Model接口传递数据</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/server06"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">test03</span><span class="params">(Model model)</span> </span>&#123;</span><br><span class="line">      model.addAttribute(<span class="string">"title"</span>, <span class="string">"Model接口进行传递数据"</span>);</span><br><span class="line">      model.addAttribute(<span class="string">"hs"</span>, <span class="string">"123"</span>);</span><br><span class="line">      model.addAttribute(<span class="string">"class"</span>, <span class="string">"12222"</span>);</span><br><span class="line">      model.addAttribute(<span class="string">"number"</span>, <span class="number">1111</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"jsp/result04"</span>;  <span class="comment">//通过请求转发视图解析器</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>result04.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;title&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope.hs&#125; --指明范围了的<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;requestScope["class"]&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;number&#125; ---默认情况下是从pageContext-&gt;request-&gt;session-&gt;application下开始寻找<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-ResponseEntiy返回JSON数据-IE和谷歌浏览器正常"><a href="#6-ResponseEntiy返回JSON数据-IE和谷歌浏览器正常" class="headerlink" title="6.ResponseEntiy返回JSON数据 - IE和谷歌浏览器正常"></a>6.ResponseEntiy返回JSON数据 - IE和谷歌浏览器正常</h3><p>JsonDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JSON格式1：ResponseEntity返回JSON数据格式</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/json01"</span>)</span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;Map&lt;String, Object&gt;&gt; test01() &#123;</span><br><span class="line">   Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">   map.put(<span class="string">"name"</span>, <span class="string">"马老板"</span>);</span><br><span class="line">   map.put(<span class="string">"sex"</span>, <span class="string">"男"</span>);</span><br><span class="line"></span><br><span class="line">   HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">   headers.setContentType(MediaType.TEXT_HTML);    <span class="comment">//设置响应方式,在HTML页面上显示</span></span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;Map&lt;String, Object&gt;&gt;(map, headers, HttpStatus.CREATED);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JSON格式1：用List存多条JSON数据</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/json02"</span>)</span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;List&lt;Map&lt;String, Object&gt;&gt;&gt; test02() &#123;</span><br><span class="line">   List&lt;Map&lt;String,Object&gt;&gt; tempList = <span class="keyword">new</span> ArrayList&lt;Map&lt;String,Object&gt;&gt;();</span><br><span class="line">   Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">   map.put(<span class="string">"name"</span>, <span class="string">"马老板"</span>);</span><br><span class="line">   map.put(<span class="string">"sex"</span>, <span class="string">"男"</span>);</span><br><span class="line">   tempList.add(map);</span><br><span class="line"></span><br><span class="line">   map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">   map.put(<span class="string">"name"</span>, <span class="string">"悟空"</span>);</span><br><span class="line">   map.put(<span class="string">"sex"</span>, <span class="string">"男"</span>);</span><br><span class="line">   tempList.add(map);</span><br><span class="line"></span><br><span class="line">   HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">   headers.setContentType(MediaType.TEXT_HTML);</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;List&lt;Map&lt;String, Object&gt;&gt;&gt;(tempList, headers, HttpStatus.CREATED);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-ResponseBody推荐方式返回json数据"><a href="#7-ResponseBody推荐方式返回json数据" class="headerlink" title="7.@ResponseBody推荐方式返回json数据"></a>7.@ResponseBody推荐方式返回json数据</h3><p>JsonDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JSON格式3：简写方式</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/json03"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span>   <span class="comment">//把java数据转换为JSON的字符串 存在BUG(IE浏览器不好使，解决办法在springmvc.xml配置)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">   map.put(<span class="string">"name"</span>, <span class="string">"马老板"</span>);</span><br><span class="line">   map.put(<span class="string">"sex"</span>, <span class="string">"男"</span>);</span><br><span class="line">   <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JSON格式4：简写方式</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/json04"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@ResponseBody</span> List&lt;Map&lt;String, Object&gt;&gt; test04() &#123;</span><br><span class="line">   List&lt;Map&lt;String,Object&gt;&gt; tempList = <span class="keyword">new</span> ArrayList&lt;Map&lt;String,Object&gt;&gt;();</span><br><span class="line">   Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">   map.put(<span class="string">"name"</span>, <span class="string">"马老板"</span>);</span><br><span class="line">   map.put(<span class="string">"sex"</span>, <span class="string">"男"</span>);</span><br><span class="line">   tempList.add(map);</span><br><span class="line"></span><br><span class="line">   map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">   map.put(<span class="string">"name"</span>, <span class="string">"悟空"</span>);</span><br><span class="line">   map.put(<span class="string">"sex"</span>, <span class="string">"男"</span>);</span><br><span class="line">   tempList.add(map);</span><br><span class="line">   <span class="keyword">return</span> tempList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决BUG问题在springmvc.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--1.启动SpringMVC注解--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--解决@ResponseBody在IE浏览器的BUG问题--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prettyPrint"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">value</span>&gt;</span>text/html;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">value</span>&gt;</span>text/plan;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-JSON返回日期处理方式"><a href="#8-JSON返回日期处理方式" class="headerlink" title="8.JSON返回日期处理方式"></a>8.JSON返回日期处理方式</h3><p>JsonDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理日期格式，需要在user的date属性下加注解,或者springmvc配置全局日期处理</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/json05"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">test05</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   User user = <span class="keyword">new</span> User();</span><br><span class="line">   user.setMydate(<span class="keyword">new</span> Date());</span><br><span class="line">   <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java下设置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">   <span class="comment">// 相放哪里就放哪里，pattern:格式，timezone:时区，这是设置东八区</span></span><br><span class="line"><span class="comment">// @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")</span></span><br><span class="line">   Date mydate;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss",timezone = "GMT+8")</span></span><br><span class="line"><span class="comment">//    @JsonFormat(pattern = "yyyy-MM-dd",timezone = "GMT+8")</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Date <span class="title">getMydate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> mydate;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMydate</span><span class="params">(Date mydate)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.mydate = mydate;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">            <span class="string">"mydate="</span> + mydate +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>springmvc.xml中配置全局的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--1.启动SpringMVC注解--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--解决@ResponseBody在IE浏览器的BUG问题--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prettyPrint"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">value</span>&gt;</span>text/html;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">value</span>&gt;</span>text/plan;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">         <span class="comment">&lt;!--解决Jackson转换的日期问题，一劳永逸的办法，全局设置，但是和持久化类中的注解比，谁近更选择谁--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"objectMapper"</span>&gt;</span>  <span class="comment">&lt;!--property：xxx属性--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.fasterxml.jackson.databind.ObjectMapper"</span>&gt;</span>  <span class="comment">&lt;!--bean：xx实例化了--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dateFormat"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"java.text.SimpleDateFormat"</span>&gt;</span></span><br><span class="line">                     <span class="comment">&lt;!--yyyy-MM-dd HH:mm:ss只能这么写，如果不显示小时，就需要在持久化类中注解设置--&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">"java.lang.String"</span> <span class="attr">value</span>=<span class="string">"yyyy-MM-dd HH:mm:ss"</span>/&gt;</span>  <span class="comment">&lt;!--constructor-arg：xx构造函数--&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JavaWeb阶段传递数据，ModelAndView传递数据，其他方式传递数据,通过读取ModelAndView的源码分析，ResponseEntiy返回JSON数据 - IE和谷歌浏览器正常，JSON返回日期处理方式&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（七）客户端数据传递中文乱码的解决方式</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%92%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（七）客户端数据传递中文乱码的解决方式/</id>
    <published>2018-08-20T11:40:07.000Z</published>
    <updated>2018-08-23T05:56:57.653Z</updated>
    
    <content type="html"><![CDATA[<p>tomcat7中get和post请求中文乱码解决方案，tomcat8中get请求中文不会乱码，post请求会乱码</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fugeyrgo7sj20bz0jejsl.jpg" alt=""></p><h3 id="2-tomcat7-get请求中文乱码—传统方式"><a href="#2-tomcat7-get请求中文乱码—传统方式" class="headerlink" title="2.tomcat7 get请求中文乱码—传统方式"></a>2.tomcat7 get请求中文乱码—传统方式</h3><p>demo01.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>GET请求中文乱码-传统方式解决方案<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client01"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user_name"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>GET请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>UTFDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Tomcat7中GET请求方式中文乱码-传统方式解决方案</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> user_name</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> UnsupportedEncodingException</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="comment">// @PostMapping("/client01")</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/client01"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">(String user_name)</span> <span class="keyword">throws</span> UnsupportedEncodingException </span>&#123;</span><br><span class="line">      <span class="comment">//验证编码格式</span></span><br><span class="line">      <span class="comment">//boolean equals = user_name.equals(new String(user_name.getBytes("UTF-8"), "UTF-8"));</span></span><br><span class="line">      <span class="keyword">byte</span>[] a = user_name.getBytes(<span class="string">"ISO8859-1"</span>); <span class="comment">//用给定的编码，把字符串编码到byte序列</span></span><br><span class="line">      String b = <span class="keyword">new</span> String(a,<span class="string">"UTF-8"</span>);   <span class="comment">//通过使用指定的编码解码指定的 byte 数组，构造一个新的 String。</span></span><br><span class="line">      System.out.println(b);</span><br><span class="line">      <span class="comment">//简写</span></span><br><span class="line"><span class="comment">//    user_name = new String(user_name.getBytes("ISO8859-1"),"UTF-8");</span></span><br><span class="line">      <span class="comment">//tomcat8 get请求默认为UTF-8</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="3-tomcat7-get请求中文乱码—修改tomcat服务里的sever-xml文件-全局修改，推荐"><a href="#3-tomcat7-get请求中文乱码—修改tomcat服务里的sever-xml文件-全局修改，推荐" class="headerlink" title="3.tomcat7 get请求中文乱码—修改tomcat服务里的sever.xml文件(全局修改，推荐)"></a>3.tomcat7 get请求中文乱码—修改tomcat服务里的sever.xml文件(全局修改，推荐)</h3><p>修改该文件后，传统的方式无法转换成功了，在你的tomcat服务里的sever.xml文件找到这个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector connectionTimeout=&quot;20000&quot; port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; redirectPort=&quot;8443&quot;/&gt;</span><br></pre></td></tr></table></figure><p> 加入  URIEncoding=”UTF-8” </p><h3 id="4-post请求"><a href="#4-post请求" class="headerlink" title="4.post请求"></a>4.post请求</h3><p>修改web.xml配置编码过滤器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--1.解决POST请求的中文乱码问题--&gt;</span><br><span class="line">&lt;filter&gt;</span><br><span class="line">   &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;</span><br><span class="line">   &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;</span><br><span class="line">   &lt;!--设置过滤器的一些变量的值--&gt;</span><br><span class="line">   &lt;init-param&gt;</span><br><span class="line">      &lt;param-name&gt;encoding&lt;/param-name&gt;</span><br><span class="line">      &lt;param-value&gt;UTF-8&lt;/param-value&gt;</span><br><span class="line">   &lt;/init-param&gt;</span><br><span class="line">   &lt;init-param&gt;</span><br><span class="line">      &lt;param-name&gt;forceRequestEncoding&lt;/param-name&gt;</span><br><span class="line">      &lt;param-value&gt;true&lt;/param-value&gt;</span><br><span class="line">   &lt;/init-param&gt;</span><br><span class="line">   &lt;init-param&gt;</span><br><span class="line">      &lt;param-name&gt;forceResponseEncoding&lt;/param-name&gt;</span><br><span class="line">      &lt;param-value&gt;true&lt;/param-value&gt;</span><br><span class="line">   &lt;/init-param&gt;</span><br><span class="line">&lt;/filter&gt;</span><br><span class="line">&lt;filter-mapping&gt;</span><br><span class="line">   &lt;filter-name&gt;characterEncodingFilter&lt;/filter-name&gt;</span><br><span class="line">   &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">&lt;/filter-mapping&gt;</span><br></pre></td></tr></table></figure><p>demo01.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>POST请求中文乱码-在web.xml中配置过滤器<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client03"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user_name"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>post请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tomcat7中get和post请求中文乱码解决方案，tomcat8中get请求中文不会乱码，post请求会乱码&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（六）客户端数据的类型转换</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%95%B0%E6%8D%AE%E7%9A%84%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（六）客户端数据的类型转换/</id>
    <published>2018-08-20T10:59:28.000Z</published>
    <updated>2018-08-23T05:57:18.771Z</updated>
    
    <content type="html"><![CDATA[<p>后台接收前台传来的日期类型，@DateTimeFormat注解简单使用，认识注解InitBinde，对要转换的字符串类型进行处理，</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fugdw0ngzuj20bm0mn75o.jpg" alt=""></p><h3 id="2-DateTimeFormat注解简单使用"><a href="#2-DateTimeFormat注解简单使用" class="headerlink" title="2.@DateTimeFormat注解简单使用"></a>2.@DateTimeFormat注解简单使用</h3><p>demo01.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>传递日期的字符串<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client01"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"mydate"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>日期字符串<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>DateDemoController.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 接收日期类型的客户端传递数据，简写方式</span><br><span class="line"> * 没有写注解，就写 2018/8/14 15:31:20</span><br><span class="line"> * 写了注解就按照他的格式来，如果没有写时间，你输入了时间也不会认</span><br><span class="line"> * 如果一个类中也有这样的属性，同时接收这个时间，注解里也要写格式</span><br><span class="line"> *</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">@GetMapping(&quot;/client01&quot;)</span><br><span class="line">public ModelAndView test01(</span><br><span class="line">      @DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;) Date mydate,</span><br><span class="line">      User user) &#123;</span><br><span class="line">   System.out.println(mydate);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   return null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.format.annotation.DateTimeFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="comment">//注解放哪，根据公司要求</span></span><br><span class="line"><span class="comment">// @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")</span></span><br><span class="line">   Date mydate;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Date <span class="title">getMydate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> mydate;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@DateTimeFormat</span>(pattern = <span class="string">"yyyy-MM-dd HH:mm:ss"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMydate</span><span class="params">(Date mydate)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.mydate = mydate;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">            <span class="string">"mydate="</span> + mydate +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-认识注解InitBinde"><a href="#3-认识注解InitBinde" class="headerlink" title="3.认识注解InitBinde"></a>3.认识注解InitBinde</h3><p>InitBinderDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.InitBinder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 认识注解InitBinder</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InitBinderDemoController</span> </span>&#123;</span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/test01"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"test01"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/test02"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test02</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"test02"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/test03"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test03</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"test03"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/test04"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test04</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"test04"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/test05"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test05</span><span class="params">(String name, Integer user_id)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"test05"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/test06"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test06</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"test06"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/test07"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test07</span><span class="params">(User user, String name)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"test07"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@InitBinder</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"需要知道什么情况下执行？"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行之后发现，04，06都是调用了1次，05,07调用了两次，因为这些的形参，被传递过来，都要进行转换，所以就调用了@InitBinder注解：当传递过来的数据要进行转换的时候才调用。</p><h3 id="4-对要转换的字符串类型进行处理"><a href="#4-对要转换的字符串类型进行处理" class="headerlink" title="4.对要转换的字符串类型进行处理"></a>4.对要转换的字符串类型进行处理</h3><p>StringDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.WebDataBinder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.InitBinder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.beans.PropertyEditorSupport;</span><br><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对要转换的字符串类型进行处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringDemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"hs01"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">      System.out.println(user_id);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"hs02"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test02</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line">      System.out.println(user_name);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"hs03"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test03</span><span class="params">(String user_name, Integer user_id)</span> </span>&#123;</span><br><span class="line">      System.out.println(user_name);</span><br><span class="line">      System.out.println(user_id);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 时间格式的转换</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> date1</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"hs04"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test04</span><span class="params">(Date date1)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"日期为"</span> + date1);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@InitBinder</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init01</span><span class="params">(WebDataBinder binder)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//监控要转换(String)的数据类型</span></span><br><span class="line">      binder.registerCustomEditor(String.class, <span class="comment">/*匿名对象*/</span><span class="keyword">new</span> PropertyEditorSupport() &#123;</span><br><span class="line">         <span class="comment">//重写了setAsText方法</span></span><br><span class="line">         <span class="meta">@Override</span></span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAsText</span><span class="params">(String text)</span> <span class="keyword">throws</span> IllegalArgumentException </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"之前接收的值----"</span> + text);</span><br><span class="line">            <span class="comment">//对数据重新处理赋值，赋值给形参user_name</span></span><br><span class="line">            <span class="keyword">this</span>.setValue(<span class="string">"对数据处理之后的值----"</span> + text + <span class="string">"悟空"</span>);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//监控Integer类型</span></span><br><span class="line">      binder.registerCustomEditor(Integer.class, <span class="keyword">new</span> PropertyEditorSupport() &#123;</span><br><span class="line">         <span class="meta">@Override</span></span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAsText</span><span class="params">(String text)</span> <span class="keyword">throws</span> IllegalArgumentException </span>&#123;</span><br><span class="line">            System.out.println(text);</span><br><span class="line">            <span class="keyword">this</span>.setValue(<span class="string">"999"</span>);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@InitBinder</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init02</span><span class="params">(WebDataBinder binder)</span> </span>&#123;</span><br><span class="line">      binder.registerCustomEditor(Date.class, <span class="keyword">new</span> PropertyEditorSupport() &#123;</span><br><span class="line">         <span class="meta">@Override</span></span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAsText</span><span class="params">(String text)</span> <span class="keyword">throws</span> IllegalArgumentException </span>&#123;</span><br><span class="line">            DateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">               Date date = df.parse(text);</span><br><span class="line">               <span class="keyword">this</span>.setValue(date);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-用别人封装好的工具类实现各种日期类型都可以转换"><a href="#5-用别人封装好的工具类实现各种日期类型都可以转换" class="headerlink" title="5.用别人封装好的工具类实现各种日期类型都可以转换"></a>5.用别人封装好的工具类实现各种日期类型都可以转换</h3><p>需要commons-lang3-3.4.jar这个包</p><p>DateHelper.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.time.DateFormatUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.time.DateUtils;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 扩展DateUtils的基础上扩展属于自己的工具类</span></span><br><span class="line"><span class="comment"> *造轮子</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 刘文铭</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> com.shxt.commons.helper.DateHelper</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">DateHelper</span> <span class="keyword">extends</span> <span class="title">DateUtils</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String[] parsePatterns = &#123;<span class="string">"yyyy-MM-dd"</span>, <span class="string">"yyyy-MM-dd HH:mm:ss"</span>, <span class="string">"yyyy-MM-dd HH:mm"</span>,</span><br><span class="line">         <span class="string">"yyyy-MM"</span>, <span class="string">"yyyy/MM/dd"</span>, <span class="string">"yyyy/MM/dd HH:mm:ss"</span>, <span class="string">"yyyy/MM/dd HH:mm"</span>, <span class="string">"yyyy/MM"</span>, <span class="string">"yyyy.MM.dd"</span>,</span><br><span class="line">         <span class="string">"yyyy.MM.dd HH:mm:ss"</span>, <span class="string">"yyyy.MM.dd HH:mm"</span>, <span class="string">"yyyy.MM"</span>&#125;;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_DATE_TIME = <span class="string">"yyyy-MM-dd HH:mm:dd"</span>;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_DATE = <span class="string">"yyyy-MM-dd"</span>;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_TIME = <span class="string">"HH:mm:dd"</span>;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_YEAR = <span class="string">"yyyy"</span>;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_MONTH = <span class="string">"MM"</span>;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_DAY = <span class="string">"dd"</span>;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_E = <span class="string">"E"</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> Date nowDate = <span class="keyword">new</span> Date();</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> Calendar calendar = Calendar.getInstance();</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * java.util.Date转换格式（yyyy-MM-dd）</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> DateHelper.getDefDateTime(DEFAULT_DATE);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * java.util.Date转换格式（HH:mm:ss）</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> DateHelper.getDefDateTime(DEFAULT_TIME);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * java.util.Date转换格式（yyyy-MM-dd HH:mm:ss）</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentDateTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> DateHelper.getDefDateTime(DEFAULT_DATE_TIME);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取自定义格式的当前日期</span></span><br><span class="line"><span class="comment">    * &lt;p&gt;</span></span><br><span class="line"><span class="comment">    * 获取特定格式的日期</span></span><br><span class="line"><span class="comment">    * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> pattern 默认格式（yyyy-MM-dd） 可以为："yyyy-MM-dd" "HH:mm:ss" "E"</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDefDateTime</span><span class="params">(String pattern)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> DateFormatUtils.format(nowDate, pattern);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 得到当前年份字符串 格式（yyyy）</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getYear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> DateHelper.getDefDateTime(DEFAULT_YEAR);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 得到当前月份字符串 格式（MM）</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getMonth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> DateHelper.getDefDateTime(DEFAULT_MONTH);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 得到当天字符串 格式（dd）</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDay</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> DateHelper.getDefDateTime(DEFAULT_DAY);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 得到当前星期字符串 格式（E）星期几</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getWeek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> DateHelper.getDefDateTime(DEFAULT_E);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取日期字符串,java.util.Date转化为字符串</span></span><br><span class="line"><span class="comment">    * &lt;p&gt;</span></span><br><span class="line"><span class="comment">    * 使用格式化数据,</span></span><br><span class="line"><span class="comment">    * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> pattern 默认格式（yyyy-MM-dd） 可以为："yyyy-MM-dd" "HH:mm:ss" "E"</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatDate</span><span class="params">(Date date, String... pattern)</span> </span>&#123;</span><br><span class="line">      String formatDate = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">if</span> (pattern != <span class="keyword">null</span> &amp;&amp; pattern.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">         formatDate = DateFormatUtils.format(date, pattern[<span class="number">0</span>].toString().trim());</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         formatDate = DateFormatUtils.format(date, DEFAULT_DATE);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> formatDate;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 日期型字符串转化为日期 格式</span></span><br><span class="line"><span class="comment">    * &#123; "yyyy-MM-dd", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm",</span></span><br><span class="line"><span class="comment">    * "yyyy/MM/dd", "yyyy/MM/dd HH:mm:ss", "yyyy/MM/dd HH:mm",</span></span><br><span class="line"><span class="comment">    * "yyyy.MM.dd", "yyyy.MM.dd HH:mm:ss", "yyyy.MM.dd HH:mm" &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">parseDate</span><span class="params">(Object date_str)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="keyword">if</span> (date_str == <span class="keyword">null</span> || String.valueOf(date_str).trim().length() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> DateUtils.parseDate(String.valueOf(date_str).trim(), parsePatterns);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (ParseException pe) &#123;</span><br><span class="line">         System.out.println(<span class="string">"DateHelper--&gt;parseDate方法格式化错误"</span>);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取过去的天数</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">pastDays</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">long</span> t = <span class="keyword">new</span> Date().getTime() - date.getTime();</span><br><span class="line">      <span class="keyword">return</span> t / (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取过去的小时</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">pastHour</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">long</span> t = <span class="keyword">new</span> Date().getTime() - date.getTime();</span><br><span class="line">      <span class="keyword">return</span> t / (<span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取过去的分钟</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">pastMinutes</span><span class="params">(Date date)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">long</span> t = <span class="keyword">new</span> Date().getTime() - date.getTime();</span><br><span class="line">      <span class="keyword">return</span> t / (<span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 转换为时间（天,时:分:秒.毫秒）</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> timeMillis</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatDateTime</span><span class="params">(<span class="keyword">long</span> timeMillis)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">long</span> day = timeMillis / (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">      <span class="keyword">long</span> hour = timeMillis / (<span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>) - day * <span class="number">24</span>;</span><br><span class="line">      <span class="keyword">long</span> min = timeMillis / (<span class="number">60</span> * <span class="number">1000</span>) - day * <span class="number">24</span> * <span class="number">60</span> - hour * <span class="number">60</span>;</span><br><span class="line">      <span class="keyword">long</span> s = timeMillis / <span class="number">1000</span> - day * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> - hour * <span class="number">60</span> * <span class="number">60</span> - min * <span class="number">60</span>;</span><br><span class="line">      <span class="keyword">long</span> sss = timeMillis - day * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span> - hour * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span> - min * <span class="number">60</span> * <span class="number">1000</span> - s * <span class="number">1000</span>;</span><br><span class="line">      <span class="keyword">return</span> (day &gt; <span class="number">0</span> ? day + <span class="string">","</span> : <span class="string">""</span>) + hour + <span class="string">":"</span> + min + <span class="string">":"</span> + s + <span class="string">"."</span> + sss;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取两个日期之间的天数</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> before</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> after</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">getDistanceOfTwoDate</span><span class="params">(Date before, Date after)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">long</span> beforeTime = before.getTime();</span><br><span class="line">      <span class="keyword">long</span> afterTime = after.getTime();</span><br><span class="line">      <span class="keyword">return</span> (afterTime - beforeTime) / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取当前日期,一周前的日期字符串</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getLastWeek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">long</span> rightnow = calendar.getTimeInMillis();</span><br><span class="line">      <span class="keyword">long</span> aweekbefore = <span class="number">6</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">      <span class="keyword">return</span> DateFormatUtils.format(rightnow - aweekbefore, DEFAULT_DATE);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取格式化当前月第一天的表达式</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFirstDayInMonth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      calendar.set(DateHelper.getYearNUM(), DateHelper.getMonthNUM() - <span class="number">1</span>, <span class="number">1</span>);<span class="comment">// 设为当前月的1号 ，月从0开始</span></span><br><span class="line">      <span class="keyword">return</span> DateFormatUtils.format(calendar.getTime(), DEFAULT_DATE);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取格式化给定月(参数：逻辑月)第一天的表达式，重载方法</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> month</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFirstDayInMonth</span><span class="params">(<span class="keyword">int</span> month)</span> </span>&#123;</span><br><span class="line">      calendar.set(DateHelper.getYearNUM(), month - <span class="number">1</span>, <span class="number">1</span>);<span class="comment">// 设为当前月的1号 ，月从0开始</span></span><br><span class="line">      <span class="keyword">return</span> DateFormatUtils.format(calendar.getTime(), DEFAULT_DATE);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取格式化给定月(参数：逻辑月)最后一天的表达式</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> month</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getLastDayInMonth</span><span class="params">(<span class="keyword">int</span> month)</span> </span>&#123;</span><br><span class="line">      calendar.set(DateHelper.getYearNUM(), month, <span class="number">1</span>); <span class="comment">// 设成下个月的一号，往前减一天的时间</span></span><br><span class="line">      <span class="keyword">return</span> DateFormatUtils.format(calendar.getTimeInMillis() - <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>, DEFAULT_DATE);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取格式化当前季度第一天的表达式</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFirstDayInQuart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> month = DateHelper.getMonthNUM();</span><br><span class="line">      <span class="keyword">if</span> (month &gt;= <span class="number">1</span> &amp;&amp; month &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">         month = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (month &gt;= <span class="number">4</span> &amp;&amp; month &lt;= <span class="number">6</span>) &#123;</span><br><span class="line">         month = <span class="number">4</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (month &gt;= <span class="number">7</span> &amp;&amp; month &lt;= <span class="number">9</span>) &#123;</span><br><span class="line">         month = <span class="number">7</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (month &gt;= <span class="number">10</span> &amp;&amp; month &lt;= <span class="number">12</span>) &#123;</span><br><span class="line">         month = <span class="number">10</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      calendar.set(DateHelper.getYearNUM(), month - <span class="number">1</span>, <span class="number">1</span>); <span class="comment">// 当年当季一号，月从0开始</span></span><br><span class="line">      <span class="keyword">return</span> DateFormatUtils.format(calendar.getTime(), DEFAULT_DATE);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String 获取格式化一年第一天的表达式</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFirstDayInYear</span><span class="params">()</span> </span>&#123; <span class="comment">/** 获取格式化一年第一天的表达式 **/</span></span><br><span class="line">      calendar.set(calendar.get(Calendar.YEAR), <span class="number">0</span>, <span class="number">1</span>); <span class="comment">// 当年第一个月一号，月从0开始</span></span><br><span class="line">      <span class="keyword">return</span> DateFormatUtils.format(calendar.getTime(), DEFAULT_DATE);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> int 获得当前年份</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getYearNUM</span><span class="params">()</span> </span>&#123; <span class="comment">/** 获得当前年份 */</span></span><br><span class="line">      <span class="keyword">return</span> calendar.get(Calendar.YEAR);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> int 获得当前月份</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMonthNUM</span><span class="params">()</span> </span>&#123; <span class="comment">/*** 获得当前月份 **/</span></span><br><span class="line">      <span class="keyword">return</span> calendar.get(Calendar.MONTH) + <span class="number">1</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> int 获得当前周数</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getWeekNUM</span><span class="params">()</span> </span>&#123; <span class="comment">/*** 获得当前周数 **/</span></span><br><span class="line">      <span class="keyword">return</span> calendar.get(Calendar.DAY_OF_WEEK);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> int 取到一天中的小时数</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getHoursofDay</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> Calendar.HOUR_OF_DAY;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取最近ndays天(含今天)的日期，返回日期表达式数组</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> ndays</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> String[]</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> String[] getDaysBackward(<span class="keyword">int</span> ndays) &#123;</span><br><span class="line">      String[] daysBackward = <span class="keyword">new</span> String[ndays];</span><br><span class="line">      Calendar lastDate;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ndays; i++) &#123;</span><br><span class="line">         lastDate = Calendar.getInstance();</span><br><span class="line">         lastDate.add(Calendar.DATE, -<span class="number">1</span> * i); <span class="comment">// 减去一天，变为上月最后一天</span></span><br><span class="line">         daysBackward[ndays - <span class="number">1</span> - i] = DateFormatUtils.format(lastDate.getTimeInMillis(), DEFAULT_DATE);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> daysBackward;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DateDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用别人封装好的时间类型转换类，造轮子</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> mydate</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/client01"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">(Date mydate)</span> </span>&#123;</span><br><span class="line">   System.out.println(mydate);</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@InitBinder</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initDate</span><span class="params">(WebDataBinder binder)</span> </span>&#123;</span><br><span class="line">   binder.registerCustomEditor(Date.class, <span class="keyword">new</span> PropertyEditorSupport()&#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAsText</span><span class="params">(String text)</span> <span class="keyword">throws</span> IllegalArgumentException </span>&#123;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">this</span>.setValue(DateHelper.parseDate(text));</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面还是那个demo01.jsp页面</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;后台接收前台传来的日期类型，@DateTimeFormat注解简单使用，认识注解InitBinde，对要转换的字符串类型进行处理，&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（五）客户端数据传递的专题(前台传数据到后台)</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%92%E7%9A%84%E4%B8%93%E9%A2%98(%E5%89%8D%E5%8F%B0%E4%BC%A0%E6%95%B0%E6%8D%AE%E5%88%B0%E5%90%8E%E5%8F%B0)/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（五）客户端数据传递的专题(前台传数据到后台)/</id>
    <published>2018-08-20T08:31:22.000Z</published>
    <updated>2018-08-23T05:57:13.027Z</updated>
    
    <content type="html"><![CDATA[<p>简单的数据类型获取，数组的获取方式，对象专题，占位符传递简单数据，前台传来JSON格式字符串处理，两个对象和关联对象，不同对象的同属性解决方案，Map的写法(一般分页查询)，List的获取(一般批量添加)，json传给前台的解决方案，JavaScript对象和JSON格式字符串互转，java对象(自定义对象，集合)和JSON格式字符串互转，Ajax传递JSON,@RequestBody作用</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug9mzivfbj208w0goaad.jpg" alt=""><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug9bwexbgj208t0dzmxa.jpg" alt=""></p><h3 id="2-简单数据类型获取"><a href="#2-简单数据类型获取" class="headerlink" title="2.简单数据类型获取"></a>2.简单数据类型获取</h3><h4 id="java-web阶段获取方式"><a href="#java-web阶段获取方式" class="headerlink" title="java web阶段获取方式"></a>java web阶段获取方式</h4><p>demo01.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>JAVA WEB阶段 服务端如何获取客户端的数据<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client01"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user_name"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"basketball"</span>&gt;</span>篮球</span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"football"</span>&gt;</span>足球</span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"book"</span>&gt;</span>看书</span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>传统模式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>SimpleTypeDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * javaweb形式获取</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/client01"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">   String user_name = request.getParameter(<span class="string">"user_name"</span>);</span><br><span class="line">   String[] hobby = request.getParameterValues(<span class="string">"hobby"</span>);</span><br><span class="line">   System.out.println(<span class="string">"姓名"</span> + user_name);</span><br><span class="line">   <span class="keyword">for</span> (String s : hobby) &#123;</span><br><span class="line">      System.out.print(s + <span class="string">"--"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="RequestParam获取数据"><a href="#RequestParam获取数据" class="headerlink" title="@RequestParam获取数据"></a>@RequestParam获取数据</h4><p>demo02.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>@RequestParam获取数据<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client02"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">   &lt;%--&lt;input type="text" name="user_name"&gt;&lt;br&gt;--%&gt;</span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"user_id"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>获取数据写法,可以自动完成类型转换，name和value属性是等价的</p><p>SimpleTypeDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过<span class="doctag">@RequestParam</span>注解获取数据，注解还自动转换类型,value和name一样</span></span><br><span class="line"><span class="comment"> * required是否必须要接受到这个值，默认true</span></span><br><span class="line"><span class="comment"> * defaultValue默认设置，如果没有接收到值，则默认设置值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/client02"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test02</span><span class="params">(@RequestParam(value = <span class="string">"user_name"</span>, required = <span class="keyword">false</span>)</span> String name,</span></span><br><span class="line"><span class="function">                           @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"user_id"</span>, required = <span class="keyword">false</span>, defaultValue = <span class="string">"1111"</span>)</span> Integer id) </span>&#123;</span><br><span class="line">   System.out.println(<span class="string">"姓名"</span> + name);</span><br><span class="line">   System.out.println(<span class="string">"ID"</span> + id);</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="RequestParam获取数据简写方式"><a href="#RequestParam获取数据简写方式" class="headerlink" title="@RequestParam获取数据简写方式"></a>@RequestParam获取数据简写方式</h4><p> 只要传递的名称和形参的名称两者保持一致即可,并且默认情况下required=false</p><p>demo03.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>简写方式<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client03"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user_name"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"user_id"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>SimpleTypeDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简写方式，传递的名称和接收的形参名字一样就可以，required默认为false</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/client03"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test03</span><span class="params">(String user_name,Integer user_id)</span> </span>&#123;</span><br><span class="line">   System.out.println(<span class="string">"姓名"</span> + user_name);</span><br><span class="line">   System.out.println(<span class="string">"ID"</span> + user_id);</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-传递数组专题"><a href="#3-传递数组专题" class="headerlink" title="3.传递数组专题"></a>3.传递数组专题</h3><p>超链接传递数组、复选框传递数组、文本框传递数组、多选列表</p><p>demo04.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>超链接传递数组<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"client04?role_id=100&amp;role_id=200&amp;role_id=300"</span>&gt;</span>传递数组<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>复选框传递数组<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client05"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"basketball"</span>&gt;</span>篮球</span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"football"</span>&gt;</span>足球</span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"book"</span>&gt;</span>看书</span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>简写方式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>文本框传递数组<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client06"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"hobby"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>简写方式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>多选列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client07"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">multiple</span>=<span class="string">"multiple"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"music"</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"book"</span>&gt;</span>看书<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"football"</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>简写方式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ArrayTypeDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数组的获取方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayTypeDemoController</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 超链接获取数组</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/client04"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">(@RequestParam(name = <span class="string">"role_id"</span>)</span> Integer[] roles) </span>&#123;</span><br><span class="line">      System.out.println(Arrays.asList(roles));</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 复选框传递数组</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> roles</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/client05"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test02</span><span class="params">(String[] hobby)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (hobby != <span class="keyword">null</span>) &#123;</span><br><span class="line">         System.out.println(Arrays.asList(hobby));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         System.out.println(<span class="string">"您没有爱好！"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 文本框传递数据</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> hobby</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/client06"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test03</span><span class="params">(String[] hobby)</span> </span>&#123;</span><br><span class="line">      System.out.println(Arrays.asList(hobby));</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 多选列表传递数组</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> hobby</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/client07"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test04</span><span class="params">(String[] hobby)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (hobby != <span class="keyword">null</span>) &#123;</span><br><span class="line">         System.out.println(Arrays.asList(hobby));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         System.out.println(<span class="string">"您没有爱好！！"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-对象专题"><a href="#4-对象专题" class="headerlink" title="4.对象专题"></a>4.对象专题</h3><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> Integer user_id;</span><br><span class="line">   <span class="keyword">private</span> String user_name;</span><br><span class="line">   <span class="keyword">private</span> String sex;</span><br><span class="line">   <span class="keyword">private</span> Role role;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> sex;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.sex = sex;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Role <span class="title">getRole</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> role;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole</span><span class="params">(Role role)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.role = role;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">            <span class="string">"user_id="</span> + user_id +</span><br><span class="line">            <span class="string">", user_name='"</span> + user_name + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">", sex='"</span> + sex + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">", role="</span> + role +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Role.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> String role_name;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getRole_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> role_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_name</span><span class="params">(String role_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.role_name = role_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"Role&#123;"</span> +</span><br><span class="line">            <span class="string">"role_name='"</span> + role_name + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> Integer user_id;</span><br><span class="line">   <span class="keyword">private</span> String user_name;</span><br><span class="line">   <span class="keyword">private</span> String sex;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> sex;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.sex = sex;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"Student&#123;"</span> +</span><br><span class="line">            <span class="string">"user_id="</span> + user_id +</span><br><span class="line">            <span class="string">", user_name='"</span> + user_name + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">", sex='"</span> + sex + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="简单对象属性名和传递名称一致"><a href="#简单对象属性名和传递名称一致" class="headerlink" title="简单对象属性名和传递名称一致"></a>简单对象属性名和传递名称一致</h4><p>传递的名称和类中属性保持一致即可,如果传递的数据类型转换失败会报400错误</p><p>页面内容都是在demo05.jsp，java代码都在ModelTypeDemoController.java</p><p>demo05.jsp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2&gt;简单对象数据传递：传递的名称(name)为类中的属性名字一样即可&lt;/h2&gt;</span><br><span class="line">&lt;form action=&quot;client08&quot;&gt;</span><br><span class="line">   姓名：&lt;input type=&quot;text&quot; name=&quot;user_name&quot;&gt;</span><br><span class="line">   性别：&lt;input type=&quot;text&quot; name=&quot;sex&quot;&gt;</span><br><span class="line">   &lt;button&gt;提交数据&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>ModelTypeDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单对象传递</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/client08"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">(User user, String user_name, String sex)</span> </span>&#123;</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   System.out.println(<span class="string">"-----依然可以使用简单方式----"</span>);</span><br><span class="line">   System.out.println(user_name);</span><br><span class="line">   System.out.println(sex);</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多个对象"><a href="#多个对象" class="headerlink" title="多个对象"></a>多个对象</h4><p>一个表单有两个对象[对象中的属性名称不一致</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2&gt;多个对象&lt;/h2&gt;</span><br><span class="line">&lt;form action=&quot;client09&quot;&gt;</span><br><span class="line">   姓名：&lt;input type=&quot;text&quot; name=&quot;user_name&quot;&gt;</span><br><span class="line">   性别：&lt;input type=&quot;text&quot; name=&quot;sex&quot;&gt;</span><br><span class="line">   角色名称：&lt;input type=&quot;text&quot; name=&quot;role_name&quot;&gt;</span><br><span class="line">   &lt;button&gt;提交数据&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 多个对象传递</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> role</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/client09"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test02</span><span class="params">(User user, Role role)</span> </span>&#123;</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   System.out.println(<span class="string">"-----角色----"</span>);</span><br><span class="line">   System.out.println(role);</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="关联对象"><a href="#关联对象" class="headerlink" title="关联对象"></a>关联对象</h4><h5 id="方式一：后台处理"><a href="#方式一：后台处理" class="headerlink" title="方式一：后台处理"></a>方式一：后台处理</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>多个对象进行关联方式一:后台处理<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client10"</span>&gt;</span></span><br><span class="line">   姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user_name"</span>&gt;</span></span><br><span class="line">   性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"sex"</span>&gt;</span></span><br><span class="line">   角色名称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"role_name"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关联对象_方式一:后台处理</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> role</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/client10"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test03</span><span class="params">(User user, Role role)</span> </span>&#123;</span><br><span class="line">   <span class="comment">//设置关联关系</span></span><br><span class="line">   user.setRole(role);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="方式二：前台处理（重点掌握）"><a href="#方式二：前台处理（重点掌握）" class="headerlink" title="方式二：前台处理（重点掌握）"></a>方式二：前台处理（重点掌握）</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>多个对象进行关联方式二：前台处理<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client11"</span>&gt;</span></span><br><span class="line">   姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user_name"</span>&gt;</span></span><br><span class="line">   性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"sex"</span>&gt;</span></span><br><span class="line">   角色名称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"role.role_name"</span>&gt;</span><span class="tag">&lt;<span class="name">%--name=类中.属性--%</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关联对象_方式二：前台处理</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/client11"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test04</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="不同对象同属性传递借助第三方类"><a href="#不同对象同属性传递借助第三方类" class="headerlink" title="不同对象同属性传递借助第三方类"></a>不同对象同属性传递借助第三方类</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>不同对象同属性传递借助第三方类<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client12"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h3</span>&gt;</span>用户<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">   姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user.user_name"</span>&gt;</span></span><br><span class="line">   性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user.sex"</span>&gt;</span></span><br><span class="line">   角色信息：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user.role.role_name"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h3</span>&gt;</span>学生<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">   姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"student.user_name"</span>&gt;</span></span><br><span class="line">   性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"student.sex"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 不同对象，同属性问题，借助第三方类解决问题</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/client12"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test05</span><span class="params">(HsModel hsModel)</span> </span>&#123;</span><br><span class="line">   System.out.println(hsModel.getStudent());</span><br><span class="line">   System.out.println(hsModel.getUser());</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第三方类HsModel.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HsModel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> User user;</span><br><span class="line"><span class="keyword">private</span> Student student;</span><br><span class="line"><span class="keyword">private</span> Map&lt;String,Object&gt; query;</span><br><span class="line"><span class="keyword">private</span> List&lt;Student&gt; studentList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user = user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Student <span class="title">getStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> student;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStudent</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.student = student;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getQuery</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> query;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setQuery</span><span class="params">(Map&lt;String, Object&gt; query)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.query = query;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">getStudentList</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> studentList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStudentList</span><span class="params">(List&lt;Student&gt; studentList)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.studentList = studentList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"HsModel&#123;"</span> +</span><br><span class="line"><span class="string">"user="</span> + user +</span><br><span class="line"><span class="string">", student="</span> + student +</span><br><span class="line"><span class="string">", query="</span> + query +</span><br><span class="line"><span class="string">", studentList="</span> + studentList +</span><br><span class="line"><span class="string">'&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-Map的写法"><a href="#5-Map的写法" class="headerlink" title="5.Map的写法"></a>5.Map的写法</h3><p>demo05.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>如果是Map属性也是借助第三方类<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client13"</span>&gt;</span></span><br><span class="line">   姓名：&lt;input type="text" name="query['user_name']"&lt;%--属性['需要设置的key值']--%&gt;&gt;</span><br><span class="line">   性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"query['sex']"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MapTypeDemoController.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package com.hs.web;</span><br><span class="line"></span><br><span class="line">import com.hs.model.HsModel;</span><br><span class="line">import org.springframework.stereotype.Controller;</span><br><span class="line">import org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line">import org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Map_分页保存查询</span><br><span class="line"> */</span><br><span class="line">@Controller</span><br><span class="line">public class MapTypeDemoController &#123;</span><br><span class="line"></span><br><span class="line">   /**</span><br><span class="line">    * map接收数据，通过第三方类</span><br><span class="line">    * @param hsModel</span><br><span class="line">    * @return</span><br><span class="line">    */</span><br><span class="line">   @GetMapping(&quot;/client13&quot;)</span><br><span class="line">   public ModelAndView test01(HsModel hsModel) &#123;</span><br><span class="line">      System.out.println(hsModel.getQuery());</span><br><span class="line">      return null;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-List的写法"><a href="#6-List的写法" class="headerlink" title="6.List的写法"></a>6.List的写法</h3><p>demo05.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>传递List也是借助第三方类<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"client14"</span>&gt;</span></span><br><span class="line">   姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"studentList[0].user_name"</span>&gt;</span> <span class="tag">&lt;<span class="name">%--设置第1条数据的user_name--%</span>&gt;</span></span><br><span class="line">   性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"studentList[0].sex"</span>&gt;</span><span class="tag">&lt;<span class="name">%--设置第1条数据的sex--%</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">   姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"studentList[1].user_name"</span>&gt;</span> <span class="tag">&lt;<span class="name">%--设置第2条数据的user_name--%</span>&gt;</span></span><br><span class="line">   性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"studentList[1].sex"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">   姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"studentList[5].user_name"</span>&gt;</span> <span class="tag">&lt;<span class="name">%--设置第6条数据的user_name,同时也设置了这个list长度是6--%</span>&gt;</span></span><br><span class="line">   性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"studentList[5].sex"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>studentList[1].user_name 类中属性 [ 索引 ]. 属性名 </p><p>ListTypeDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.HsModel;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * List数据_一般做批量添加</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListTypeDemoController</span> </span>&#123;</span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/client14"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">(HsModel hsModel)</span> </span>&#123;</span><br><span class="line">      System.out.println(hsModel.getStudentList());</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-占位符传递数据"><a href="#7-占位符传递数据" class="headerlink" title="7.占位符传递数据"></a>7.占位符传递数据</h3><p>demo05.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>占位符传递数据<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"client15/11110/tomcat?sex=man"</span>&gt;</span>占位符传递数据<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>占位符传递数据——可以直接使用Map来接收数据<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"client16/123/tomcat?sex=man"</span>&gt;</span>使用Map接收数据<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>PlaceholderTypeDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 占位符传递简单数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PlaceholderTypeDemoController</span> </span>&#123;</span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/client15/&#123;id&#125;/&#123;name&#125;"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">         @PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">int</span> user_id,<span class="comment">/*占位符的名字和形参不一样，在PathVariable中需要写占位符的名字*/</span></span></span><br><span class="line"><span class="function">         @PathVariable String name,<span class="comment">/*一样则可以省略*/</span></span></span><br><span class="line"><span class="function">         String sex  <span class="comment">/*@RequestParam的简写方式*/</span></span></span><br><span class="line"><span class="function">   ) </span>&#123;</span><br><span class="line">      System.out.println(user_id);</span><br><span class="line">      System.out.println(name);</span><br><span class="line">      System.out.println(sex);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"/client16/&#123;id&#125;/&#123;name&#125;"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">         @PathVariable Map&lt;String,Object&gt; map,<span class="comment">/*占位符的名字作为key值*/</span></span></span></span><br><span class="line"><span class="function"><span class="params">         String sex  <span class="comment">/*@RequestParam的简写方式*/</span></span></span></span><br><span class="line"><span class="function"><span class="params">   )</span> </span>&#123;</span><br><span class="line">      System.out.println(map);</span><br><span class="line">      System.out.println(sex);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-JavaScript对象和JSON互转"><a href="#8-JavaScript对象和JSON互转" class="headerlink" title="8.JavaScript对象和JSON互转"></a>8.JavaScript对象和JSON互转</h3><p>需要Jackson的三个jar包：jackson-annotations-2.8.1.jar，jackson-core-2.8.1.jar，jackson-databind-2.8.1.jar</p><p>demo06.jsp(在浏览器F12，看console输出)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">   &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">   //给对象赋值的几种方 式</span><br><span class="line">    var obj = &#123;</span><br><span class="line">        user_name: &quot;悟空&quot;,</span><br><span class="line">        sex: &quot;男&quot;,</span><br><span class="line">        hobby: [&quot;basktball&quot;, &quot;football&quot;],</span><br><span class="line">        classInfo: &#123;</span><br><span class="line">            class_name: &quot;计算机&quot;,</span><br><span class="line">           number:8</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    obj.nickname = &quot;齐天大圣&quot;;</span><br><span class="line">    obj[&quot;age&quot;] = 500;</span><br><span class="line"></span><br><span class="line">    console.log(obj);</span><br><span class="line"></span><br><span class="line">    //1.将JavaScript对象转换为JSON格式的字符串</span><br><span class="line">    var jsonStr = JSON.stringify(obj);</span><br><span class="line">    console.log(jsonStr);</span><br><span class="line">    //2.将JSON格式的字符串转换为JavaScript对象</span><br><span class="line">    var hs = JSON.parse(jsonStr);</span><br><span class="line">    console.log(hs);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="9-java对象和json互转"><a href="#9-java对象和json互转" class="headerlink" title="9.java对象和json互转"></a>9.java对象和json互转</h3><p>JSON2JavaTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JavaType;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.hs.model.Role;</span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JSON2JavaTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Java对象和JSON字符串的互相转换</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test01</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">      Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">      map.put(<span class="string">"user_name"</span>,<span class="string">"悟空"</span>);</span><br><span class="line">      map.put(<span class="string">"age"</span>, <span class="number">500</span>);</span><br><span class="line">      map.put(<span class="string">"hobby"</span>,<span class="comment">/*静态初始化数据*/</span> <span class="keyword">new</span> String[]&#123;<span class="string">"music"</span>,<span class="string">"book"</span>&#125;);</span><br><span class="line">      System.out.println(<span class="string">"转换之前的Map:"</span>+map);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//1.java对象转JSON格式的字符串</span></span><br><span class="line">      ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">      String jsonString = objectMapper.writeValueAsString(map);</span><br><span class="line">      System.out.println(<span class="string">"java对象转JSON格式的字符串:"</span>+jsonString);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//2.JSON字符串转换为java对象</span></span><br><span class="line">      Map&lt;String, Object&gt; hsMap = objectMapper.readValue(jsonString, Map.class);</span><br><span class="line">      System.out.println(<span class="string">"JSON字符串转换为java对象:"</span>+hsMap);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * java对象转json字符串__自定义对象互相转换</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      User user = <span class="keyword">new</span> User();</span><br><span class="line">      user.setUser_id(<span class="number">100</span>);</span><br><span class="line">      user.setUser_name(<span class="string">"八戒"</span>);</span><br><span class="line">      user.setSex(<span class="string">"男"</span>);</span><br><span class="line"></span><br><span class="line">      Role role = <span class="keyword">new</span> Role();</span><br><span class="line">      role.setRole_name(<span class="string">"超级管理员"</span>);</span><br><span class="line">      <span class="comment">//建立联系</span></span><br><span class="line">      user.setRole(role);</span><br><span class="line">      System.out.println(<span class="string">"转换之前的User:"</span>+user);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//1.java对象转json字符串</span></span><br><span class="line">      ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">      String jsonString = objectMapper.writeValueAsString(user);</span><br><span class="line">      System.out.println(<span class="string">"java对象转json字符串:"</span>+jsonString);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//2.json字符串转java对象</span></span><br><span class="line">      User hsUser = objectMapper.readValue(jsonString, User.class);</span><br><span class="line">      System.out.println(<span class="string">"json字符串转java对象:"</span>+hsUser);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * java对象转json字符串__集合</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">      User user = <span class="keyword">new</span> User();</span><br><span class="line">      user.setUser_id(<span class="number">100</span>);</span><br><span class="line">      user.setUser_name(<span class="string">"八戒"</span>);</span><br><span class="line">      user.setSex(<span class="string">"男"</span>);</span><br><span class="line">      Role role = <span class="keyword">new</span> Role();</span><br><span class="line">      role.setRole_name(<span class="string">"超级管理员"</span>);</span><br><span class="line">      user.setRole(role);</span><br><span class="line">      userList.add(user);</span><br><span class="line"></span><br><span class="line">      user = <span class="keyword">new</span> User();</span><br><span class="line">      user.setUser_id(<span class="number">100</span>);</span><br><span class="line">      user.setUser_name(<span class="string">"悟空"</span>);</span><br><span class="line">      user.setSex(<span class="string">"男"</span>);</span><br><span class="line">      role = <span class="keyword">new</span> Role();</span><br><span class="line">      role.setRole_name(<span class="string">"管理员"</span>);</span><br><span class="line">      user.setRole(role);</span><br><span class="line">      userList.add(user);</span><br><span class="line"></span><br><span class="line">      System.out.println(<span class="string">"转换之前的List&lt;User&gt;:"</span>+userList);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//1.java对象转json字符串</span></span><br><span class="line">      ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">      String jsonString = objectMapper.writeValueAsString(userList);</span><br><span class="line">      System.out.println(<span class="string">"java对象转json字符串:"</span>+jsonString);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//2.json字符串转java对象</span></span><br><span class="line">      System.out.println(<span class="string">"组成的List&lt;Map&gt;:"</span>+objectMapper.readValue(jsonString, List.class)); <span class="comment">//组成的是List&lt;Map&gt;</span></span><br><span class="line">      JavaType t = objectMapper.getTypeFactory().constructParametricType(List.class, User.class);</span><br><span class="line">      List&lt;User&gt; tempList = objectMapper.readValue(jsonString, t);</span><br><span class="line">      System.out.println(<span class="string">"json字符串转java对象:"</span>+tempList);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-前台传给后台json，然后返回给前台json"><a href="#10-前台传给后台json，然后返回给前台json" class="headerlink" title="10.前台传给后台json，然后返回给前台json"></a>10.前台传给后台json，然后返回给前台json</h3><p>demo07.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"resource/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">   $(function () &#123;</span></span><br><span class="line"><span class="undefined">      var obj = &#123;</span></span><br><span class="line"><span class="undefined">          user_id:888,</span></span><br><span class="line"><span class="undefined">         user_name:"悟空",</span></span><br><span class="line"><span class="undefined">         sex:"男",</span></span><br><span class="line"><span class="undefined">         role:&#123;</span></span><br><span class="line"><span class="undefined">              role_name:"超级管理员"</span></span><br><span class="line"><span class="undefined">         &#125;</span></span><br><span class="line"><span class="undefined">      &#125;;</span></span><br><span class="line"><span class="undefined">      //1.JavaScript对象转换json格式字符串</span></span><br><span class="line"><span class="undefined">        var jsonStr = JSON.stringify(obj);</span></span><br><span class="line"><span class="undefined">        //2.将该字符串传递到controller</span></span><br><span class="line"><span class="undefined">      /*$.get("json01",&#123;hs:jsonStr&#125;,function (data) &#123;</span></span><br><span class="line"><span class="undefined">          //date是后台返回了一个JSON格式的字符串</span></span><br><span class="line"><span class="undefined">          alert(data);    //alert(data)弹出这个字符串全部，下面那个是把json对象转换为JavaScript字符串好取值</span></span><br><span class="line"><span class="undefined">        &#125;)*/</span></span><br><span class="line"><span class="undefined">      $.get("json01",&#123;hs:jsonStr&#125;,function (data) &#123;</span></span><br><span class="line"><span class="undefined">          //data转换一、或者加"json"</span></span><br><span class="line"><span class="undefined">          // alert(JSON.parse(data);</span></span><br><span class="line"><span class="undefined">            alert(data);</span></span><br><span class="line"><span class="undefined">            //取这个JavaScript字符串的某个值</span></span><br><span class="line"><span class="undefined">            alert(data.role.role_name);</span></span><br><span class="line"><span class="undefined">        &#125;,"json")</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JSONTypeDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JSONTypeDemoController</span> </span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 整个流程是，前台JavaScript转换json，把json传给后台，后台再转换为java对象，进行修改等操作，</span></span><br><span class="line"><span class="comment">    * 然后这个对象再通过注解<span class="doctag">@ResponseBody</span>转换为前台data接收到的JSON格式的字符串</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> hs</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"json01"</span>)</span><br><span class="line">   <span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> User <span class="title">json01</span><span class="params">(String hs)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">      System.out.println(hs);</span><br><span class="line">      <span class="comment">//将前台传过来的json格式对象转换为java对象</span></span><br><span class="line">      ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">      User user = objectMapper.readValue(hs, User.class);</span><br><span class="line">      user.setSex(<span class="string">"女"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> user;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>如何只是单纯的写了上面代码，运行，会发现alert，不会出现数据，这是一个bug问题，需要解决，往前台传入json的，都需要配置这个，在springmvc.xml中加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--1.启动SpringMVC注解--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--解决下载的时候转换问题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.ByteArrayHttpMessageConverter"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--解决@ResponseBody在IE浏览器的BUG问题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prettyPrint"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>text/html;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>text/plan;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="11-Ajax传递JSON和-RequestBody的作用（强烈推荐使用这种）"><a href="#11-Ajax传递JSON和-RequestBody的作用（强烈推荐使用这种）" class="headerlink" title="11.Ajax传递JSON和@RequestBody的作用（强烈推荐使用这种）"></a>11.Ajax传递JSON和@RequestBody的作用（强烈推荐使用这种）</h3><p>demo08.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"resource/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">   $(function () &#123;</span></span><br><span class="line"><span class="undefined">      var obj = &#123;</span></span><br><span class="line"><span class="undefined">          user_id:888,</span></span><br><span class="line"><span class="undefined">         user_name:"悟空",</span></span><br><span class="line"><span class="undefined">         sex:"男",</span></span><br><span class="line"><span class="undefined">         role:&#123;</span></span><br><span class="line"><span class="undefined">              role_name:"超级管理员"</span></span><br><span class="line"><span class="undefined">         &#125;</span></span><br><span class="line"><span class="undefined">      &#125;;</span></span><br><span class="line"><span class="undefined">      //1.JavaScript对象转换json格式字符串</span></span><br><span class="line"><span class="undefined">        var jsonStr = JSON.stringify(obj);</span></span><br><span class="line"><span class="undefined">        //2.使用原生的方式</span></span><br><span class="line"><span class="undefined">      $.ajax(&#123;</span></span><br><span class="line"><span class="undefined">         type:"POST",//必须为POST请求，如果你要传递JSON字符串</span></span><br><span class="line"><span class="undefined">         url:"json02",</span></span><br><span class="line"><span class="undefined">         data:jsonStr,</span></span><br><span class="line"><span class="undefined">         dataType:"json",    //解析返回来的data数据的类型</span></span><br><span class="line"><span class="undefined">         contentType: "application/json;charset=UTF-8",</span></span><br><span class="line"><span class="undefined">         processData:false,</span></span><br><span class="line"><span class="undefined">         success:function (data) &#123;</span></span><br><span class="line"><span class="undefined">                alert(data);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">      &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JSONTypeDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过ajax传递过来数据，<span class="doctag">@RequestBody</span>相当于完成了上面的</span></span><br><span class="line"><span class="comment"> * ObjectMapper objectMapper = new ObjectMapper();</span></span><br><span class="line"><span class="comment"> *        User user = objectMapper.readValue(hs, User.class);</span></span><br><span class="line"><span class="comment"> *     这两步，但是前提是传过来的字段名和user类的属性名一样，才能正常转换</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/json02"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">json02</span><span class="params">(@RequestBody User user)</span> </span>&#123;</span><br><span class="line">   user.setUser_name(<span class="string">"八戒"</span>);</span><br><span class="line">   <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简单的数据类型获取，数组的获取方式，对象专题，占位符传递简单数据，前台传来JSON格式字符串处理，两个对象和关联对象，不同对象的同属性解决方案，Map的写法(一般分页查询)，List的获取(一般批量添加)，json传给前台的解决方案，JavaScript对象和JSON格式字符串互转，java对象(自定义对象，集合)和JSON格式字符串互转，Ajax传递JSON,@RequestBody作用&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（四）控制器形参和返回类型</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%E6%8E%A7%E5%88%B6%E5%99%A8%E5%BD%A2%E5%8F%82%E5%92%8C%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（四）控制器形参和返回类型/</id>
    <published>2018-08-20T07:56:27.000Z</published>
    <updated>2018-08-23T05:57:51.900Z</updated>
    
    <content type="html"><![CDATA[<p>控制器里形参的说明：类可以被实例化。关于返回值类型说明：ModelAndView 官方使用方式(传值，跳转页面)，void类型(直接输出页面)，String类型(也可以跳转页面)，任意数据类型(主要JSON数据处理)</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug88t2k2xj20cy0lrwfs.jpg" alt=""></p><p>需要添加tomcat的依赖，要不然没有HttpServletRequest等类，eclipse不用<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug89tqwp1j20zk0gz771.jpg" alt=""></p><h3 id="2-User-java"><a href="#2-User-java" class="headerlink" title="2.User.java"></a>2.User.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> Integer role_id;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Integer <span class="title">getRole_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> role_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_id</span><span class="params">(Integer role_id)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.role_id = role_id;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.name = name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">            <span class="string">"role_id="</span> + role_id +</span><br><span class="line">            <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">            <span class="string">'&#125;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-形参的说明-可以被实例化"><a href="#3-形参的说明-可以被实例化" class="headerlink" title="3.形参的说明:可以被实例化"></a>3.形参的说明:可以被实例化</h3><p>FormalDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 控制器中的形参测试</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FormalDemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查看ServletAPI</span></span><br><span class="line"><span class="comment">    * 在形参中的类默认情况下是可以进行实例化的</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/test01"</span>, method = RequestMethod.GET)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;  <span class="comment">//放在形参被实例化了</span></span><br><span class="line">      System.out.println(request);</span><br><span class="line">      System.out.println(response);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/test02"</span>, method = RequestMethod.GET)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test02</span><span class="params">(Map&lt;String, Object&gt; map)</span> </span>&#123;   <span class="comment">//默认实例化的HashMap</span></span><br><span class="line">      System.out.println(map);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/test03"</span>, method = RequestMethod.GET)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test03</span><span class="params">(String[] hobby)</span> </span>&#123;    <span class="comment">//没有实例化</span></span><br><span class="line">      System.out.println(hobby);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/test04"</span>, method = RequestMethod.GET)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test04</span><span class="params">(User user)</span> </span>&#123; <span class="comment">//实例化了</span></span><br><span class="line">      System.out.println(user);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/test05"</span>, method = RequestMethod.GET)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test05</span><span class="params">(ArrayList&lt;String&gt; list)</span> </span>&#123; <span class="comment">//List默认不会被实例化</span></span><br><span class="line">      System.out.println(list);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//什么时候使用基本数据类型和包装类</span></span><br><span class="line">   <span class="comment">//1.当你确定数据一定存在的时候，请使用基本数据类型</span></span><br><span class="line">   <span class="comment">//2.如果数据可能不存在，推荐使用包装类，推荐实体Bean持久化类名尽量使用包装类</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/test06"</span>, method = RequestMethod.GET)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test06</span><span class="params">(<span class="keyword">int</span> role_id)</span> </span>&#123;   <span class="comment">//报错是因为role_id为null,int不能有null</span></span><br><span class="line">      System.out.println(role_id);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/test07"</span>, method = RequestMethod.GET)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test07</span><span class="params">(Integer role_id)</span> </span>&#123;</span><br><span class="line">      System.out.println(role_id);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-result-jsp"><a href="#4-result-jsp" class="headerlink" title="4.result.jsp"></a>4.result.jsp</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">测试</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-控制器中的数据返回类型"><a href="#5-控制器中的数据返回类型" class="headerlink" title="5.控制器中的数据返回类型"></a>5.控制器中的数据返回类型</h3><ul><li>任意数据类型说明<ul><li>JSON格式</li><li>FastJSON,但是SpringMVC是支持该FastJSON的,但是我们需要额外配置信息</li><li>SpringMVC默认支持的JSON数据的转发第三库为Jackson</li><li>FastJSON/Jackson/Gson/JSON等库,目的都是<ul><li>将JSON数据转换为Java对象</li><li>Java对象转换为JSON格式字符串</li></ul></li></ul></li></ul><p>ReturnTypeDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 控制器中的数据返回类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReturnTypeDemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@RequestMapping(path = "/hs01",method = &#123;RequestMethod.GET,RequestMethod.POST&#125;)</span></span><br><span class="line"><span class="comment">//简写</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/hs01"</span>)</span><br><span class="line"><span class="comment">//@PostMapping</span></span><br><span class="line"><span class="comment">//@PutMapping................</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">mav.setViewName(<span class="string">"jsp/result"</span>);</span><br><span class="line"><span class="keyword">return</span> mav;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/hs02"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"void情况一：默认情况下是按照路径进行请求转发的的查找页面访问的是hs02.jsp"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过servlet的跳转方式_个人不推荐</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/hs03"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test03</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">request.getRequestDispatcher(<span class="string">"/WEB-INF/jsp/result.jsp"</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 直接输出页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/hs04"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test04</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line">PrintWriter out = response.getWriter();</span><br><span class="line">out.write(<span class="string">"&lt;h1 style='color:blue'&gt;和尚&lt;/h1&gt;"</span>);</span><br><span class="line">out.flush();</span><br><span class="line">out.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 默认情况下就是请求转发查找页面</span></span><br><span class="line"><span class="comment"> * 先jsp请求转发解析器，再找jsp/result页面</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/hs05"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">test05</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"jsp/result"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 也可以设置重定向</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/hs06"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">test06</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"redirect:/hs05"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 输出内容_如何处理,需要设置编码通过过滤器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/hs07"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ResponseEntity&lt;String&gt; <span class="title">test07</span><span class="params">()</span> </span>&#123;</span><br><span class="line">HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">headers.setContentType(MediaType.TEXT_HTML);    <span class="comment">//设置响应的内容格式</span></span><br><span class="line">String content = <span class="string">"&lt;h1 style='color:blue'&gt;沙僧222&lt;/h1&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;String&gt;(content, headers, HttpStatus.CREATED);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 输出内容_简写方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(path = <span class="string">"/hs08"</span>,produces = <span class="string">"text/html;charset=UTF-8"</span>)    <span class="comment">//设置响应的内容格式和编码，后面配置过滤器就可以不写该代码了</span></span><br><span class="line"><span class="meta">@ResponseBody</span>   <span class="comment">//针对于你返回的数据的类型进行转换，可以转换任意类型，但是需要第三方库的支持</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">test08</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"&lt;h1 style='color:blue'&gt;沙僧222&lt;/h1&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">///=================返回任意数据类型[服务端返回数据]=======================</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传统模式直接输出JSON数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/hs09"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test09</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">"hs"</span>,<span class="string">"和尚"</span>);</span><br><span class="line">map.put(<span class="string">"class"</span>, <span class="string">"计算机"</span>);</span><br><span class="line">map.put(<span class="string">"flag"</span>, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line">PrintWriter out = response.getWriter();</span><br><span class="line"></span><br><span class="line">ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">String jsonStr = objectMapper.writeValueAsString(map);</span><br><span class="line">out.write(jsonStr);</span><br><span class="line">out.flush();</span><br><span class="line">out.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过JackJson返回Json数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/hs10"</span>)</span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;Map&lt;String, Object&gt;&gt; test10() &#123;</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">"hs"</span>,<span class="string">"111"</span>);</span><br><span class="line">map.put(<span class="string">"class"</span>, <span class="string">"2222"</span>);</span><br><span class="line">map.put(<span class="string">"flag"</span>, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">headers.setContentType(MediaType.TEXT_HTML);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;Map&lt;String, Object&gt;&gt;(map, headers, HttpStatus.CREATED);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过ResponseBody处理数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/hs11"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span>   <span class="comment">//对返回的数据进行处理，如果不是字符串，通过Jackson转换成json格式字符串</span></span><br><span class="line"><span class="comment">//遗留问题：在IE浏览器该注解有BUG</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">test11</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">"hs"</span>,<span class="string">"和尚"</span>);</span><br><span class="line">map.put(<span class="string">"class"</span>, <span class="string">"计算机"</span>);</span><br><span class="line">map.put(<span class="string">"flag"</span>, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过ResponseBody处理数据</span></span><br><span class="line"><span class="comment"> * 自定义的类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/hs12"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span>   <span class="comment">//对返回的数据进行处理，如果不是字符串，通过Jackson转换成json格式字符串</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">test12</span><span class="params">()</span> </span>&#123;</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setRole_id(<span class="number">19999</span>);</span><br><span class="line">user.setName(<span class="string">"和尚"</span>);</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>个人觉得，hs01、hs05、hs11、hs12比较常用，@ResponseBody 真的很强大</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;控制器里形参的说明：类可以被实例化。关于返回值类型说明：ModelAndView 官方使用方式(传值，跳转页面)，void类型(直接输出页面)，String类型(也可以跳转页面)，任意数据类型(主要JSON数据处理)&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（三）静态资源排除方案</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E6%8E%92%E9%99%A4%E6%96%B9%E6%A1%88/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（三）静态资源排除方案/</id>
    <published>2018-08-20T07:28:56.000Z</published>
    <updated>2018-08-23T05:57:00.984Z</updated>
    
    <content type="html"><![CDATA[<p>对于静态资源(图片，css，js)这些请求，让他们不经过DispatcherServlet(这个再去找相应的控制器)</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug7ibx0iqj20cq0ej0tk.jpg" alt="">那哥test.jpg,随意自己找一张图片</p><h3 id="2-解决方式一：推荐方式"><a href="#2-解决方式一：推荐方式" class="headerlink" title="2.解决方式一：推荐方式"></a>2.解决方式一：推荐方式</h3><p>demo01.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>显示图片<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"test.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此时为了访问同路径下的test.jsp图片，但是如果直接访问，图片不会出来，那是因为请求会经过DispatcherServlet处理，找到一个控制器，现在为了让静态资源不经过DispatcherServlet。这样就能显示出来</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug7o2e0bfj21dc06uafd.jpg" alt=""></p><p>在web.xml中加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--4.静态资源(图片、js、css之类的)(让这些资源不经过DispatcherServlet处理)的</span><br><span class="line">处理方式一  推荐方式--&gt;</span><br><span class="line">&lt;mvc:default-servlet-handler default-servlet-name=&quot;default&quot;/&gt;</span><br></pre></td></tr></table></figure><h3 id="3-解决方式二：映射方式"><a href="#3-解决方式二：映射方式" class="headerlink" title="3.解决方式二：映射方式"></a>3.解决方式二：映射方式</h3><p>demo01.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>显示图片<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">&lt;%--&lt;img src="test.jpg" alt=""&gt;--%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image/test.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在web.xml中加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--4.静态资源(图片、js、css之类的)(让这些资源不经过DispatcherServlet处理)的</span></span><br><span class="line"><span class="comment">处理方式一  推荐方式--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;mvc:default-servlet-handler default-servlet-name="default"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--4.静态资源的处理方式二(可以写多个，从上而下找，找到就不再找) 映射方式</span></span><br><span class="line"><span class="comment">(mapping中/image/后面的数据，默认会追加到WEB-INF/后面，去/WEB-INF/下面去找资源加载出来)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/image/**"</span> <span class="attr">location</span>=<span class="string">"/WEB-INF/"</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于静态资源(图片，css，js)这些请求，让他们不经过DispatcherServlet(这个再去找相应的控制器)&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（二）@RequestMapping专题</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89-RequestMapping%E4%B8%93%E9%A2%98/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（二）-RequestMapping专题/</id>
    <published>2018-08-20T06:01:50.000Z</published>
    <updated>2018-08-23T05:57:09.118Z</updated>
    
    <content type="html"><![CDATA[<p>关于映射路径的定义方式(多路径，通配符，占位符传递数据)，控制传递的参数，请求方式(get,post,delete,put,patch)</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug5dxsgosj20ce0g4758.jpg" alt=""></p><h3 id="2-读取自定义核心配置文件的名称和位置"><a href="#2-读取自定义核心配置文件的名称和位置" class="headerlink" title="2.读取自定义核心配置文件的名称和位置"></a>2.读取自定义核心配置文件的名称和位置</h3><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--自定义的核心配置文件的名字和位置--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-映射文件的-RequestMapping路径方式"><a href="#3-映射文件的-RequestMapping路径方式" class="headerlink" title="3.映射文件的@RequestMapping路径方式"></a>3.映射文件的@RequestMapping路径方式</h3><p>多路径访问，一个路径访问，使用通配符，占位符传递数据</p><p>PathDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 映射路径的定义方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span><span class="comment">//(value = "hsController")   //这就是给controller取的名字，默认是类名首字母小写</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/cy42"</span>)    <span class="comment">//这个是设置本类总的路径,比如你访问这个类的test01，网址栏就要写localhost:8080/mvc/cy42/test01</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PathDemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = &#123;<span class="string">"/test01"</span>,<span class="string">"/test02"</span>&#125;)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"多路径访问，用数组这样设置"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/test03"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"一个路径"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/test04"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test04</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"只有一个路径属性的值，可以省略"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//1.在映射路径中可以适应通配符 *</span></span><br><span class="line">   <span class="comment">//A.谁描述的清楚就找谁   eg:/test01 找/test01</span></span><br><span class="line">   <span class="comment">//B.通配符使用的很少</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/*"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test05</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"可以使用通配符"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/**"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test06</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"任意层次"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//使用占位符，一般只是传递主键和简单的字符串</span></span><br><span class="line">   <span class="comment">// 完成REST风格的路径，优先级比通配符高</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/&#123;user_id&#125;"</span>)   <span class="comment">//user_id接收输入的路径值</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test06</span><span class="params">(@PathVariable(<span class="string">"user_id"</span>)</span> String id) </span>&#123;    <span class="comment">//使用注解，把user_id接收到的值赋给id</span></span><br><span class="line">      System.out.println(<span class="string">"使用占位符,"</span>+id);</span><br><span class="line">      System.out.println(id);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在浏览器网址栏输入localhost:8080/mvc/cy42/xx访问这些路径，占位符访问就是localhost:8080/mvc/xxx,然后user_id就接收到了你的xxx值</p><h3 id="4-在网址栏传递参数-params属性"><a href="#4-在网址栏传递参数-params属性" class="headerlink" title="4.在网址栏传递参数(params属性)"></a>4.在网址栏传递参数(params属性)</h3><p>ParamsDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**控制传递的参数</span></span><br><span class="line"><span class="comment"> * 如果没有传递参数会报400的错误</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/vip"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamsDemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/param01"</span>,params = <span class="string">"hs=tomcat"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"你必须要传递一下形式的数据里满足params里的数据，eg:param01?hs=tomcat&amp;id=100"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/param02"</span>,params = &#123;<span class="string">"hs!=tomcat"</span>,<span class="string">"method=add"</span>&#125;)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"!=,hs!=tomcat是指，只要不输入hs=tomcat，其他的都满足"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-请求方式web-xml"><a href="#5-请求方式web-xml" class="headerlink" title="5.请求方式web.xml"></a>5.请求方式web.xml</h3><ol><li>在HTML页面,请求方式有几种?</li></ol><ul><li><p>GET: GET在地址栏能看到数据 </p></li><li><p>POST: 在地址栏不能看到数据</p></li><li><p>有且只有这两种请求！！</p><p>但是SpirngMvc支持有8种请求方式</p><p>官方文档：</p></li></ul><blockquote><p><strong>HTTP Method Conversion</strong> </p><p>A key principle of REST is the use of the Uniform Interface. This means that all resources (<code>URLs</code>) can be manipulated <code>using the same four HTTP methods:</code> GET, PUT, POST, and DELETE. For each method, the HTTP specification defines the exact semantics. For instance, a GET should always be a safe operation, meaning that is has no side effects, and a PUT or DELETE should be idempotent, meaning that you can repeat these operations over and over again, but the end result should be the same. While HTTP defines these four methods,<br>HTML only supports two: GET and POST.<br>Fortunately, there are <code>two possible workarounds:</code> </p><p>第一种: you can either use JavaScript to do your PUT or DELETE,[不推荐,因为有一些浏览器不不支持PUT/DELETE IE6/7/8]</p><p>第二种方式步骤如下：</p><p>第一步: 需要使用POST请求为真正的请求方式<br>or simply do a POST with the ‘real’ method<br>第二步: 表单当中需要自己设置一个隐藏的&lt;input&gt;标签<br>as an additional parameter (modeled as <code>a hidden input</code> field in an HTML form).<br>第三步: web.xml中配置过滤器 </p><p>This latter trick is what Spring’s <code>HiddenHttpMethodFilter</code> does. This filter is a plain <code>Servlet Filter</code> (Servlet过滤器)</p><p><url-partern>/* 路径过滤器</url-partern></p><p><serlvet-name>名字Servlet过滤器<br>and therefore it can be used in combination with any web framework (not just Spring MVC). Simply add this filter to your web.xml, and a POST with<br>第四步: 你的&lt;input name=”_method” value=”GET|POST|DELETE|PUT”(不区分大小写)&gt;<br>a hidden _method parameter will be converted into the corresponding HTTP method request.</serlvet-name></p></blockquote><p>下面代码加在  web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--http的请求转换过滤器</span></span><br><span class="line"><span class="comment">过滤器使html中支持除了get、post，的其他请求put，delete，patch--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>httpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>httpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--设置需要过滤的Servlet的名字，就是下面那个servlet--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-请求方式controller"><a href="#6-请求方式controller" class="headerlink" title="6.请求方式controller"></a>6.请求方式controller</h3><p>MethodDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 请求方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/http"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodDemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/user"</span>, method = RequestMethod.GET)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">GET</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"GET请求：只能做查询操作"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/user"</span>, method = RequestMethod.POST)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">POST</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"POST请求：添加操作"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/user"</span>, method = RequestMethod.DELETE)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">DELETE</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"DELETE请求：删除操作"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/user"</span>, method = RequestMethod.PUT)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">PUT</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"PUT请求：更新操作[等幂(也就是全部更新)]"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(path = <span class="string">"/user"</span>, method = RequestMethod.PATCH)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">PATCH</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"PATCH请求：更新操作[不等幂]"</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-请求方式页面代码"><a href="#7-请求方式页面代码" class="headerlink" title="7.请求方式页面代码"></a>7.请求方式页面代码</h3><p>request.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--</span></span></span><br><span class="line"><span class="tag">   为了支持其他的请求方式，把<span class="attr">method</span>都改为<span class="attr">post</span>，然后加入一个</span></span><br><span class="line">   &lt;input type="hidden" name="_method" value="get|post|put|delete|patch"&gt;</span><br><span class="line">    value不分大小写，name=xxx固定</span><br><span class="line">--%&gt;</span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span>&gt;</span>get请求<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http/user"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>get请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"_method"</span> <span class="attr">value</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span>&gt;</span>post请求<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http/user"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>post请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"_method"</span> <span class="attr">value</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span>&gt;</span>delete请求<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http/user"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>delete请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"_method"</span> <span class="attr">value</span>=<span class="string">"delete"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span>&gt;</span>put请求<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http/user"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>put请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"_method"</span> <span class="attr">value</span>=<span class="string">"put"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span>&gt;</span>patch请求<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http/user"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>patch请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"_method"</span> <span class="attr">value</span>=<span class="string">"patch"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于映射路径的定义方式(多路径，通配符，占位符传递数据)，控制传递的参数，请求方式(get,post,delete,put,patch)&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>SpringMvc学习笔记（一）SpringMvc环境搭建</title>
    <link href="http://heshangcode.coding.me/2018/08/20/SpringMvc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89SpringMvc%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://heshangcode.coding.me/2018/08/20/SpringMvc学习笔记（一）SpringMvc环境搭建/</id>
    <published>2018-08-20T04:06:09.000Z</published>
    <updated>2018-08-23T05:56:54.310Z</updated>
    
    <content type="html"><![CDATA[<p>讲述，springmvc概述，原理，环境的搭建，controller(请求转发/重定向)跳转到页面，controller跳到另外一个controller，配置核心的DispatcherServlet，配置默认的核心配置文件，jsp请求转发的视图解析器。</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-SpringMvc概述"><a href="#1-SpringMvc概述" class="headerlink" title="1.SpringMvc概述"></a>1.SpringMvc概述</h3><p>SpringMVC 是隶属于Spring框架中的一个模块而已 </p><p>让控制层更加的简单</p><p>SpringMVC是WEB层框架 </p><p>SpringMVC的概述(<a href="https://docs.spring.io/spring/docs/4.3.19.BUILD-SNAPSHOT/spring-framework-reference/htmlsingle/#spring-web" target="_blank" rel="noopener">官方文档页面搜索the web</a>)</p><p><strong>Introduction to Spring Web MVC framework</strong></p><blockquote><p>The Spring Web model-view-controller (MVC) framework is </p><p>designed <code>around</code> a <code>DispatcherServlet</code> (翻译：设计围绕着DispatcherServlet，意思是我需要配置一个Servlet)that dispatches requests to handlers, with configurable handler <code>mappings</code>(可以设置一个映射), view resolution, locale, time zone and theme resolution as well as <code>support for uploading files</code>(支持上传文件). </p><p>The default handler is based on the <code>@Controller</code> and <code>@RequestMapping</code> annotations(默认情况下支持了@Controller和@RequestMapping两个注解),对比我之前学的servlet：</p><p>之前的：@WebServlet(“/sys/user”)通过我们设置的映射路径/sys/user会访问到Servlet</p><p>@Controller 就相当于告知你的这个类为控制器</p><p>@RequestMapping是用来设置映射的路径</p><p> offering a wide range of flexible handling methods. With the introduction of Spring 3.0, the <code>@Controller</code> mechanism also allows you to create </p><p>RESTful [百度，这是一个风格，豆瓣就是用的这种风格]</p><p>Web sites and applications, through the <code>@PathVariable</code> annotation and other features.</p></blockquote><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug2uijqdtj20yg0hdtcq.jpg" alt="">所有的请求都要经过前端控制器处理，然后由它决定找到下一个controller是谁，然后这个controller又响应回去DispatcherServlet，视图解析器决定使用哪个模板，最终响应成HTML。</p><h3 id="2-程序结构"><a href="#2-程序结构" class="headerlink" title="2.程序结构"></a>2.程序结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug425ve9kj20cp0hnq3x.jpg" alt="">在idea中新建一个javaee项目，其中需要jar包，可以在maven仓库中下载</p><h3 id="3-idea配置tomcat"><a href="#3-idea配置tomcat" class="headerlink" title="3.idea配置tomcat"></a>3.idea配置tomcat</h3><p>添加tomcat<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug3q8nel0g211l0l0dsf.gif" alt=""></p><p>找到你自己的tomcat路径，然后点ok<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug3qxd9ipg211l0l047u.gif" alt="">添加好你的tomcat，然后点ok，<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug3r08cn2g211l0l0wkp.gif" alt="">把你需要部署到tomcat的web服务，添加进去，旁边那个Application context 是你访问这个项目的名字，比如/mvc，访问路径就是localhost:8080/mvc,下面http port是访问的端口号，然后有个是设置打开的浏览器，然后就ok了，最后点运行键，就可以运行<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fug3r2vjhxg211l0l0aiz.gif" alt=""></p><h3 id="4-配置核心的DispatcherServlet"><a href="#4-配置核心的DispatcherServlet" class="headerlink" title="4.配置核心的DispatcherServlet"></a>4.配置核心的DispatcherServlet</h3><p>在web.xml中加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--默认的核心配置文件--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 服务器启动的时候就对DispatcherServlet进行实例化操作 --&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 值越小，越被越优先实例化 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  /</span></span><br><span class="line"><span class="comment">所有的资源访问都需要经过 DispatcherServlet处理</span></span><br><span class="line"><span class="comment">路径</span></span><br><span class="line"><span class="comment">href</span></span><br><span class="line"><span class="comment">src.....</span></span><br><span class="line"><span class="comment">   区分   /* 和 /</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-配置默认的核心配置文件的所在位置和名称"><a href="#5-配置默认的核心配置文件的所在位置和名称" class="headerlink" title="5.配置默认的核心配置文件的所在位置和名称"></a>5.配置默认的核心配置文件的所在位置和名称</h3><blockquote><p>Upon (init初始化)<code>init</code>ialization of a <code>DispatcherServlet</code>, Spring MVC <code>looks</code> for a file named <code>*[servlet-name]-servlet.xml*</code>(DispatcherServlet初始化的时候，会找一个这个格式的文件)</p><p>在DispatcherServlet中，我们写了这个<servlet-name>springmvc</servlet-name>，就会找springmvc-servlet.xml这个文件，在WEB-INF下</p><p> in the <code>WEB-INF</code> directory of your web application and creates the beans defined there, overriding the definitions of any beans defined with the same name in the global scope.</p></blockquote><p>springmvc-servlet.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--1.启动SpringMvc注解--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--2.扫描controller--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--可以使用通配符 *</span></span><br><span class="line"><span class="comment">       com.*.web 可以识别：com.hs.web   com.sd.web   com.sdsa.web 但是不能识别com.hs.sd.web</span></span><br><span class="line"><span class="comment">      访问任意一层</span></span><br><span class="line"><span class="comment">      com.**.web  可以识别com.web  com.hs.web com.sad.asd.asd.web</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.hs.**.web"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-Controller文件"><a href="#6-Controller文件" class="headerlink" title="6.Controller文件"></a>6.Controller文件</h3><p>SkipDemoController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.web;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.view.UrlBasedViewResolver;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 跳转专题：请求转发，重定向，一个controller跳到另外一个controller</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SkipDemoController</span> </span>&#123;</span><br><span class="line">   <span class="comment">//设置映射的路径</span></span><br><span class="line">   <span class="comment">//当我在浏览器中输入 http://127.0.0.1:8080/mvc/hs01</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/hs01"</span>)</span><br><span class="line">   <span class="comment">/*从Controller跳转到jsp_默认是请求转发</span></span><br><span class="line"><span class="comment">   请求转发，页面不跳转，可以访问WEB-INF路径下的东西*/</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test01</span><span class="params">()</span></span>&#123;</span><br><span class="line">      ModelAndView nav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">      nav.setViewName(<span class="string">"/WEB-INF/jsp/result01.jsp"</span>);</span><br><span class="line">      <span class="keyword">return</span> nav;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/*从Controller跳转到jsp_默认是请求转发</span></span><br><span class="line"><span class="comment">   请求转发，页面不跳转，可以访问WEB-INF路径下的东西*/</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/hs011"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test011</span><span class="params">()</span></span>&#123;</span><br><span class="line">      ModelAndView nav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">      nav.setViewName(<span class="string">"jsp/result01"</span>);   <span class="comment">//如果设置了jsp请求转发的视图解析器</span></span><br><span class="line">      <span class="keyword">return</span> nav;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/hs02"</span>)</span><br><span class="line">   <span class="comment">/*从Controller跳转到jsp_重定向</span></span><br><span class="line"><span class="comment">   但是官方不推荐直接重定向到jsp页面</span></span><br><span class="line"><span class="comment">   重定向，页面跳转，不可以访问WEB-INF路径下的东西*/</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test02</span><span class="params">()</span></span>&#123;</span><br><span class="line">      ModelAndView nav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">      nav.setViewName(<span class="string">"redirect:/test01.jsp"</span>);</span><br><span class="line">      <span class="keyword">return</span> nav;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="comment">/**从Controller跳转到Controller_请求转发</span></span><br><span class="line"><span class="comment"> * 当配置了JSP的请求转发视图解析器后从Controller跳转到另外一个Controller，</span></span><br><span class="line"><span class="comment"> * 必须指明前缀：forward/redirect</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/hs03"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      ModelAndView nav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">      nav.setViewName(<span class="string">"forward:/hs011"</span>);  <span class="comment">//这个写forward的原因是，避免jsp请求转发视图解析器，把hs011解析成了jsp页面UrlBasedViewResolver.FORWARD_URL_PREFIX=forward</span></span><br><span class="line"><span class="comment">//    nav.setViewName("/hs01");</span></span><br><span class="line">      <span class="keyword">return</span> nav;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/*从Controller跳转到Controller_重定向*/</span></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/hs04"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">test04</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      ModelAndView nav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">      nav.setViewName(UrlBasedViewResolver.REDIRECT_URL_PREFIX+<span class="string">"/hs01"</span>);   <span class="comment">//UrlBasedViewResolver.REDIRECT_URL_PREFIX   == redirect:</span></span><br><span class="line">      <span class="keyword">return</span> nav;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-视图解析器"><a href="#7-视图解析器" class="headerlink" title="7.视图解析器"></a>7.视图解析器</h3><p>在springmvc-servlet.xml的&lt;context:component-scan base-package=”com.hs.**.web”/&gt;后面加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!--jsp请求转发视图解析器</span></span><br><span class="line"><span class="comment">请求转发jsp页面的时候，在路径上加入前缀和后缀</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--下面相当于 InternalResourceViewResolver internalResourceViewResolver = new InternalResourceViewResolver()--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--前缀--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--相当于setPrefix("/WEB-INF/")--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--后缀--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--支持JSTL--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span> <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.JstlView"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-页面代码"><a href="#8-页面代码" class="headerlink" title="8.页面代码"></a>8.页面代码</h3><p>result01.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">hello word</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>test01.jsp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">测试</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;讲述，springmvc概述，原理，环境的搭建，controller(请求转发/重定向)跳转到页面，controller跳到另外一个controller，配置核心的DispatcherServlet，配置默认的核心配置文件，jsp请求转发的视图解析器。&lt;/p&gt;
    
    </summary>
    
      <category term="SpringMvc学习总结" scheme="http://heshangcode.coding.me/categories/SpringMvc%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMvc" scheme="http://heshangcode.coding.me/tags/SpringMvc/"/>
    
  </entry>
  
  <entry>
    <title>idea配置github并上传项目</title>
    <link href="http://heshangcode.coding.me/2018/08/19/idea%E9%85%8D%E7%BD%AEgithub%E5%B9%B6%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE/"/>
    <id>http://heshangcode.coding.me/2018/08/19/idea配置github并上传项目/</id>
    <published>2018-08-19T14:52:48.000Z</published>
    <updated>2018-08-23T05:55:23.104Z</updated>
    
    <content type="html"><![CDATA[<p>感觉自己之前写的学习笔记，根本不叫笔记，只是为了把代码放上去而已，然后自己也学习了其他的很多学习博客的写法，写少量的代码进去，再配上相应的文字说明，然后把全部源码放在github上，我觉得我自己也借鉴这样写学习博客，然后今天学习了idea配置github，然后上传项目，自己也百度了许多教程，但是各种都不一样，自己就捅咕了一番，有了属于自己的教程，做个记录吧。</p><a id="more"></a><h3 id="1-什么是git"><a href="#1-什么是git" class="headerlink" title="1.什么是git"></a>1.什么是git</h3><p>学习教程：廖雪峰的git教程—-<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></p><h3 id="2-下载安装git"><a href="#2-下载安装git" class="headerlink" title="2.下载安装git"></a>2.下载安装git</h3><p>下载链接：<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></p><h3 id="3-注册一个github"><a href="#3-注册一个github" class="headerlink" title="3.注册一个github"></a>3.注册一个github</h3><p>github官网：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p><h3 id="4-github创建一个仓库"><a href="#4-github创建一个仓库" class="headerlink" title="4.github创建一个仓库"></a>4.github创建一个仓库</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffdgjj1tj20x00kq40c.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffiayytbj211e0nwmzm.jpg" alt=""></p><h3 id="5-idea配置github"><a href="#5-idea配置github" class="headerlink" title="5.idea配置github"></a>5.idea配置github</h3><ol><li>打开自己的项目</li><li><p>在setting里找到git安装的文件，然后点test，出现成功，注意是bin下的git.exe<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffk4clrnj20zs0nvabu.jpg" alt=""></p></li><li><p>设置自己的github账号密码，<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffm3zksgj20zt0o6myk.jpg" alt=""></p></li></ol><h3 id="6-idea上传项目到github"><a href="#6-idea上传项目到github" class="headerlink" title="6.idea上传项目到github"></a>6.idea上传项目到github</h3><ol><li>创建本地git仓库，然后选择你要上传的项目<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffonzhqzj20ss0csmy7.jpg" alt="">在控制台可以看见相应的git指令<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffqolsdcj20x00aumxm.jpg" alt="">此时你选择的项目的内容名字全部变色<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffsfsw7ij20sz0fxmyp.jpg" alt=""></li><li>选择不上传到github的文件或者文件夹，第一个为文件，第二个为文件夹<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffvyr5hqj20zs0nx0uc.jpg" alt="">或者在commit的时候选择需要上传的东西或者不上传的东西</li><li>commit到本地仓库<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffypefwsj20j40fct9j.jpg" alt="">               这里就是commit选择<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufg2debobj20qn0rujtl.jpg" alt="">控制台出现相应的git指令<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufg5m1gg7j216j09w3zf.jpg" alt=""></li><li>push到远程仓库github上<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufg7488qvj20xd0r0jtx.jpg" alt="">然后url输入刚才复制的github仓库地址，name是啥我也不知道<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufg8jzkvtj20m20jfjrw.jpg" alt="">这里箭头所指的是上床到哪个分支的名字，点击它，可以直接修改分支的名字，然后就push到相应的分支，<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufgaam5r4j20m10jmwez.jpg" alt="">控制台出现相应的git指令<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufgel07v8j217f0a03zb.jpg" alt=""></li><li>push成功<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufgdg023sj214l0jw74x.jpg" alt=""></li><li>github页面上显示<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufgh1bnz8j212t0jm76c.jpg" alt=""></li></ol><h3 id="7-如果代码修改了再提交"><a href="#7-如果代码修改了再提交" class="headerlink" title="7.如果代码修改了再提交"></a>7.如果代码修改了再提交</h3><p>重复上面的第3步开始，<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufgkhgudoj20wv0shq5z.jpg" alt=""></p><p>然后github页面就是这样的<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufgm9sc7tj212p0k2wgk.jpg" alt=""></p><h3 id="8-关闭这个项目的版本控制"><a href="#8-关闭这个项目的版本控制" class="headerlink" title="8.关闭这个项目的版本控制"></a>8.关闭这个项目的版本控制</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fughv4z89bj20zt0nx0ue.jpg" alt=""></p><h3 id="9-自己在网上看的一些不错教程"><a href="#9-自己在网上看的一些不错教程" class="headerlink" title="9.自己在网上看的一些不错教程"></a>9.自己在网上看的一些不错教程</h3><ul><li><a href="https://www.cnblogs.com/jinjiyese153/p/6796668.html" target="_blank" rel="noopener">https://www.cnblogs.com/jinjiyese153/p/6796668.html</a></li><li><a href="https://www.cnblogs.com/jinjiyese153/p/6796668.html" target="_blank" rel="noopener">https://www.cnblogs.com/jinjiyese153/p/6796668.html</a></li><li><a href="https://my.oschina.net/u/2608182/blog/745178" target="_blank" rel="noopener">https://my.oschina.net/u/2608182/blog/745178</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感觉自己之前写的学习笔记，根本不叫笔记，只是为了把代码放上去而已，然后自己也学习了其他的很多学习博客的写法，写少量的代码进去，再配上相应的文字说明，然后把全部源码放在github上，我觉得我自己也借鉴这样写学习博客，然后今天学习了idea配置github，然后上传项目，自己也百度了许多教程，但是各种都不一样，自己就捅咕了一番，有了属于自己的教程，做个记录吧。&lt;/p&gt;
    
    </summary>
    
      <category term="idea" scheme="http://heshangcode.coding.me/categories/idea/"/>
    
    
      <category term="idea" scheme="http://heshangcode.coding.me/tags/idea/"/>
    
      <category term="github" scheme="http://heshangcode.coding.me/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis学习笔记（七）遇见的坑</title>
    <link href="http://heshangcode.coding.me/2018/08/06/MyBatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89%E9%81%87%E8%A7%81%E7%9A%84%E5%9D%91/"/>
    <id>http://heshangcode.coding.me/2018/08/06/MyBatis学习笔记（七）遇见的坑/</id>
    <published>2018-08-06T08:33:24.000Z</published>
    <updated>2018-08-23T05:55:52.693Z</updated>
    
    <content type="html"><![CDATA[<p>在学习过程中，遇见数据库中中文乱码，mybatis常见的异常和如何调试，idea不知道如何创建xml文件，idea中project和module的关系，如何把一个module复制成另外一个module，每次一个新的mybatis项目，有很多地方记得要修改</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-解决数据库中文乱码问题"><a href="#1-解决数据库中文乱码问题" class="headerlink" title="1.解决数据库中文乱码问题"></a>1.解决数据库中文乱码问题</h3><ul><li><p>方法一(推荐)：把数据库的配置文件编码设置成UTF-8或utf8mb4，两者区别就是UTF-8最大三字节，后者最大四字节</p><ul><li><p>操作：</p><p>之前自己在网上找了一些教程说在mysql的安装目录下一个配置文件里修改，结果自己找了半天了，都没有找到，然后用everything搜索，找到了配置文件，结果不是安装目录下……</p><ol><li>找到如下文件，如果没有找到，用everything搜索</li></ol><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu02kuo6fhj20oh05dmxd.jpg" alt=""></p><ol start="2"><li><p>在最后添加下面代码</p><p>若要设置成utf-8，把utf8mb4修改成utf-8即可 </p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[client] </span><br><span class="line">default-character-set = utf8mb4 </span><br><span class="line">[mysql] </span><br><span class="line">default-character-set = utf8mb4 </span><br><span class="line">[mysqld] </span><br><span class="line">character-set-client-handshake = FALSE </span><br><span class="line">character-set-server = utf8mb4 </span><br><span class="line">collation-server = utf8mb4_unicode_ci </span><br><span class="line">init_connect=&apos;SET NAMES utf8mb4&apos;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>保存文件，重启mysql服务</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu02v37wnkg20s40lzhb1.gif" alt=""></p></li></ol></li></ul></li><li><p>方法二：在每次连接数据库的url最后面加入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?useUnicode=<span class="keyword">true</span>&amp;characterEncoding=UTF-<span class="number">8</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-mybatis常见的异常"><a href="#2-mybatis常见的异常" class="headerlink" title="2.mybatis常见的异常"></a>2.mybatis常见的异常</h3><ol><li><p>控制台或者其他位置报MyBatisUtils工具类的异常</p><ul><li>95%以上：是映射文件你写错了</li><li>5%：是核心配置文件写错了</li><li>因为mybatis-config.xml是入口，会加载很多的映射文件，把他们融合在一起，如果其中有任何一个映射文件出错，所有的定制的SQL语句都将无法运行</li></ul></li><li><p>如何调试？</p><ul><li><p>把自己的，，，这一行代码注释掉，然后再运行看控制台，错误从下往上看，Caused byxx</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu037u28t7j20o803stb8.jpg" alt=""></p></li></ul></li></ol><h3 id="3-idea如何创建xml文件"><a href="#3-idea如何创建xml文件" class="headerlink" title="3.idea如何创建xml文件"></a>3.idea如何创建xml文件</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu03fh0ab9g20uu0im1cv.gif" alt=""></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br></pre></td></tr></table></figure><h3 id="4-idea中project和module的关系"><a href="#4-idea中project和module的关系" class="headerlink" title="4.idea中project和module的关系"></a>4.idea中project和module的关系</h3><p>之前刚用idea，以为一个project，就是一个项目，结果并不是</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu03qztqizj208408nabo.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu03nbsu3oj20fg03rmx5.jpg" alt=""></p><h3 id="5-如何把一个module复制成另外一个module"><a href="#5-如何把一个module复制成另外一个module" class="headerlink" title="5.如何把一个module复制成另外一个module"></a>5.如何把一个module复制成另外一个module</h3><p>直接像eclipse那样复制一个module，图标只会这样：<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu03tbtcf7j206z00pa9w.jpg" alt=""></p><p>这不是一个module，要让他变成module，如下操作：<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu03vn5pjcg20k10maqhb.gif" alt=""></p><h3 id="6-一个新的mybatis项目"><a href="#6-一个新的mybatis项目" class="headerlink" title="6.一个新的mybatis项目"></a>6.一个新的mybatis项目</h3><p>重点一些地方需要修改或者添加</p><ol><li>核心配置文件的映射文件里</li><li>日志框架里写上你的命名空间</li></ol><hr><hr><p>到此，目前的MyBatis小结到此结束，下一个学习SpringMvc，只希望自己能坚持下去，世界诱惑很多，只希望自己能一路走下去，加油！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在学习过程中，遇见数据库中中文乱码，mybatis常见的异常和如何调试，idea不知道如何创建xml文件，idea中project和module的关系，如何把一个module复制成另外一个module，每次一个新的mybatis项目，有很多地方记得要修改&lt;/p&gt;
    
    </summary>
    
      <category term="MyBatis学习总结" scheme="http://heshangcode.coding.me/categories/MyBatis%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="MyBatis" scheme="http://heshangcode.coding.me/tags/MyBatis/"/>
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis学习笔记（六）一对多的关联查询和传递多个参数</title>
    <link href="http://heshangcode.coding.me/2018/08/06/MyBatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%E4%B8%80%E5%AF%B9%E5%A4%9A%E7%9A%84%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E5%92%8C%E4%BC%A0%E9%80%92%E5%A4%9A%E4%B8%AA%E5%8F%82%E6%95%B0/"/>
    <id>http://heshangcode.coding.me/2018/08/06/MyBatis学习笔记（六）一对多的关联查询和传递多个参数/</id>
    <published>2018-08-06T08:11:22.000Z</published>
    <updated>2018-08-23T05:56:08.843Z</updated>
    
    <content type="html"><![CDATA[<p>本文讲解一对多的关联查询，传递多个参数。</p><a id="more"></a><p>源码获取<a href="https://github.com/heshangcode/Learn" target="_blank" rel="noopener">github</a></p><h3 id="1-传递多个参数"><a href="#1-传递多个参数" class="headerlink" title="1.传递多个参数"></a>1.传递多个参数</h3><ol><li> 当你的形参传递&gt;1个的时候，parameterType不写，让其自动处理</li><li>#{值}，默认为arg0，arg1…..或param1，param2，，，</li><li>若在接口中注解了@Param(相当于指明了key值)，即也可以写xxx，默认的也可以写，相当于3个值</li></ol><h3 id="2-结构"><a href="#2-结构" class="headerlink" title="2.结构"></a>2.结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu023w7ik0j20av0hntdv.jpg" alt=""></p><h3 id="3-数据库属性文件"><a href="#3-数据库属性文件" class="headerlink" title="3.数据库属性文件"></a>3.数据库属性文件</h3><p>同之前</p><h3 id="4-核心配置文件"><a href="#4-核心配置文件" class="headerlink" title="4.核心配置文件"></a>4.核心配置文件</h3><p>mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--加载属性文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义设置类型的别名，也就是resultMap里的type，避免包名已修改，在映射文件里修改多处地方--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 方式一、com.hs.model.Skill这个类设置了别名hs，之后要用这个的话，直接写hs --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;typeAlias type="com.hs.model.Skill" alias="hs"/&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 方式二、com.hs.model这个包下的类，要用的时候直接写类名，比如用com.hs.model.Skill，直接写Skill --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.hs.model"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置数据库的环境--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--事务管理器:保证数据的完整性和一致性   关键信息  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--框架：默认情况下CUD操作需要  手动提交事务</span></span><br><span class="line"><span class="comment">（如同在Navicat中表中输入了数据，没有点那个小√，就是没有提交事务，</span></span><br><span class="line"><span class="comment">但是输入insert语句，就自动提交事务了）  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用的是连接池：百度java如何实行连接池的原理？  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.driver&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.url&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.username&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.password&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--加载映射文件 ，也就是含sql语句的文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--告知映射文件方式1，一个一个的配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/hs/model/UserMapper.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/hs/model/RoleMapper.xml"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 告知映射文件方式2，自动扫描包内的Mapper接口与配置文件 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;package name="com.hs.model"/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-持久化类"><a href="#5-持久化类" class="headerlink" title="5.持久化类"></a>5.持久化类</h3><p>Role.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer role_id;</span><br><span class="line"><span class="keyword">private</span> String role_name;</span><br><span class="line"><span class="keyword">private</span> String role_key;</span><br><span class="line"><span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line"><span class="comment">//关联对象,一对多，一个角色可以有多个用户</span></span><br><span class="line"><span class="keyword">private</span> List&lt;User&gt; userList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> userList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserList</span><span class="params">(List&lt;User&gt; userList)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.userList = userList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getRole_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_id</span><span class="params">(Integer role_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role_id = role_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getRole_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_name</span><span class="params">(String role_name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role_name = role_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getRole_key</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_key</span><span class="params">(String role_key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role_key = role_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatus</span><span class="params">(Integer status)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.status = status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Role&#123;"</span> +</span><br><span class="line"><span class="string">"role_id="</span> + role_id +</span><br><span class="line"><span class="string">", role_name='"</span> + role_name + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", role_key='"</span> + role_key + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", status="</span> + status +</span><br><span class="line"><span class="string">", userList="</span> + userList +</span><br><span class="line"><span class="string">'&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer user_id;</span><br><span class="line"><span class="keyword">private</span> String account;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"><span class="keyword">private</span> String user_name;</span><br><span class="line"><span class="keyword">private</span> Integer status;</span><br><span class="line"><span class="keyword">private</span> Date login_time;</span><br><span class="line"><span class="keyword">private</span> String ip;</span><br><span class="line"><span class="keyword">private</span> Integer fk_role_id;</span><br><span class="line"><span class="comment">//关联对象 一对一或多对一</span></span><br><span class="line"><span class="keyword">private</span> Role role;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> account;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccount</span><span class="params">(String account)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.account = account;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatus</span><span class="params">(Integer status)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.status = status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">getLogin_time</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> login_time;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLogin_time</span><span class="params">(Date login_time)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.login_time = login_time;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getIp</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> ip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIp</span><span class="params">(String ip)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.ip = ip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getFk_role_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> fk_role_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFk_role_id</span><span class="params">(Integer fk_role_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.fk_role_id = fk_role_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Role <span class="title">getRole</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole</span><span class="params">(Role role)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role = role;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line"><span class="string">"user_id="</span> + user_id +</span><br><span class="line"><span class="string">", account='"</span> + account + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", password='"</span> + password + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", user_name='"</span> + user_name + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", status="</span> + status +</span><br><span class="line"><span class="string">", login_time="</span> + login_time +</span><br><span class="line"><span class="string">", ip='"</span> + ip + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", fk_role_id="</span> + fk_role_id +</span><br><span class="line"><span class="string">", role="</span> + role +</span><br><span class="line"><span class="string">'&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-XML映射文件"><a href="#6-XML映射文件" class="headerlink" title="6.XML映射文件"></a>6.XML映射文件</h3><p>RoleMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace=命名空间，唯一不重复--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.hs.dao.RoleDao"</span>&gt;</span><span class="comment">&lt;!--命名空间规则</span></span><br><span class="line"><span class="comment">传统模式：（持久化类（实体化Bean）的类名全路径com.hs.Skill）</span></span><br><span class="line"><span class="comment">接口代理模式：接口的全路径r--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">"Role"</span> <span class="attr">id</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"role_id"</span> <span class="attr">property</span>=<span class="string">"role_id"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_name"</span> <span class="attr">property</span>=<span class="string">"role_name"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_key"</span> <span class="attr">property</span>=<span class="string">"role_key"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"status"</span> <span class="attr">property</span>=<span class="string">"status"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sys_role_columns"</span>&gt;</span></span><br><span class="line">role_id,role_name,role_key,status</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sys_role_columns_alias"</span>&gt;</span></span><br><span class="line">$&#123;alias&#125;.role_id,$&#123;alias&#125;.role_name,$&#123;alias&#125;.role_key,$&#123;alias&#125;.status</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"SimpleResultMapper"</span> <span class="attr">type</span>=<span class="string">"Role"</span> <span class="attr">extends</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置集合List&lt;User&gt;,javaType一般可以不写--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在结果集中找到role_id这个字段，然后传给命名空间com.hs.dao.UserDao下id为getUserByFk的语句，</span></span><br><span class="line"><span class="comment">返回的结果集字段为userList，类型为java.util.List，里面装的类型是com.he.model.User这个类型</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"userList"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">javaType</span>=<span class="string">"java.util.List"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">ofType</span>=<span class="string">"User"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">column</span>=<span class="string">"role_id"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">select</span>=<span class="string">"com.hs.dao.UserDao.getUserByFk"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getRoleByPk"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultMap</span>=<span class="string">"SimpleResultMapper"</span>&gt;</span></span><br><span class="line">select</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"sys_role_columns"</span>/&gt;</span></span><br><span class="line">from sys_role</span><br><span class="line">where role_id = #&#123;role_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"JoinResultMapper"</span> <span class="attr">type</span>=<span class="string">"Role"</span> <span class="attr">extends</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置集合，查询出来的User里的结果集找com.hs.dao.UserDao.BaseResultMapper处理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"userList"</span> <span class="attr">javaType</span>=<span class="string">"list"</span> <span class="attr">ofType</span>=<span class="string">"com.hs.model.User"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">resultMap</span>=<span class="string">"com.hs.dao.UserDao.BaseResultMapper"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;id/&gt;</span></span><br><span class="line"><span class="comment">&lt;result/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getRoleByLeftJoin"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultMap</span>=<span class="string">"JoinResultMapper"</span>&gt;</span></span><br><span class="line">SELECT</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"com.hs.dao.UserDao.sys_user_colums_alias"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"alias"</span> <span class="attr">value</span>=<span class="string">"su"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">,</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"sys_role_columns_alias"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"alias"</span> <span class="attr">value</span>=<span class="string">"sr"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">FROM</span><br><span class="line">sys_role sr</span><br><span class="line">LEFT JOIN sys_user su ON sr.role_id = su.fk_role_id</span><br><span class="line">WHERE</span><br><span class="line">sr.role_id =#&#123;role_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace=命名空间，唯一不重复--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.hs.dao.UserDao"</span>&gt;</span><span class="comment">&lt;!--命名空间规则</span></span><br><span class="line"><span class="comment">传统模式：（持久化类（实体化Bean）的类名全路径com.hs.Skill）</span></span><br><span class="line"><span class="comment">接口代理模式：接口的全路径r--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--type直接用的别名方式，在核心配置文件里设置了的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMapper"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"user_id"</span> <span class="attr">property</span>=<span class="string">"user_id"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"account"</span> <span class="attr">property</span>=<span class="string">"account"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"passwrod"</span> <span class="attr">property</span>=<span class="string">"pasword"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"user_name"</span> <span class="attr">property</span>=<span class="string">"user_name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"status"</span> <span class="attr">property</span>=<span class="string">"status"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"login_time"</span> <span class="attr">property</span>=<span class="string">"login_time"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ip"</span> <span class="attr">property</span>=<span class="string">"ip"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"fk_role_id"</span> <span class="attr">property</span>=<span class="string">"fk_role_id"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"SimpleResultMapper"</span> <span class="attr">type</span>=<span class="string">"User"</span> <span class="attr">extends</span>=<span class="string">"BaseResultMapper"</span>&gt;</span> <span class="comment">&lt;!-- extends继承了BaseResultMapper，同java继承一样 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--关联对象--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在结果集中找到fk_role_id字段，然后再传值给命名空间com.hs.dao.RoleDao下的getRoleByPk语句进行查询(找到要执行的SQL语句)，最后返回role，它的类型是com.hs.model.Role--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"role"</span> <span class="attr">javaType</span>=<span class="string">"Role"</span> <span class="attr">column</span>=<span class="string">"fk_role_id"</span> <span class="attr">select</span>=<span class="string">"com.hs.dao.RoleDao.getRoleByPk"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sys_user_colums"</span>&gt;</span></span><br><span class="line">user_id,account,password,user_name,status,login_time,ip,fk_role_id</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sys_user_colums_alias"</span>&gt;</span></span><br><span class="line">$&#123;alias&#125;.user_id,$&#123;alias&#125;.account,$&#123;alias&#125;.password,$&#123;alias&#125;.user_name,$&#123;alias&#125;.status,$&#123;alias&#125;.login_time,$&#123;alias&#125;.ip,$&#123;alias&#125;.fk_role_id</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserByFk"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line">select <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"sys_user_colums"</span>/&gt;</span></span><br><span class="line">from sys_user</span><br><span class="line">where fk_role_id = #&#123;role_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--1.当你的形参传递&gt;1个的时候，parameterType不写，让其自动处理</span></span><br><span class="line"><span class="comment">2.#&#123;值&#125;，默认为arg0，arg1.....或param1，param2，，，</span></span><br><span class="line"><span class="comment">若在dao注解了@xxx(相当于指明了key值)，即也可以写xxx，默认的也可以写，相当于3个值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUser"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line">select <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"sys_user_colums"</span>/&gt;</span></span><br><span class="line">from sys_user</span><br><span class="line">where account=#&#123;account&#125; and password=#&#123;password&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-接口"><a href="#7-接口" class="headerlink" title="7.接口"></a>7.接口</h3><p>RoleDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.Role;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * select方式，先在role表查出主键，然后传给user表当做条件，查询出user的信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> role_id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Role <span class="title">getRoleByPk</span><span class="params">(<span class="keyword">int</span> role_id)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 利用连接查询方式，查询结果集</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> role_id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Role <span class="title">getRoleByLeftJoin</span><span class="params">(<span class="keyword">int</span> role_id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传递多个参数</span></span><br><span class="line"><span class="comment"> * 1.当你的形参传递&gt;1个的时候，parameterType不写，让其自动处理</span></span><br><span class="line"><span class="comment"> * 2.#&#123;值&#125;，默认为arg0，arg1.....或param1，param2，，，</span></span><br><span class="line"><span class="comment"> * 若在dao注解了<span class="doctag">@xxx</span>(相当于指明了key值)，即也可以写xxx，默认的也可以写，相当于3个值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">User <span class="title">getUser</span><span class="params">(@Param(<span class="string">"account"</span>)</span> String account, @<span class="title">Param</span><span class="params">(<span class="string">"password"</span>)</span> String password)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-日志配置文件"><a href="#8-日志配置文件" class="headerlink" title="8.日志配置文件"></a>8.日志配置文件</h3><p>mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 日志配置文件Global logging configuration</span><br><span class="line">log4j.rootLogger=ERROR, stdout</span><br><span class="line"># MyBatis logging configuration...</span><br><span class="line"># 如果要显示SQL语句，那么这个位置需要配置为命名空间log4j.logger.命名空间</span><br><span class="line">log4j.logger.com.hs.dao.UserDao=TRACE</span><br><span class="line">log4j.logger.com.hs.dao.RoleDao=TRACE</span><br><span class="line"># Console output...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br></pre></td></tr></table></figure><h3 id="9-测试类"><a href="#9-测试类" class="headerlink" title="9.测试类"></a>9.测试类</h3><p>MyBatisTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.RoleDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.util.MyBatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接口代理模式实现操作，在xxDao接口中，定义方法：  sql语句返回的结果类型 sql语句的id(要传的值);</span></span><br><span class="line"><span class="comment"> * 不用写实现类，直接写测试类,具体实现见测试类</span></span><br><span class="line"><span class="comment"> * sql的映射文件的命名空间跟接口的全路径一致</span></span><br><span class="line"><span class="comment"> * 可以根据接口的返回类型自动判断使用selectOne还是selectList eg:返回的是一个对象的为one，返回的是list的就是list，如果是List&lt;Bean&gt;，也是list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 利用select方式，</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByPk</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">RoleDao roleDao = sqlSession.getMapper(RoleDao.class);</span><br><span class="line">System.out.println(roleDao.getRoleByPk(-<span class="number">100</span>));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 利用连接方式查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByFk</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">RoleDao roleDao = sqlSession.getMapper(RoleDao.class);</span><br><span class="line">System.out.println(roleDao.getRoleByLeftJoin(-<span class="number">100</span>));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传递多个参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">String account = <span class="string">"admin"</span>;</span><br><span class="line">String password = <span class="string">"admin"</span>;</span><br><span class="line">System.out.println(userDao.getUser(account,password));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文讲解一对多的关联查询，传递多个参数。&lt;/p&gt;
    
    </summary>
    
      <category term="MyBatis学习总结" scheme="http://heshangcode.coding.me/categories/MyBatis%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="MyBatis" scheme="http://heshangcode.coding.me/tags/MyBatis/"/>
    
      <category term="SSM" scheme="http://heshangcode.coding.me/tags/SSM/"/>
    
      <category term="框架" scheme="http://heshangcode.coding.me/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
</feed>
