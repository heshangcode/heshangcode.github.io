<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>heshang</title>
  <icon>https://www.gravatar.com/avatar/ff0fad28696a2c137c9f67b2f18f359f</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://heshangcode.coding.me/"/>
  <updated>2018-08-19T16:12:14.223Z</updated>
  <id>http://heshangcode.coding.me/</id>
  
  <author>
    <name>和尚</name>
    <email>914727235@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>idea配置github并上传项目</title>
    <link href="http://heshangcode.coding.me/2018/08/19/idea%E9%85%8D%E7%BD%AEgithub%E5%B9%B6%E4%B8%8A%E4%BC%A0%E9%A1%B9%E7%9B%AE/"/>
    <id>http://heshangcode.coding.me/2018/08/19/idea配置github并上传项目/</id>
    <published>2018-08-19T14:52:48.000Z</published>
    <updated>2018-08-19T16:12:14.223Z</updated>
    
    <content type="html"><![CDATA[<p>感觉自己之前写的学习笔记，根本不叫笔记，只是为了把代码放上去而已，然后自己也学习了其他的很多学习博客的写法，写少量的代码进去，再配上相应的文字说明，然后把全部源码放在github上，我觉得我自己也借鉴这样写学习博客，然后今天学习了idea配置github，然后上传项目，自己也百度了许多教程，但是各种都不一样，自己就捅咕了一番，有了属于自己的教程，做个记录吧。</p><a id="more"></a><h3 id="1-什么是git"><a href="#1-什么是git" class="headerlink" title="1.什么是git"></a>1.什么是git</h3><p>学习教程：廖雪峰的git教程—-<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></p><h3 id="2-下载安装git"><a href="#2-下载安装git" class="headerlink" title="2.下载安装git"></a>2.下载安装git</h3><p>下载链接：<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></p><h3 id="3-注册一个github"><a href="#3-注册一个github" class="headerlink" title="3.注册一个github"></a>3.注册一个github</h3><p>github官网：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p><h3 id="4-github创建一个仓库"><a href="#4-github创建一个仓库" class="headerlink" title="4.github创建一个仓库"></a>4.github创建一个仓库</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffdgjj1tj20x00kq40c.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffiayytbj211e0nwmzm.jpg" alt=""></p><h3 id="5-idea配置github"><a href="#5-idea配置github" class="headerlink" title="5.idea配置github"></a>5.idea配置github</h3><ol><li>打开自己的项目</li><li><p>在setting里找到git安装的文件，然后点test，出现成功，注意是bin下的git.exe<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffk4clrnj20zs0nvabu.jpg" alt=""></p></li><li><p>设置自己的github账号密码，<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffm3zksgj20zt0o6myk.jpg" alt=""></p></li></ol><h3 id="6-idea上传项目到github"><a href="#6-idea上传项目到github" class="headerlink" title="6.idea上传项目到github"></a>6.idea上传项目到github</h3><ol><li>创建本地git仓库，然后选择你要上传的项目<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffonzhqzj20ss0csmy7.jpg" alt="">在控制台可以看见相应的git指令<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffqolsdcj20x00aumxm.jpg" alt="">此时你选择的项目的内容名字全部变色<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffsfsw7ij20sz0fxmyp.jpg" alt=""></li><li>选择不上传到github的文件或者文件夹，第一个为文件，第二个为文件夹<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffvyr5hqj20zs0nx0uc.jpg" alt="">或者在commit的时候选择需要上传的东西或者不上传的东西</li><li>commit到本地仓库<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fuffypefwsj20j40fct9j.jpg" alt="">               这里就是commit选择<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufg2debobj20qn0rujtl.jpg" alt="">控制台出现相应的git指令<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufg5m1gg7j216j09w3zf.jpg" alt=""></li><li>push到远程仓库github上<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufg7488qvj20xd0r0jtx.jpg" alt="">然后url输入刚才复制的github仓库地址，name是啥我也不知道<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufg8jzkvtj20m20jfjrw.jpg" alt="">这里箭头所指的是上床到哪个分支的名字，点击它，可以直接修改分支的名字，然后就push到相应的分支，<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufgaam5r4j20m10jmwez.jpg" alt="">控制台出现相应的git指令<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufgel07v8j217f0a03zb.jpg" alt=""></li><li>push成功<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufgdg023sj214l0jw74x.jpg" alt=""></li><li>github页面上显示<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufgh1bnz8j212t0jm76c.jpg" alt=""></li></ol><h3 id="7-如果代码修改了再提交"><a href="#7-如果代码修改了再提交" class="headerlink" title="7.如果代码修改了再提交"></a>7.如果代码修改了再提交</h3><p>重复上面的第3步开始，<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufgkhgudoj20wv0shq5z.jpg" alt=""></p><p>然后github页面就是这样的<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fufgm9sc7tj212p0k2wgk.jpg" alt=""></p><h3 id="8-自己在网上看的一些不错教程"><a href="#8-自己在网上看的一些不错教程" class="headerlink" title="8.自己在网上看的一些不错教程"></a>8.自己在网上看的一些不错教程</h3><ul><li><a href="https://www.cnblogs.com/jinjiyese153/p/6796668.html" target="_blank" rel="noopener">https://www.cnblogs.com/jinjiyese153/p/6796668.html</a></li><li><a href="https://www.cnblogs.com/jinjiyese153/p/6796668.html" target="_blank" rel="noopener">https://www.cnblogs.com/jinjiyese153/p/6796668.html</a></li><li><a href="https://my.oschina.net/u/2608182/blog/745178" target="_blank" rel="noopener">https://my.oschina.net/u/2608182/blog/745178</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感觉自己之前写的学习笔记，根本不叫笔记，只是为了把代码放上去而已，然后自己也学习了其他的很多学习博客的写法，写少量的代码进去，再配上相应的文字说明，然后把全部源码放在github上，我觉得我自己也借鉴这样写学习博客，然后今天学习了idea配置github，然后上传项目，自己也百度了许多教程，但是各种都不一样，自己就捅咕了一番，有了属于自己的教程，做个记录吧。&lt;/p&gt;
    
    </summary>
    
      <category term="idea" scheme="http://heshangcode.coding.me/categories/idea/"/>
    
    
      <category term="idea配置github" scheme="http://heshangcode.coding.me/tags/idea%E9%85%8D%E7%BD%AEgithub/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis学习笔记（七）遇见的坑</title>
    <link href="http://heshangcode.coding.me/2018/08/06/MyBatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%83%EF%BC%89%E9%81%87%E8%A7%81%E7%9A%84%E5%9D%91/"/>
    <id>http://heshangcode.coding.me/2018/08/06/MyBatis学习笔记（七）遇见的坑/</id>
    <published>2018-08-06T08:33:24.000Z</published>
    <updated>2018-08-06T09:31:02.215Z</updated>
    
    <content type="html"><![CDATA[<p>在学习过程中，遇见数据库中中文乱码，mybatis常见的异常和如何调试，idea不知道如何创建xml文件，idea中project和module的关系，如何把一个module复制成另外一个module，每次一个新的mybatis项目，有很多地方记得要修改</p><a id="more"></a><h3 id="1-解决数据库中文乱码问题"><a href="#1-解决数据库中文乱码问题" class="headerlink" title="1.解决数据库中文乱码问题"></a>1.解决数据库中文乱码问题</h3><ul><li><p>方法一(推荐)：把数据库的配置文件编码设置成UTF-8或utf8mb4，两者区别就是UTF-8最大三字节，后者最大四字节</p><ul><li><p>操作：</p><p>之前自己在网上找了一些教程说在mysql的安装目录下一个配置文件里修改，结果自己找了半天了，都没有找到，然后用everything搜索，找到了配置文件，结果不是安装目录下……</p><ol><li>找到如下文件，如果没有找到，用everything搜索</li></ol><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu02kuo6fhj20oh05dmxd.jpg" alt=""></p><ol start="2"><li><p>在最后添加下面代码</p><p>若要设置成utf-8，把utf8mb4修改成utf-8即可 </p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[client] </span><br><span class="line">default-character-set = utf8mb4 </span><br><span class="line">[mysql] </span><br><span class="line">default-character-set = utf8mb4 </span><br><span class="line">[mysqld] </span><br><span class="line">character-set-client-handshake = FALSE </span><br><span class="line">character-set-server = utf8mb4 </span><br><span class="line">collation-server = utf8mb4_unicode_ci </span><br><span class="line">init_connect=&apos;SET NAMES utf8mb4&apos;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>保存文件，重启mysql服务</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu02v37wnkg20s40lzhb1.gif" alt=""></p></li></ol></li></ul></li><li><p>方法二：在每次连接数据库的url最后面加入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?useUnicode=<span class="keyword">true</span>&amp;characterEncoding=UTF-<span class="number">8</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-mybatis常见的异常"><a href="#2-mybatis常见的异常" class="headerlink" title="2.mybatis常见的异常"></a>2.mybatis常见的异常</h3><ol><li><p>控制台或者其他位置报MyBatisUtils工具类的异常</p><ul><li>95%以上：是映射文件你写错了</li><li>5%：是核心配置文件写错了</li><li>因为mybatis-config.xml是入口，会加载很多的映射文件，把他们融合在一起，如果其中有任何一个映射文件出错，所有的定制的SQL语句都将无法运行</li></ul></li><li><p>如何调试？</p><ul><li><p>把自己的，，，这一行代码注释掉，然后再运行看控制台，错误从下往上看，Caused byxx</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu037u28t7j20o803stb8.jpg" alt=""></p></li></ul></li></ol><h3 id="3-idea如何创建xml文件"><a href="#3-idea如何创建xml文件" class="headerlink" title="3.idea如何创建xml文件"></a>3.idea如何创建xml文件</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu03fh0ab9g20uu0im1cv.gif" alt=""></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br></pre></td></tr></table></figure><h3 id="4-idea中project和module的关系"><a href="#4-idea中project和module的关系" class="headerlink" title="4.idea中project和module的关系"></a>4.idea中project和module的关系</h3><p>之前刚用idea，以为一个project，就是一个项目，结果并不是</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu03qztqizj208408nabo.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu03nbsu3oj20fg03rmx5.jpg" alt=""></p><h3 id="5-如何把一个module复制成另外一个module"><a href="#5-如何把一个module复制成另外一个module" class="headerlink" title="5.如何把一个module复制成另外一个module"></a>5.如何把一个module复制成另外一个module</h3><p>直接像eclipse那样复制一个module，图标只会这样：<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu03tbtcf7j206z00pa9w.jpg" alt=""></p><p>这不是一个module，要让他变成module，如下操作：<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu03vn5pjcg20k10maqhb.gif" alt=""></p><h3 id="6-一个新的mybatis项目"><a href="#6-一个新的mybatis项目" class="headerlink" title="6.一个新的mybatis项目"></a>6.一个新的mybatis项目</h3><p>重点一些地方需要修改或者添加</p><ol><li>核心配置文件的映射文件里</li><li>日志框架里写上你的命名空间</li></ol><hr><hr><p>到此，目前的MyBatis小结到此结束，下一个学习SpringMvc，只希望自己能坚持下去，世界诱惑很多，只希望自己能一路走下去，加油！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在学习过程中，遇见数据库中中文乱码，mybatis常见的异常和如何调试，idea不知道如何创建xml文件，idea中project和module的关系，如何把一个module复制成另外一个module，每次一个新的mybatis项目，有很多地方记得要修改&lt;/p&gt;
    
    </summary>
    
      <category term="MyBatis" scheme="http://heshangcode.coding.me/categories/MyBatis/"/>
    
    
      <category term="MyBatis学习总结" scheme="http://heshangcode.coding.me/tags/MyBatis%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis学习笔记（六）一对多的关联查询和传递多个参数</title>
    <link href="http://heshangcode.coding.me/2018/08/06/MyBatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89%E4%B8%80%E5%AF%B9%E5%A4%9A%E7%9A%84%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E5%92%8C%E4%BC%A0%E9%80%92%E5%A4%9A%E4%B8%AA%E5%8F%82%E6%95%B0/"/>
    <id>http://heshangcode.coding.me/2018/08/06/MyBatis学习笔记（六）一对多的关联查询和传递多个参数/</id>
    <published>2018-08-06T08:11:22.000Z</published>
    <updated>2018-08-06T08:31:44.497Z</updated>
    
    <content type="html"><![CDATA[<p>本文讲解一对多的关联查询，传递多个参数。</p><a id="more"></a><h3 id="1-传递多个参数"><a href="#1-传递多个参数" class="headerlink" title="1.传递多个参数"></a>1.传递多个参数</h3><ol><li>当你的形参传递&gt;1个的时候，parameterType不写，让其自动处理</li><li>#{值}，默认为arg0，arg1…..或param1，param2，，，</li><li>若在接口中注解了@Param(相当于指明了key值)，即也可以写xxx，默认的也可以写，相当于3个值</li></ol><h3 id="2-结构"><a href="#2-结构" class="headerlink" title="2.结构"></a>2.结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1fu023w7ik0j20av0hntdv.jpg" alt=""></p><h3 id="3-数据库属性文件"><a href="#3-数据库属性文件" class="headerlink" title="3.数据库属性文件"></a>3.数据库属性文件</h3><p>同之前</p><h3 id="4-核心配置文件"><a href="#4-核心配置文件" class="headerlink" title="4.核心配置文件"></a>4.核心配置文件</h3><p>mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--加载属性文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义设置类型的别名，也就是resultMap里的type，避免包名已修改，在映射文件里修改多处地方--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 方式一、com.hs.model.Skill这个类设置了别名hs，之后要用这个的话，直接写hs --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;typeAlias type="com.hs.model.Skill" alias="hs"/&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 方式二、com.hs.model这个包下的类，要用的时候直接写类名，比如用com.hs.model.Skill，直接写Skill --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.hs.model"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置数据库的环境--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--事务管理器:保证数据的完整性和一致性   关键信息  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--框架：默认情况下CUD操作需要  手动提交事务</span></span><br><span class="line"><span class="comment">（如同在Navicat中表中输入了数据，没有点那个小√，就是没有提交事务，</span></span><br><span class="line"><span class="comment">但是输入insert语句，就自动提交事务了）  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用的是连接池：百度java如何实行连接池的原理？  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.driver&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.url&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.username&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.password&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--加载映射文件 ，也就是含sql语句的文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--告知映射文件方式1，一个一个的配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/hs/model/UserMapper.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/hs/model/RoleMapper.xml"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 告知映射文件方式2，自动扫描包内的Mapper接口与配置文件 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;package name="com.hs.model"/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-持久化类"><a href="#5-持久化类" class="headerlink" title="5.持久化类"></a>5.持久化类</h3><p>Role.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer role_id;</span><br><span class="line"><span class="keyword">private</span> String role_name;</span><br><span class="line"><span class="keyword">private</span> String role_key;</span><br><span class="line"><span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line"><span class="comment">//关联对象,一对多，一个角色可以有多个用户</span></span><br><span class="line"><span class="keyword">private</span> List&lt;User&gt; userList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> userList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserList</span><span class="params">(List&lt;User&gt; userList)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.userList = userList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getRole_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_id</span><span class="params">(Integer role_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role_id = role_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getRole_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_name</span><span class="params">(String role_name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role_name = role_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getRole_key</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_key</span><span class="params">(String role_key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role_key = role_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatus</span><span class="params">(Integer status)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.status = status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Role&#123;"</span> +</span><br><span class="line"><span class="string">"role_id="</span> + role_id +</span><br><span class="line"><span class="string">", role_name='"</span> + role_name + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", role_key='"</span> + role_key + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", status="</span> + status +</span><br><span class="line"><span class="string">", userList="</span> + userList +</span><br><span class="line"><span class="string">'&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer user_id;</span><br><span class="line"><span class="keyword">private</span> String account;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"><span class="keyword">private</span> String user_name;</span><br><span class="line"><span class="keyword">private</span> Integer status;</span><br><span class="line"><span class="keyword">private</span> Date login_time;</span><br><span class="line"><span class="keyword">private</span> String ip;</span><br><span class="line"><span class="keyword">private</span> Integer fk_role_id;</span><br><span class="line"><span class="comment">//关联对象 一对一或多对一</span></span><br><span class="line"><span class="keyword">private</span> Role role;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> account;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccount</span><span class="params">(String account)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.account = account;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatus</span><span class="params">(Integer status)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.status = status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">getLogin_time</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> login_time;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLogin_time</span><span class="params">(Date login_time)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.login_time = login_time;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getIp</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> ip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIp</span><span class="params">(String ip)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.ip = ip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getFk_role_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> fk_role_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFk_role_id</span><span class="params">(Integer fk_role_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.fk_role_id = fk_role_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Role <span class="title">getRole</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole</span><span class="params">(Role role)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role = role;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line"><span class="string">"user_id="</span> + user_id +</span><br><span class="line"><span class="string">", account='"</span> + account + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", password='"</span> + password + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", user_name='"</span> + user_name + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", status="</span> + status +</span><br><span class="line"><span class="string">", login_time="</span> + login_time +</span><br><span class="line"><span class="string">", ip='"</span> + ip + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", fk_role_id="</span> + fk_role_id +</span><br><span class="line"><span class="string">", role="</span> + role +</span><br><span class="line"><span class="string">'&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-XML映射文件"><a href="#6-XML映射文件" class="headerlink" title="6.XML映射文件"></a>6.XML映射文件</h3><p>RoleMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace=命名空间，唯一不重复--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.hs.dao.RoleDao"</span>&gt;</span><span class="comment">&lt;!--命名空间规则</span></span><br><span class="line"><span class="comment">传统模式：（持久化类（实体化Bean）的类名全路径com.hs.Skill）</span></span><br><span class="line"><span class="comment">接口代理模式：接口的全路径r--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">"Role"</span> <span class="attr">id</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"role_id"</span> <span class="attr">property</span>=<span class="string">"role_id"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_name"</span> <span class="attr">property</span>=<span class="string">"role_name"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_key"</span> <span class="attr">property</span>=<span class="string">"role_key"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"status"</span> <span class="attr">property</span>=<span class="string">"status"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sys_role_columns"</span>&gt;</span></span><br><span class="line">role_id,role_name,role_key,status</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sys_role_columns_alias"</span>&gt;</span></span><br><span class="line">$&#123;alias&#125;.role_id,$&#123;alias&#125;.role_name,$&#123;alias&#125;.role_key,$&#123;alias&#125;.status</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"SimpleResultMapper"</span> <span class="attr">type</span>=<span class="string">"Role"</span> <span class="attr">extends</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置集合List&lt;User&gt;,javaType一般可以不写--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在结果集中找到role_id这个字段，然后传给命名空间com.hs.dao.UserDao下id为getUserByFk的语句，</span></span><br><span class="line"><span class="comment">返回的结果集字段为userList，类型为java.util.List，里面装的类型是com.he.model.User这个类型</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"userList"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">javaType</span>=<span class="string">"java.util.List"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">ofType</span>=<span class="string">"User"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">column</span>=<span class="string">"role_id"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">select</span>=<span class="string">"com.hs.dao.UserDao.getUserByFk"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getRoleByPk"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultMap</span>=<span class="string">"SimpleResultMapper"</span>&gt;</span></span><br><span class="line">select</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"sys_role_columns"</span>/&gt;</span></span><br><span class="line">from sys_role</span><br><span class="line">where role_id = #&#123;role_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"JoinResultMapper"</span> <span class="attr">type</span>=<span class="string">"Role"</span> <span class="attr">extends</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置集合，查询出来的User里的结果集找com.hs.dao.UserDao.BaseResultMapper处理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"userList"</span> <span class="attr">javaType</span>=<span class="string">"list"</span> <span class="attr">ofType</span>=<span class="string">"com.hs.model.User"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">resultMap</span>=<span class="string">"com.hs.dao.UserDao.BaseResultMapper"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;id/&gt;</span></span><br><span class="line"><span class="comment">&lt;result/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getRoleByLeftJoin"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultMap</span>=<span class="string">"JoinResultMapper"</span>&gt;</span></span><br><span class="line">SELECT</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"com.hs.dao.UserDao.sys_user_colums_alias"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"alias"</span> <span class="attr">value</span>=<span class="string">"su"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">,</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"sys_role_columns_alias"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"alias"</span> <span class="attr">value</span>=<span class="string">"sr"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">FROM</span><br><span class="line">sys_role sr</span><br><span class="line">LEFT JOIN sys_user su ON sr.role_id = su.fk_role_id</span><br><span class="line">WHERE</span><br><span class="line">sr.role_id =#&#123;role_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace=命名空间，唯一不重复--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.hs.dao.UserDao"</span>&gt;</span><span class="comment">&lt;!--命名空间规则</span></span><br><span class="line"><span class="comment">传统模式：（持久化类（实体化Bean）的类名全路径com.hs.Skill）</span></span><br><span class="line"><span class="comment">接口代理模式：接口的全路径r--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--type直接用的别名方式，在核心配置文件里设置了的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMapper"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"user_id"</span> <span class="attr">property</span>=<span class="string">"user_id"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"account"</span> <span class="attr">property</span>=<span class="string">"account"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"passwrod"</span> <span class="attr">property</span>=<span class="string">"pasword"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"user_name"</span> <span class="attr">property</span>=<span class="string">"user_name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"status"</span> <span class="attr">property</span>=<span class="string">"status"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"login_time"</span> <span class="attr">property</span>=<span class="string">"login_time"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ip"</span> <span class="attr">property</span>=<span class="string">"ip"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"fk_role_id"</span> <span class="attr">property</span>=<span class="string">"fk_role_id"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"SimpleResultMapper"</span> <span class="attr">type</span>=<span class="string">"User"</span> <span class="attr">extends</span>=<span class="string">"BaseResultMapper"</span>&gt;</span> <span class="comment">&lt;!-- extends继承了BaseResultMapper，同java继承一样 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--关联对象--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在结果集中找到fk_role_id字段，然后再传值给命名空间com.hs.dao.RoleDao下的getRoleByPk语句进行查询(找到要执行的SQL语句)，最后返回role，它的类型是com.hs.model.Role--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"role"</span> <span class="attr">javaType</span>=<span class="string">"Role"</span> <span class="attr">column</span>=<span class="string">"fk_role_id"</span> <span class="attr">select</span>=<span class="string">"com.hs.dao.RoleDao.getRoleByPk"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sys_user_colums"</span>&gt;</span></span><br><span class="line">user_id,account,password,user_name,status,login_time,ip,fk_role_id</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sys_user_colums_alias"</span>&gt;</span></span><br><span class="line">$&#123;alias&#125;.user_id,$&#123;alias&#125;.account,$&#123;alias&#125;.password,$&#123;alias&#125;.user_name,$&#123;alias&#125;.status,$&#123;alias&#125;.login_time,$&#123;alias&#125;.ip,$&#123;alias&#125;.fk_role_id</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserByFk"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line">select <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"sys_user_colums"</span>/&gt;</span></span><br><span class="line">from sys_user</span><br><span class="line">where fk_role_id = #&#123;role_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--1.当你的形参传递&gt;1个的时候，parameterType不写，让其自动处理</span></span><br><span class="line"><span class="comment">2.#&#123;值&#125;，默认为arg0，arg1.....或param1，param2，，，</span></span><br><span class="line"><span class="comment">若在dao注解了@xxx(相当于指明了key值)，即也可以写xxx，默认的也可以写，相当于3个值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUser"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line">select <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"sys_user_colums"</span>/&gt;</span></span><br><span class="line">from sys_user</span><br><span class="line">where account=#&#123;account&#125; and password=#&#123;password&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-接口"><a href="#7-接口" class="headerlink" title="7.接口"></a>7.接口</h3><p>RoleDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.Role;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * select方式，先在role表查出主键，然后传给user表当做条件，查询出user的信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> role_id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Role <span class="title">getRoleByPk</span><span class="params">(<span class="keyword">int</span> role_id)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 利用连接查询方式，查询结果集</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> role_id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Role <span class="title">getRoleByLeftJoin</span><span class="params">(<span class="keyword">int</span> role_id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传递多个参数</span></span><br><span class="line"><span class="comment"> * 1.当你的形参传递&gt;1个的时候，parameterType不写，让其自动处理</span></span><br><span class="line"><span class="comment"> * 2.#&#123;值&#125;，默认为arg0，arg1.....或param1，param2，，，</span></span><br><span class="line"><span class="comment"> * 若在dao注解了<span class="doctag">@xxx</span>(相当于指明了key值)，即也可以写xxx，默认的也可以写，相当于3个值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">User <span class="title">getUser</span><span class="params">(@Param(<span class="string">"account"</span>)</span> String account, @<span class="title">Param</span><span class="params">(<span class="string">"password"</span>)</span> String password)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-日志配置文件"><a href="#8-日志配置文件" class="headerlink" title="8.日志配置文件"></a>8.日志配置文件</h3><p>mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 日志配置文件Global logging configuration</span><br><span class="line">log4j.rootLogger=ERROR, stdout</span><br><span class="line"># MyBatis logging configuration...</span><br><span class="line"># 如果要显示SQL语句，那么这个位置需要配置为命名空间log4j.logger.命名空间</span><br><span class="line">log4j.logger.com.hs.dao.UserDao=TRACE</span><br><span class="line">log4j.logger.com.hs.dao.RoleDao=TRACE</span><br><span class="line"># Console output...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br></pre></td></tr></table></figure><h3 id="9-测试类"><a href="#9-测试类" class="headerlink" title="9.测试类"></a>9.测试类</h3><p>MyBatisTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.RoleDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.util.MyBatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接口代理模式实现操作，在xxDao接口中，定义方法：  sql语句返回的结果类型 sql语句的id(要传的值);</span></span><br><span class="line"><span class="comment"> * 不用写实现类，直接写测试类,具体实现见测试类</span></span><br><span class="line"><span class="comment"> * sql的映射文件的命名空间跟接口的全路径一致</span></span><br><span class="line"><span class="comment"> * 可以根据接口的返回类型自动判断使用selectOne还是selectList eg:返回的是一个对象的为one，返回的是list的就是list，如果是List&lt;Bean&gt;，也是list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 利用select方式，</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByPk</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">RoleDao roleDao = sqlSession.getMapper(RoleDao.class);</span><br><span class="line">System.out.println(roleDao.getRoleByPk(-<span class="number">100</span>));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 利用连接方式查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByFk</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">RoleDao roleDao = sqlSession.getMapper(RoleDao.class);</span><br><span class="line">System.out.println(roleDao.getRoleByLeftJoin(-<span class="number">100</span>));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传递多个参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">String account = <span class="string">"admin"</span>;</span><br><span class="line">String password = <span class="string">"admin"</span>;</span><br><span class="line">System.out.println(userDao.getUser(account,password));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文讲解一对多的关联查询，传递多个参数。&lt;/p&gt;
    
    </summary>
    
      <category term="MyBatis" scheme="http://heshangcode.coding.me/categories/MyBatis/"/>
    
    
      <category term="MyBatis学习总结" scheme="http://heshangcode.coding.me/tags/MyBatis%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis学习笔记（五）一对一或多对一的关联查询</title>
    <link href="http://heshangcode.coding.me/2018/08/06/MyBatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89%E4%B8%80%E5%AF%B9%E4%B8%80%E6%88%96%E5%A4%9A%E5%AF%B9%E4%B8%80%E7%9A%84%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2/"/>
    <id>http://heshangcode.coding.me/2018/08/06/MyBatis学习笔记（五）一对一或多对一的关联查询/</id>
    <published>2018-08-06T05:18:23.000Z</published>
    <updated>2018-08-06T08:11:00.053Z</updated>
    
    <content type="html"><![CDATA[<p>本文讲解，mybatis中一对一、多对一的关联查询，类名的别名方式应用</p><a id="more"></a><h3 id="1-关系型数据库中表和表之间的关系"><a href="#1-关系型数据库中表和表之间的关系" class="headerlink" title="1.关系型数据库中表和表之间的关系"></a>1.关系型数据库中表和表之间的关系</h3><ul><li>一对一：外键唯一</li><li>一对多和多对一：只是站在角度不同而已，但是外键一定在多方<ul><li>自身一对多和多对一</li></ul></li><li>外键：<ul><li>逻辑关联</li><li>物理关联</li></ul></li><li>多对多：一定是通过中间表维护</li></ul><h3 id="2-java类中如何表示上述几种关系"><a href="#2-java类中如何表示上述几种关系" class="headerlink" title="2.java类中如何表示上述几种关系"></a>2.java类中如何表示上述几种关系</h3><p>UML：依赖/关联/组合</p><p>eg：用户和角色的关系</p><p>一个用户对应一个角色，一个角色可以多个用户</p><table><thead><tr><th style="text-align:center">用户ID</th><th style="text-align:center">用户</th><th style="text-align:center">角色ID</th></tr></thead><tbody><tr><td style="text-align:center">100</td><td style="text-align:center">悟空</td><td style="text-align:center">999</td></tr><tr><td style="text-align:center">200</td><td style="text-align:center">八戒</td><td style="text-align:center">999</td></tr></tbody></table><ol><li>查询100的用户信息，那么它一定对 一个角色信息</li><li>List<user></user></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line"><span class="comment">//关联对象 </span></span><br><span class="line"><span class="keyword">public</span> Role role;<span class="comment">//一对一,多对一 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> List&lt;User&gt; userList;<span class="comment">//一个角色里可以对应很多用户</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-三种方式"><a href="#3-三种方式" class="headerlink" title="3.三种方式"></a>3.三种方式</h3><ol><li>传统模式：两个SQL语句，先在一个表查出数据，然后把其中的id作为另外一个表的where，再查数据</li><li>select方式：在映射文件中，一个查出的结果集中，调用另外一个select语句实现查询</li><li>连接查询：也就是SQL语句连接查询(个人还是喜欢这种)</li></ol><h3 id="4-知识小点"><a href="#4-知识小点" class="headerlink" title="4.知识小点"></a>4.知识小点</h3><ol><li>配置关联对象用&lt;association&gt;这样查出来的就是一个对象</li><li>配置集合就用&lt;collection&gt;</li></ol><h3 id="5-目录结构"><a href="#5-目录结构" class="headerlink" title="5.目录结构"></a>5.目录结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1ftzyrkwkxqj20ap0dxjvb.jpg" alt=""></p><h3 id="6-数据库属性文件"><a href="#6-数据库属性文件" class="headerlink" title="6.数据库属性文件"></a>6.数据库属性文件</h3><p>jdbc.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代码同上篇</span><br></pre></td></tr></table></figure><h3 id="7-核心配置文件"><a href="#7-核心配置文件" class="headerlink" title="7.核心配置文件"></a>7.核心配置文件</h3><p>mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--加载属性文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义设置类型的别名，也就是resultMap里的type，避免包名已修改，在映射文件里修改多处地方--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 方式一、com.hs.model.Skill这个类设置了别名hs，之后要用这个的话，直接写hs --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;typeAlias type="com.hs.model.Skill" alias="hs"/&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 方式二、com.hs.model这个包下的类，要用的时候直接写类名，比如用com.hs.model.Skill，直接写Skill --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.hs.model"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置数据库的环境--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--事务管理器:保证数据的完整性和一致性   关键信息  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--框架：默认情况下CUD操作需要  手动提交事务</span></span><br><span class="line"><span class="comment">（如同在Navicat中表中输入了数据，没有点那个小√，就是没有提交事务，</span></span><br><span class="line"><span class="comment">但是输入insert语句，就自动提交事务了）  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用的是连接池：百度java如何实行连接池的原理？  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.driver&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.url&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.username&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.password&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--加载映射文件 ，也就是含sql语句的文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--告知映射文件方式1，一个一个的配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/hs/model/UserMapper.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/hs/model/RoleMapper.xml"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 告知映射文件方式2，自动扫描包内的Mapper接口与配置文件 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;package name="com.hs.model"/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-封装好的工具类"><a href="#8-封装好的工具类" class="headerlink" title="8.封装好的工具类"></a>8.封装好的工具类</h3><p>MyBatisUtils.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同上篇</span><br></pre></td></tr></table></figure><h3 id="9-持久化类"><a href="#9-持久化类" class="headerlink" title="9.持久化类"></a>9.持久化类</h3><p>Role.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer role_id;</span><br><span class="line"><span class="keyword">private</span> String role_name;</span><br><span class="line"><span class="keyword">private</span> String role_key;</span><br><span class="line"><span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getRole_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_id</span><span class="params">(Integer role_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role_id = role_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getRole_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_name</span><span class="params">(String role_name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role_name = role_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getRole_key</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole_key</span><span class="params">(String role_key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role_key = role_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatus</span><span class="params">(Integer status)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.status = status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Role&#123;"</span> +</span><br><span class="line"><span class="string">"role_id="</span> + role_id +</span><br><span class="line"><span class="string">", role_name='"</span> + role_name + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", role_key='"</span> + role_key + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", status="</span> + status +</span><br><span class="line"><span class="string">'&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer user_id;</span><br><span class="line"><span class="keyword">private</span> String account;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"><span class="keyword">private</span> String user_name;</span><br><span class="line"><span class="keyword">private</span> Integer status;</span><br><span class="line"><span class="keyword">private</span> Date login_time;</span><br><span class="line"><span class="keyword">private</span> String ip;</span><br><span class="line"><span class="keyword">private</span> Integer fk_role_id;</span><br><span class="line"><span class="comment">//关联对象 一对一或多对一，一个用户对应一个角色</span></span><br><span class="line"><span class="keyword">private</span> Role role;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> account;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccount</span><span class="params">(String account)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.account = account;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatus</span><span class="params">(Integer status)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.status = status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">getLogin_time</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> login_time;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLogin_time</span><span class="params">(Date login_time)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.login_time = login_time;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getIp</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> ip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIp</span><span class="params">(String ip)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.ip = ip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getFk_role_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> fk_role_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFk_role_id</span><span class="params">(Integer fk_role_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.fk_role_id = fk_role_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Role <span class="title">getRole</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> role;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole</span><span class="params">(Role role)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.role = role;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line"><span class="string">"user_id="</span> + user_id +</span><br><span class="line"><span class="string">", account='"</span> + account + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", password='"</span> + password + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", user_name='"</span> + user_name + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", status="</span> + status +</span><br><span class="line"><span class="string">", login_time="</span> + login_time +</span><br><span class="line"><span class="string">", ip='"</span> + ip + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", fk_role_id="</span> + fk_role_id +</span><br><span class="line"><span class="string">", role="</span> + role +</span><br><span class="line"><span class="string">'&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-XML映射文件"><a href="#10-XML映射文件" class="headerlink" title="10.XML映射文件"></a>10.XML映射文件</h3><p>RoleMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace=命名空间，唯一不重复--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.hs.dao.RoleDao"</span>&gt;</span><span class="comment">&lt;!--命名空间规则</span></span><br><span class="line"><span class="comment">传统模式：（持久化类（实体化Bean）的类名全路径com.hs.Skill）</span></span><br><span class="line"><span class="comment">接口代理模式：接口的全路径r--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--type直接用的类名别名方式，在核心配置文件里设置了的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">"Role"</span> <span class="attr">id</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"role_id"</span> <span class="attr">property</span>=<span class="string">"role_id"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_name"</span> <span class="attr">property</span>=<span class="string">"role_name"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"role_key"</span>  <span class="attr">property</span>=<span class="string">"role_key"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"status"</span>  <span class="attr">property</span>=<span class="string">"status"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sys_role_columns"</span>&gt;</span></span><br><span class="line">role_id,role_name,role_key,status</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sys_role_columns_alias"</span>&gt;</span></span><br><span class="line">$&#123;alias&#125;.role_id,$&#123;alias&#125;.role_name,$&#123;alias&#125;.role_key,$&#123;alias&#125;.status</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getRoleByPk"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line">select <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"sys_role_columns"</span>/&gt;</span></span><br><span class="line">from sys_role</span><br><span class="line">where role_id = #&#123;role_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace=命名空间，唯一不重复--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.hs.dao.UserDao"</span>&gt;</span><span class="comment">&lt;!--命名空间规则</span></span><br><span class="line"><span class="comment">传统模式：（持久化类（实体化Bean）的类名全路径com.hs.Skill）</span></span><br><span class="line"><span class="comment">接口代理模式：接口的全路径r--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--type直接用的类名别名方式，在核心配置文件里设置了的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMapper"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"user_id"</span> <span class="attr">property</span>=<span class="string">"user_id"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"account"</span> <span class="attr">property</span>=<span class="string">"account"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"passwrod"</span> <span class="attr">property</span>=<span class="string">"pasword"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"user_name"</span> <span class="attr">property</span>=<span class="string">"user_name"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"status"</span> <span class="attr">property</span>=<span class="string">"status"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"login_time"</span> <span class="attr">property</span>=<span class="string">"login_time"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"ip"</span> <span class="attr">property</span>=<span class="string">"ip"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"fk_role_id"</span> <span class="attr">property</span>=<span class="string">"fk_role_id"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"SimpleResultMapper"</span> <span class="attr">type</span>=<span class="string">"User"</span> <span class="attr">extends</span>=<span class="string">"BaseResultMapper"</span>&gt;</span> <span class="comment">&lt;!-- extends继承了BaseResultMapper，同java继承一样 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置关联对象--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--在结果集中找到fk_role_id字段，然后再传值给命名空间com.hs.dao.RoleDao下的getRoleByPk语句进行查询(找到要执行的SQL语句)，最后返回role(对象的属性)，它的类型是com.hs.model.Role--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"role"</span> <span class="attr">javaType</span>=<span class="string">"Role"</span> <span class="attr">column</span>=<span class="string">"fk_role_id"</span> <span class="attr">select</span>=<span class="string">"com.hs.dao.RoleDao.getRoleByPk"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">""</span></span></span><br><span class="line">&lt;/resultMap&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sys_user_colums"</span>&gt;</span></span><br><span class="line">user_id,account,password,user_name,status,login_time,ip,fk_role_id</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"sys_user_colums_alias"</span>&gt;</span></span><br><span class="line">$&#123;alias&#125;.user_id,$&#123;alias&#125;.account,$&#123;alias&#125;.password,$&#123;alias&#125;.user_name,$&#123;alias&#125;.status,$&#123;alias&#125;.login_time,$&#123;alias&#125;.ip,$&#123;alias&#125;.fk_role_id</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserByPk01"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line">select <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"sys_user_colums"</span>/&gt;</span></span><br><span class="line">from sys_user</span><br><span class="line">where user_id = #&#123;user_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserByPk02"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultMap</span>=<span class="string">"SimpleResultMapper"</span>&gt;</span></span><br><span class="line">select <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"sys_user_colums"</span>/&gt;</span></span><br><span class="line">from sys_user</span><br><span class="line">where user_id = #&#123;user_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"JoinResultMapper"</span> <span class="attr">type</span>=<span class="string">"User"</span> <span class="attr">extends</span>=<span class="string">"BaseResultMapper"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--关联对象--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--resultMap引用别人的结果集(命名空间+"."+id)，或者自己在下面写结果集处理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"role"</span> <span class="attr">javaType</span>=<span class="string">"Role"</span> <span class="attr">resultMap</span>=<span class="string">"com.hs.dao.RoleDao.BaseResultMapper"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;id column="role_id" property="role_id"/&gt;</span></span><br><span class="line"><span class="comment">&lt;result column="role_name" property="role_name"/&gt;</span></span><br><span class="line"><span class="comment">&lt;result column="role_key" property="role_key"/&gt;</span></span><br><span class="line"><span class="comment">&lt;result column="status" property="status"/&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserByLeftJoin"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultMap</span>=<span class="string">"JoinResultMapper"</span>&gt;</span></span><br><span class="line">select</span><br><span class="line"><span class="comment">&lt;!-- 调用别名式的SQL代码，给alias赋值为u --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"sys_user_colums_alias"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"alias"</span> <span class="attr">value</span>=<span class="string">"u"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">,</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"com.hs.dao.RoleDao.sys_role_columns_alias"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"alias"</span> <span class="attr">value</span>=<span class="string">"r"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">from sys_user u</span><br><span class="line">left join sys_role r on u.fk_role_id = r.role_id</span><br><span class="line">where</span><br><span class="line">u.user_id = #&#123;user_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="11-接口"><a href="#11-接口" class="headerlink" title="11.接口"></a>11.接口</h3><p>UserDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过id查询user表的所有信息，再用它的外键传递给另外一个表进行查询数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user_id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">User <span class="title">getUserByPk01</span><span class="params">(<span class="keyword">int</span> user_id)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用关联对象方式、select方式代取传统的模式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user_id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">User <span class="title">getUserByPk02</span><span class="params">(<span class="keyword">int</span> user_id)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在SQL语句写连接方式的查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user_id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">User <span class="title">getUserByLeftJoin</span><span class="params">(<span class="keyword">int</span> user_id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RoleDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.Role;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过role_id查询role表信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> role_id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Role <span class="title">getRoleByPk</span><span class="params">(<span class="keyword">int</span> role_id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="12-测试类"><a href="#12-测试类" class="headerlink" title="12.测试类"></a>12.测试类</h3><p>MyBatisTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.RoleDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.model.Role;</span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> com.hs.util.MyBatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接口代理模式实现操作，在xxDao接口中，定义方法：  sql语句返回的结果类型 sql语句的id(要传的值);</span></span><br><span class="line"><span class="comment"> * 不用写实现类，直接写测试类,具体实现见测试类</span></span><br><span class="line"><span class="comment"> * sql的映射文件的命名空间跟接口的全路径一致</span></span><br><span class="line"><span class="comment"> * 可以根据接口的返回类型自动判断使用selectOne还是selectList eg:返回的是一个对象的为one，返回的是list的就是list，如果是List&lt;Bean&gt;，也是list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一对一的三种方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方式一：利用两个SQL语句，先在user查出外键，然后再在role表进行查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getAllByFk01</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">User user = userDao.getUserByPk01(-<span class="number">999</span>);</span><br><span class="line"><span class="comment">//获取对应的外键信息</span></span><br><span class="line"><span class="keyword">if</span> (user.getFk_role_id()!=<span class="keyword">null</span>) &#123;</span><br><span class="line">RoleDao roleDao = sqlSession.getMapper(RoleDao.class);</span><br><span class="line">Role role = roleDao.getRoleByPk(user.getFk_role_id());</span><br><span class="line"><span class="comment">//建立关系</span></span><br><span class="line">user.setRole(role);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(user);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用关联对象方式、select方式代取传统的模式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getAllBySelect</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">User user = userDao.getUserByPk02(-<span class="number">999</span>);</span><br><span class="line">System.out.println(user);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SQL语句连接方式查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByLeftJoin</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">User user = userDao.getUserByLeftJoin(-<span class="number">999</span>);</span><br><span class="line">System.out.println(user);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文讲解，mybatis中一对一、多对一的关联查询，类名的别名方式应用&lt;/p&gt;
    
    </summary>
    
      <category term="MyBatis" scheme="http://heshangcode.coding.me/categories/MyBatis/"/>
    
    
      <category term="MyBatis学习总结" scheme="http://heshangcode.coding.me/tags/MyBatis%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis学习笔记（四）动态SQL语句专题</title>
    <link href="http://heshangcode.coding.me/2018/08/05/MyBatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89%E5%8A%A8%E6%80%81SQL%E8%AF%AD%E5%8F%A5%E4%B8%93%E9%A2%98/"/>
    <id>http://heshangcode.coding.me/2018/08/05/MyBatis学习笔记（四）动态SQL语句专题/</id>
    <published>2018-08-05T10:13:02.000Z</published>
    <updated>2018-08-05T12:46:27.804Z</updated>
    
    <content type="html"><![CDATA[<p>本文讲解动态的SQL操作，CRUD中，CUD都需要自己手动提交事务，动态的添加语句，批量删除的三种处理方式，提取公共的sql代码，if标签，where标签，trim标签，set标签，choose标签，foreach标签，批量添加</p><a id="more"></a><h3 id="1-trim标签"><a href="#1-trim标签" class="headerlink" title="1.trim标签"></a>1.trim标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"当发现有内容的时候,你在内容的最前面想加入什么内容"</span>           </span></span><br><span class="line"><span class="tag"><span class="attr">prefixOverrides</span>=<span class="string">"当发现有内容的时候,你在内容的最前面想抹掉什么内容"</span>            </span></span><br><span class="line"><span class="tag"><span class="attr">suffix</span>=<span class="string">"当发现有内容的时候,你在内容的最后面面想加入什么内容"</span>            </span></span><br><span class="line"><span class="tag"><span class="attr">suffixOverrides</span>=<span class="string">"当发现有内容的时候,你在内容的最后面想抹掉什么内容"</span>&gt;</span>        </span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-set标签"><a href="#2-set标签" class="headerlink" title="2.set标签"></a>2.set标签</h3><p>当你发现有内容的时候,在内容的最前面加入 set 当你放下有内容的时候,检查内容的最后面是否有逗号”,” 如果将其抹掉</p><h3 id="3-where标签"><a href="#3-where标签" class="headerlink" title="3.where标签"></a>3.where标签</h3><ul><li>如果发现标签內有内容,那么会在内容的最前面加入关键字 where</li><li>如果有内容,会检查内容的最前面是否含有 AND空格 或者 OR空格 ,自动将其抹掉</li></ul><h3 id="4-foreach标签"><a href="#4-foreach标签" class="headerlink" title="4.foreach标签"></a>4.foreach标签</h3><ul><li>如果只传了一个数组或者一个集合  collection=”array 或者 list”</li><li>如果传的是一个Map里装了list 就写map的key，如果是对象里setList，就写对象的list属性,这个属性就对应一个集合</li><li>item相当于，他的遍历的一个值，open=”开始加入” close=”最后加入” separator=”以什么间隔”–&gt;</li></ul><h3 id="4-choose标签类似java中的switch"><a href="#4-choose标签类似java中的switch" class="headerlink" title="4.choose标签类似java中的switch"></a>4.choose标签类似java中的switch</h3><h3 id="5-代码结构"><a href="#5-代码结构" class="headerlink" title="5.代码结构"></a>5.代码结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1ftz0m4gfqpj20b80fb78x.jpg" alt=""></p><h3 id="6-数据库配置文件"><a href="#6-数据库配置文件" class="headerlink" title="6.数据库配置文件"></a>6.数据库配置文件</h3><p>同前几天笔记</p><h3 id="7-核心配置文件"><a href="#7-核心配置文件" class="headerlink" title="7.核心配置文件"></a>7.核心配置文件</h3><p>mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--加载属性文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义设置类型的别名，也就是resultMap里的type，避免包名已修改，在映射文件里修改多处地方--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 方式一、com.hs.model.Skill这个类设置了别名hs，之后要用这个的话，直接写hs --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;typeAlias type="com.hs.model.Skill" alias="hs"/&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 方式二、com.hs.model这个包下的类，要用的时候直接写类名，比如用com.hs.model.Skill，直接写Skill --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.hs.model"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置数据库的环境--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--事务管理器:保证数据的完整性和一致性   关键信息  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--框架：默认情况下CUD操作需要  手动提交事务</span></span><br><span class="line"><span class="comment">（如同在Navicat中表中输入了数据，没有点那个小√，就是没有提交事务，</span></span><br><span class="line"><span class="comment">但是输入insert语句，就自动提交事务了）  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用的是连接池：百度java如何实行连接池的原理？  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.driver&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.url&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.username&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.password&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--加载映射文件 ，也就是含sql语句的文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--告知映射文件方式1，一个一个的配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/hs/model/UserMapper.xml"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 告知映射文件方式2，自动扫描包内的Mapper接口与配置文件 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;package name="com.hs.model"/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-持久化类"><a href="#8-持久化类" class="headerlink" title="8.持久化类"></a>8.持久化类</h3><p>User.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*本字段名字跟数据库的字段一样*/</span></span><br><span class="line"><span class="keyword">private</span> Integer user_id;</span><br><span class="line"><span class="keyword">private</span> String user_name;</span><br><span class="line"><span class="keyword">private</span> String sex;</span><br><span class="line"><span class="keyword">private</span> Double money;</span><br><span class="line"><span class="keyword">private</span> Date birthday;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getUser_id</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_id</span><span class="params">(Integer user_id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_id = user_id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUser_name</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> user_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser_name</span><span class="params">(String user_name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> sex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.sex = sex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Double <span class="title">getMoney</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> money;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMoney</span><span class="params">(Double money)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.money = money;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">getBirthday</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> birthday;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBirthday</span><span class="params">(Date birthday)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.birthday = birthday;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line"><span class="string">"user_id="</span> + user_id +</span><br><span class="line"><span class="string">", user_name='"</span> + user_name + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", sex='"</span> + sex + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", money="</span> + money +</span><br><span class="line"><span class="string">", birthday="</span> + birthday +</span><br><span class="line"><span class="string">'&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-映射文件"><a href="#9-映射文件" class="headerlink" title="9.映射文件"></a>9.映射文件</h3><p>UserMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace=命名空间，唯一不重复--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.hs.dao.UserDao"</span>&gt;</span><span class="comment">&lt;!--命名空间规则</span></span><br><span class="line"><span class="comment">传统模式：（持久化类（实体化Bean）的类名全路径com.hs.Skill）</span></span><br><span class="line"><span class="comment">接口代理模式：接口的全路径r--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--见帮助文档http://www.mybatis.org/mybatis-3/zh/dynamic-sql.html--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMap"</span> <span class="attr">type</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"user_id"</span> <span class="attr">property</span>=<span class="string">"user_id"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"user_name"</span> <span class="attr">property</span>=<span class="string">"user_name"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">property</span>=<span class="string">"sex"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"money"</span> <span class="attr">property</span>=<span class="string">"money"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"birthday"</span> <span class="attr">property</span>=<span class="string">"birthday"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--提取公共的SQL代码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"oa_user_columns"</span>&gt;</span></span><br><span class="line">user_id,user_name,sex,money,birthday</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--别名方式的SQL代码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"oa_user_columns_alias"</span>&gt;</span></span><br><span class="line">$&#123;alias&#125;.user_id,$&#123;alias&#125;.user_name,$&#123;alias&#125;.sex,$&#123;alias&#125;.money,$&#123;alias&#125;.birthday</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- A.通过恒等式完成动态SQL语句 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserListIf01"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">select</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"oa_user_columns"</span>/&gt;</span></span><br><span class="line">from</span><br><span class="line">oa_user</span><br><span class="line">where 1=1  <span class="comment">&lt;!-- 恒等式 ，但是影响效率--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null &amp;amp;&amp;amp; name != ''"</span>&gt;</span></span><br><span class="line">and user_name like concat('%',#&#123;name&#125;,'%')</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null and sex != ''"</span>&gt;</span></span><br><span class="line">and sex = #&#123;sex&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span>          <span class="comment">&lt;!-- 这个if里没有&amp;&amp;,只有&amp;amp;&amp;amp;或者and表示，||也只有or表示--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- B.通过where标签完成动态SQL语句，没有1=1 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserListIf02"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">select</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"oa_user_columns"</span>/&gt;</span></span><br><span class="line">from</span><br><span class="line">oa_user</span><br><span class="line"><span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null &amp;amp;&amp;amp; name != ''"</span>&gt;</span></span><br><span class="line">and user_name like concat('%',#&#123;name&#125;,'%')</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null and sex != ''"</span>&gt;</span></span><br><span class="line">and sex = #&#123;sex&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span>          <span class="comment">&lt;!-- 这个if里没有&amp;&amp;,只有&amp;amp;&amp;amp;或者and表示，||也只有or表示--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- C.trim标签实现&lt;trim</span></span><br><span class="line"><span class="comment"> prefix="当发现有内容的时候,你在内容的最前面想加入什么内容"</span></span><br><span class="line"><span class="comment"> prefixOverrides="当发现有内容的时候,你在内容的最前面想抹掉什么内容"</span></span><br><span class="line"><span class="comment"> suffix="当发现有内容的时候,你在内容的最后面面想加入什么内容"</span></span><br><span class="line"><span class="comment"> suffixOverrides="当发现有内容的时候,你在内容的最后面想抹掉什么内容" --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserListIf03"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">select</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"oa_user_columns"</span>/&gt;</span></span><br><span class="line">from</span><br><span class="line">oa_user</span><br><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"where "</span> <span class="attr">prefixOverrides</span>=<span class="string">"and || or"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null &amp;amp;&amp;amp; name != ''"</span>&gt;</span></span><br><span class="line">and user_name like concat('%',#&#123;name&#125;,'%')</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null and sex != ''"</span>&gt;</span></span><br><span class="line">and sex = #&#123;sex&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span>          <span class="comment">&lt;!-- 见xml转义字符 这个if里没有&amp;&amp;,只有&amp;amp;&amp;amp;或者and表示，||也只有or表示--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--利用set标签</span></span><br><span class="line"><span class="comment">当你发现有内容的时候,在内容的最前面加入 set</span></span><br><span class="line"><span class="comment">当你发现有内容的时候,检查内容的最后面是否有逗号"," 如果有将其抹掉</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUser01ByPk"</span> <span class="attr">parameterType</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">update oa_user</span><br><span class="line"><span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"user_name !=null and user_name != ''"</span>&gt;</span></span><br><span class="line">user_name = #&#123;user_name&#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex !=null and sex != ''"</span>&gt;</span></span><br><span class="line">sex = #&#123;sex&#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"money != null"</span>&gt;</span> <span class="comment">&lt;!--不是字符串就不要判断是否为空 ='' --&gt;</span></span><br><span class="line">money = #&#123;money&#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">where user_id = #&#123;user_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--利用trim标签，，，，但是不推荐</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUser02ByPk"</span> <span class="attr">parameterType</span>=<span class="string">"com.hs.model.User"</span>&gt;</span></span><br><span class="line">update oa_user</span><br><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"set"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"user_name !=null and user_name != ''"</span>&gt;</span></span><br><span class="line">user_name = #&#123;user_name&#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex !=null and sex != ''"</span>&gt;</span></span><br><span class="line">sex = #&#123;sex&#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"money != null"</span>&gt;</span> <span class="comment">&lt;!--不是字符串就不要判断是否为空 ='' --&gt;</span></span><br><span class="line">money = #&#123;money&#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">where user_id = #&#123;user_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--利用choose标签，类似switch--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getSkillByChoose"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">select <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"oa_user_columns"</span>/&gt;</span></span><br><span class="line">from oa_user</span><br><span class="line">where</span><br><span class="line"><span class="tag">&lt;<span class="name">choose</span>&gt;</span><span class="comment">&lt;!--注意单双引号,when里test='' --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">'sex!=null and sex=="男"'</span>&gt;</span></span><br><span class="line">money &gt; 700</span><br><span class="line"><span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;when test='sex!=null and sex=="女"'&gt;</span></span><br><span class="line"><span class="comment">money &amp;lt;= 700   &amp;lt;!&amp;ndash;见xml转义字符 小于号(因为小于号&lt;是标签的开头)的解决问题，或者这样写 &amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">&lt;/when&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">'sex!=null and sex="女"'</span>&gt;</span></span><br><span class="line">&lt;![CDATA[</span><br><span class="line">money &lt;= 700</span><br><span class="line">]]&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">when</span>&gt;</span>  <span class="comment">&lt;!--里面不能包含标签，把&lt;，不当做标签的开头 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">otherwise</span>&gt;</span>   <span class="comment">&lt;!--switch中的default--&gt;</span></span><br><span class="line">1=1</span><br><span class="line"><span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--后面两个属性，前者可以不用写，后者是使用该属性，接收这个新添加的数据的主键--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addSkill01"</span> <span class="attr">parameterType</span>=<span class="string">"com.hs.model.User"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyProperty</span>=<span class="string">"user_id"</span>&gt;</span></span><br><span class="line">insert into oa_user</span><br><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"("</span> <span class="attr">suffix</span>=<span class="string">")"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"user_name !=null and user_name!=''"</span>&gt;</span></span><br><span class="line">user_name,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex !=null and sex!=''"</span>&gt;</span></span><br><span class="line">sex,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"money !=null"</span>&gt;</span></span><br><span class="line">money,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"birthday !=null"</span>&gt;</span></span><br><span class="line">birthday,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"values("</span> <span class="attr">suffix</span>=<span class="string">")"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"user_name !=null and user_name!=''"</span>&gt;</span></span><br><span class="line">#&#123;user_name&#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex !=null and sex!=''"</span>&gt;</span></span><br><span class="line">#&#123;sex&#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"money !=null"</span>&gt;</span></span><br><span class="line">#&#123;money&#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"birthday !=null"</span>&gt;</span></span><br><span class="line">#&#123;birthday&#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--数组删除，如果数组的话，请不要去设置parameterType,让其自动识别  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteSkillByArray"</span> &gt;</span></span><br><span class="line">delete from oa_user where user_id in</span><br><span class="line"><span class="comment">&lt;!--对数组进行遍历，</span></span><br><span class="line"><span class="comment">如果只传了一个数组或者一个集合  collection="array 或者 list</span></span><br><span class="line"><span class="comment">如果传的是一个Map里装了list 就写map的key，如果是对象里setList，就写对象的list属性,这个属性就对应一个集合</span></span><br><span class="line"><span class="comment">item相当于，他的遍历的一个值，open="开始加入" close="最后加入" separator="以什么间隔"--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"array"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--List集合删除 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteSkillByList"</span> <span class="attr">parameterType</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">delete from oa_user where user_id in</span><br><span class="line"><span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteSkillByMap"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">delete from oa_user where user_id in</span><br><span class="line"><span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"id_array"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span>  <span class="comment">&lt;!-- 等于遍历，id_array对应一个list，item就是这个list里的值  --&gt;</span></span><br><span class="line">#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--批量添加--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addSkillByAll"</span> <span class="attr">parameterType</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">insert into oa_user(user_name,sex,money)</span><br><span class="line">values</span><br><span class="line"><span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">item</span>=<span class="string">"user"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">(#&#123;user.user_name&#125;,#&#123;user.sex&#125;,#&#123;user.money&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="10-封装好的工具类"><a href="#10-封装好的工具类" class="headerlink" title="10.封装好的工具类"></a>10.封装好的工具类</h3><p>同之前的笔记</p><h3 id="11-接口"><a href="#11-接口" class="headerlink" title="11.接口"></a>11.接口</h3><p>UserDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUserListIf01</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUserListIf02</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUserListIf03</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateUser01ByPk</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateUser02ByPk</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getSkillByChoose</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addSkill01</span><span class="params">(User user)</span></span>;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteSkillByArray</span><span class="params">(<span class="keyword">int</span>[] array)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteSkillByList</span><span class="params">(List&lt;Integer&gt; list)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteSkillByMap</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addSkillByAll</span><span class="params">(List&lt;User&gt; list)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="12-日志框架配置"><a href="#12-日志框架配置" class="headerlink" title="12.日志框架配置"></a>12.日志框架配置</h3><p>log4j.properties.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 日志配置文件Global logging configuration</span><br><span class="line">log4j.rootLogger=ERROR, stdout</span><br><span class="line"># MyBatis logging configuration...</span><br><span class="line"># 如果要显示SQL语句，那么这个位置需要配置为命名空间log4j.logger.命名空间</span><br><span class="line">log4j.logger.com.hs.dao.UserDao=TRACE</span><br><span class="line"># Console output...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br></pre></td></tr></table></figure><h3 id="13-测试类"><a href="#13-测试类" class="headerlink" title="13.测试类"></a>13.测试类</h3><p>MyBatisTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.model.User;</span><br><span class="line"><span class="keyword">import</span> com.hs.util.MyBatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接口代理模式实现操作，在xxDao接口中，定义方法：  sql语句返回的结果类型 sql语句的id(要传的值);</span></span><br><span class="line"><span class="comment"> * 不用写实现类，直接写测试类,具体实现见测试类</span></span><br><span class="line"><span class="comment"> * sql的映射文件的命名空间跟接口的全路径一致</span></span><br><span class="line"><span class="comment"> * 可以根据接口的返回类型自动判断使用selectOne还是selectList eg:返回的是一个对象的为one，返回的是list的就是list，如果是List&lt;Bean&gt;，也是list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * if标签，进行两个姓名和性别的条件查询，通过恒等式完成动态SQL语句</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserListIf01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">"name"</span>, <span class="string">"悟"</span>);</span><br><span class="line">map.put(<span class="string">"sex"</span>, <span class="string">"男"</span>);</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">System.out.println(userDao.getUserListIf01(map));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * if标签，进行两个姓名和性别的条件查询，通过where标签（推荐！！！）：</span></span><br><span class="line"><span class="comment"> * 如果发现标签內有内容,那么会在内容的最前面加入关键字 where</span></span><br><span class="line"><span class="comment"> * 如果有内容,会检查内容的最前面是否含有 AND空格 或者 OR空格 ,自动将其抹</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserListIf02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">"name"</span>, <span class="string">"悟"</span>);</span><br><span class="line">map.put(<span class="string">"sex"</span>, <span class="string">"男"</span>);</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">System.out.println(userDao.getUserListIf02(map));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * if标签，进行两个姓名和性别的条件查询，通过trim标签：</span></span><br><span class="line"><span class="comment"> * &lt;trim</span></span><br><span class="line"><span class="comment"> * prefix="当发现有内容的时候,你在内容的最前面想加入什么内容"</span></span><br><span class="line"><span class="comment"> * prefixOverrides="当发现有内容的时候,你在内容的最前面想抹掉什么内容"</span></span><br><span class="line"><span class="comment"> * suffix="当发现有内容的时候,你在内容的最后面面想加入什么内容"</span></span><br><span class="line"><span class="comment"> * suffixOverrides="当发现有内容的时候,你在内容的最后面想抹掉什么内容"</span></span><br><span class="line"><span class="comment"> * &gt;      &lt;/trim&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserListIf03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">"name"</span>, <span class="string">"悟"</span>);</span><br><span class="line">map.put(<span class="string">"sex"</span>, <span class="string">"男"</span>);</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">System.out.println(userDao.getUserListIf03(map));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新操作—变更数据库</span></span><br><span class="line"><span class="comment"> * 利用set标签</span></span><br><span class="line"><span class="comment"> * 当你发现有内容的时候,在内容的最前面加入 set</span></span><br><span class="line"><span class="comment"> * 当你发现有内容的时候,检查内容的最后面是否有逗号"," 如果有将其抹掉</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateUser01ByPk</span><span class="params">()</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line"><span class="comment">//数据</span></span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setUser_id(<span class="number">3</span>);</span><br><span class="line">user.setUser_name(<span class="string">"天蓬元帅"</span>);</span><br><span class="line"><span class="comment">//日期的转换</span></span><br><span class="line">String date = <span class="string">"2018-8-3"</span>;</span><br><span class="line">DateFormat dateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">user.setBirthday(dateFormat.parse(date));</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">System.out.println(userDao.updateUser01ByPk(user));</span><br><span class="line"></span><br><span class="line"><span class="comment">//重点！！！，CRUD中，除了R（查询），不用提交事务，其余全的自己提交事务，传统和接口模式提交事务都是一样的</span></span><br><span class="line">sqlSession.commit();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">ex.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新操作—变更数据库</span></span><br><span class="line"><span class="comment"> * 利用trim标签</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ParseException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateUser02ByPk</span><span class="params">()</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line"><span class="comment">//数据</span></span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setUser_id(<span class="number">3</span>);</span><br><span class="line">user.setUser_name(<span class="string">"天蓬元帅"</span>);</span><br><span class="line">user.setMoney(<span class="number">1000.0</span>);</span><br><span class="line"><span class="comment">//日期的转换</span></span><br><span class="line">String date = <span class="string">"2018-8-3"</span>;</span><br><span class="line">DateFormat dateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">user.setBirthday(dateFormat.parse(date));</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">System.out.println(userDao.updateUser02ByPk(user));</span><br><span class="line"><span class="comment">//重点！！！，CRUD中，除了R（查询），不用提交事务，其余全的自己提交事务，传统和接口模式提交事务都是一样的</span></span><br><span class="line">sqlSession.commit();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">ex.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询通过choose标签</span></span><br><span class="line"><span class="comment"> * 解决小于号的问题</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getSkillByChoose</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">"sex"</span>, <span class="string">"女"</span>);</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">System.out.println(userDao.getSkillByChoose(map));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加一个数据，然后返回这个数据自增长的主键信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addSkill01</span><span class="params">()</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setUser_name(<span class="string">"沙僧"</span>);</span><br><span class="line">user.setSex(<span class="string">"男"</span>);</span><br><span class="line">user.setMoney(<span class="number">455.0</span>);</span><br><span class="line">String date = <span class="string">"2018-8-5"</span>;</span><br><span class="line">DateFormat dateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">user.setBirthday(dateFormat.parse(date));</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">System.out.println(<span class="string">"影响行数"</span>+userDao.addSkill01(user));</span><br><span class="line">sqlSession.commit();</span><br><span class="line">System.out.println(<span class="string">"user_id:"</span>+user.getUser_id());</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传递传递数组删除规则</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteSkillByArray</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">System.out.println(userDao.deleteSkillByArray(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">6</span>,<span class="number">8</span>&#125;));  <span class="comment">//静态初始化</span></span><br><span class="line"><span class="comment">//事务的手动提交</span></span><br><span class="line">sqlSession.commit();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传递List集合删除规则</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteSkillByList</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">list.add(<span class="number">9</span>);</span><br><span class="line">list.add(<span class="number">11</span>);</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">System.out.println(userDao.deleteSkillByList(list));</span><br><span class="line"><span class="comment">//事务的手动提交</span></span><br><span class="line">sqlSession.commit();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传递Map里装list删除规则</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteSkillByMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">list.add(<span class="number">8</span>);</span><br><span class="line">list.add(<span class="number">10</span>);</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">"id_array"</span>,list);</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">System.out.println(userDao.deleteSkillByMap(map));</span><br><span class="line"><span class="comment">//事务的手动提交</span></span><br><span class="line">sqlSession.commit();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过list里装User实现批量添加</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addSkillByAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;User&gt;();</span><br><span class="line">User user1 = <span class="keyword">new</span> User();</span><br><span class="line">user1.setUser_name(<span class="string">"嫦娥"</span>);</span><br><span class="line">user1.setSex(<span class="string">"女"</span>);</span><br><span class="line">user1.setMoney(<span class="number">1213.0</span>);</span><br><span class="line">User user2 = <span class="keyword">new</span> User();</span><br><span class="line">user2.setUser_name(<span class="string">"月兔"</span>);</span><br><span class="line">user2.setSex(<span class="string">"女"</span>);</span><br><span class="line">user2.setMoney(<span class="number">2113.0</span>);</span><br><span class="line">list.add(user1);</span><br><span class="line">list.add(user2);</span><br><span class="line">UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">System.out.println(userDao.addSkillByAll(list));</span><br><span class="line">sqlSession.commit();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文讲解动态的SQL操作，CRUD中，CUD都需要自己手动提交事务，动态的添加语句，批量删除的三种处理方式，提取公共的sql代码，if标签，where标签，trim标签，set标签，choose标签，foreach标签，批量添加&lt;/p&gt;
    
    </summary>
    
      <category term="MyBatis" scheme="http://heshangcode.coding.me/categories/MyBatis/"/>
    
    
      <category term="MyBatis学习总结" scheme="http://heshangcode.coding.me/tags/MyBatis%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis学习笔记（三）模糊查询专题</title>
    <link href="http://heshangcode.coding.me/2018/08/05/MyBatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%E4%B8%93%E9%A2%98/"/>
    <id>http://heshangcode.coding.me/2018/08/05/MyBatis学习笔记（三）模糊查询专题/</id>
    <published>2018-08-05T05:33:40.000Z</published>
    <updated>2018-08-06T08:07:28.188Z</updated>
    
    <content type="html"><![CDATA[<p>本文讲解，用接口代理模式实现mybatis的模糊查询，讲解#{}和${}两个的区别，XML文件中五个特殊字符串不允许使用，小于号的解决问题。</p><a id="more"></a><h3 id="1-关于接口代理模式和传统模式的区别"><a href="#1-关于接口代理模式和传统模式的区别" class="headerlink" title="1.关于接口代理模式和传统模式的区别"></a>1.关于接口代理模式和传统模式的区别</h3><ul><li><p>传统模式：在笔记（二）就是采用的这个模式：</p><ol><li>需要写接口，接口实现类，测试类，</li><li>映射文件命名空间为持久化类的全路径</li></ol></li><li><p>接口代理模式：本笔记之后所有采用这个模式：</p><ol><li><p>只需要写接口，在测试类中调用，接口编程: 什么是接口? 简单理解:接口就是定义规范</p></li><li><p>接口返回类型跟你设置的resultMap或者resultType对应上即可,但是会根据你返回的类型完成selectone或者selectList操作</p></li><li><p>接口里方法如何写：sql语句返回的结果集类型  sql语句的id(要传的值);</p><ul><li><p>eg:List<skill> getSkillLike02(String name);</skill></p><p>List<skill>为SQL语句返回的结果集类型，getSkillLike02为映射文件中SQL语句的id，String name是传给映射文件的值</skill></p></li></ul></li><li><p>映射文件命名空间为接口的全路径</p></li><li><p>可以根据接口的返回类型自动判断使用selectOne还是selectList </p><ul><li>eg:返回的是一个对象的为one，返回的是list的就是List，如果是List<bean>，也是List</bean></li></ul></li></ol></li></ul><h3 id="2-MyBatis框架中获取数据的形式有两种方案-和-的区别"><a href="#2-MyBatis框架中获取数据的形式有两种方案-和-的区别" class="headerlink" title="2.MyBatis框架中获取数据的形式有两种方案 #{}和${}的区别?"></a>2.MyBatis框架中获取数据的形式有两种方案 #{}和${}的区别?</h3><ul><li>#{}<ul><li>取值：<ul><li>方案一： 如果你是一个简单的数据类型,那么我们使用#{任意标识符}</li><li>方案二: 对象或者Map #{属性或者KEY}</li><li>如果使用#{}那么它的模式方式为预处理模式</li></ul></li></ul></li><li>${}<ul><li>你需要必须指明KEY或者属性</li><li>对数据不会进行转义</li><li>直接拼接到SQL语句上</li></ul></li></ul><h3 id="3-XML文件中有五个特殊字符串不允许使用"><a href="#3-XML文件中有五个特殊字符串不允许使用" class="headerlink" title="3.XML文件中有五个特殊字符串不允许使用"></a>3.XML文件中有五个特殊字符串不允许使用</h3><ol><li><p>方法一：用了转义字符把&gt;和&lt;替换掉，然后就没有问题了。</p><p>附:XML转义字符</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1ftywra5q0bj20p606emxa.jpg" alt=""></p></li><li><p>方法二：</p></li></ol><p>因为这个是xml格式的，所以不允许出现类似“&gt;”这样的字符，但是都可以使用&lt;![CDATA[  内容  ]]&gt;符号进行说明，将此类符号不进行解析</p><h3 id="4-代码结构"><a href="#4-代码结构" class="headerlink" title="4.代码结构"></a>4.代码结构</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1ftyyubmyd5j20eg0e8441.jpg" alt=""></p><h3 id="5-数据库属性文件"><a href="#5-数据库属性文件" class="headerlink" title="5.数据库属性文件"></a>5.数据库属性文件</h3><p>jdbc.properties</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.mysql.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.mysql.url=jdbc:mysql:<span class="comment">//localhost:3306/cy42_mss</span></span><br><span class="line">jdbc.mysql.username=root</span><br><span class="line">jdbc.mysql.password=root</span><br></pre></td></tr></table></figure><h3 id="6-核心配置文件"><a href="#6-核心配置文件" class="headerlink" title="6.核心配置文件"></a>6.核心配置文件</h3><p>mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--加载属性文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义设置类型的别名，也就是resultMap里的type，避免包名已修改，在映射文件里修改多处地方--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 方式一、com.hs.model.Skill这个类设置了别名hs，之后要用这个的话，直接写hs --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;typeAlias type="com.hs.model.Skill" alias="hs"/&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 方式二、com.hs.model这个包下的类，要用的时候直接写类名，比如用com.hs.model.Skill，直接写Skill --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.hs.model"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置数据库的环境--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--事务管理器:保证数据的完整性和一致性   关键信息  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--框架：默认情况下CUD操作需要  手动提交事务</span></span><br><span class="line"><span class="comment">（如同在Navicat中表中输入了数据，没有点那个小√，就是没有提交事务，</span></span><br><span class="line"><span class="comment">但是输入insert语句，就自动提交事务了）  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用的是连接池：百度java如何实行连接池的原理？  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.driver&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.url&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.username&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.password&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--加载映射文件 ，也就是含sql语句的文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--告知映射文件方式1，一个一个的配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/hs/model/SkillMapper.xml"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 告知映射文件方式2，自动扫描包内的Mapper接口与配置文件 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;package name="com.hs.model"/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-接口代码"><a href="#7-接口代码" class="headerlink" title="7.接口代码"></a>7.接口代码</h3><p>SkillDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接口代理模式实现操作，在xxDao接口中，定义方法：  sql语句返回的结果类型 sql语句的id(要传的值);</span></span><br><span class="line"><span class="comment"> * 不用写实现类，直接写测试类,具体实现见测试类</span></span><br><span class="line"><span class="comment"> * sql的映射文件的命名空间跟接口的全路径一致</span></span><br><span class="line"><span class="comment"> * 可以根据接口的返回类型自动判断使用selectOne还是selectList eg:返回的是一个对象的为one，返回的是list的就是list，如果是List&lt;Bean&gt;，也是list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> com.hs.model.Skill;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SkillDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function">List&lt;Skill&gt; <span class="title">getSkillLike01</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">List&lt;Skill&gt; <span class="title">getSkillLike02</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">List&lt;Skill&gt; <span class="title">getSkillLike03</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">List&lt;Skill&gt; <span class="title">getSkillLike04</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">List&lt;Skill&gt; <span class="title">getSkillLike05</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-持久化类"><a href="#8-持久化类" class="headerlink" title="8.持久化类"></a>8.持久化类</h3><p>Skill.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Skill</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Integer skillid;</span><br><span class="line"><span class="keyword">private</span> String skillname;</span><br><span class="line"><span class="keyword">private</span> Integer num;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getSkillid</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> skillid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSkillid</span><span class="params">(Integer skillid)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.skillid = skillid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSkillname</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> skillname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSkillname</span><span class="params">(String skillname)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.skillname = skillname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNum</span><span class="params">(Integer num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.num = num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Skill&#123;"</span> +</span><br><span class="line"><span class="string">"skillid="</span> + skillid +</span><br><span class="line"><span class="string">", skillname='"</span> + skillname + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", num="</span> + num +</span><br><span class="line"><span class="string">'&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-映射文件"><a href="#9-映射文件" class="headerlink" title="9.映射文件"></a>9.映射文件</h3><p>SkillMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace=命名空间，唯一不重复--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.hs.dao.SkillDao"</span>&gt;</span>  <span class="comment">&lt;!--命名空间规则</span></span><br><span class="line"><span class="comment">传统模式：（持久化类（实体化Bean）的类名全路径com.hs.Skill）</span></span><br><span class="line"><span class="comment">接口代理模式：接口的全路径--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMap"</span> <span class="attr">type</span>=<span class="string">"com.hs.model.Skill"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"skill_id"</span> <span class="attr">property</span>=<span class="string">"skillid"</span>/&gt;</span>    <span class="comment">&lt;!--若有主键，主键用id标签，其余用result标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"skill_name"</span> <span class="attr">property</span>=<span class="string">"skillname"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"num"</span> <span class="attr">property</span>=<span class="string">"num"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--1.模糊条件查询是固定的，写死在sql语句里了--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getSkillLike01"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">select skill_id,skill_name,num from skill where skill_name like '%s%'</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--2.模糊条件是一个简单的数据类型</span></span><br><span class="line"><span class="comment">当你传递的为一个简单的数据类型，那么我们可以通过#&#123;任意写&#125;进行传值，  #&#123;xx&#125;是一种预处理模式，先sql语句里是？</span></span><br><span class="line"><span class="comment">然后接收到值了，再写进去,会给你默认加   '',即为'#&#123;&#125;'</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--A、通过java代码拼接字符串--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getSkillLike02"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">select skill_id,skill_name,num from skill where skill_name like #&#123;name&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--B、通过SQL语句函数拼接字符串 concat函数指字符串拼接，--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getSkillLike03"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">select skill_id,skill_name,num from skill where skill_name like concat('%',#&#123;name&#125;,'%')</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--C、通过$&#123;&#125;完成模糊查询！！！但是不太推荐，$&#123;&#125;不会默认加 '' ，也不是预处理模式，是直接在把值写在了sql语句中，</span></span><br><span class="line"><span class="comment">一般用于order by $&#123;key或者属性&#125;,一般只接受map或者对象</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getSkillLike04"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">select skill_id,skill_name,num from skill where skill_name like concat('%','$&#123;name&#125;','%')</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--$&#123;&#125;的应用，排序--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getSkillLike05"</span> <span class="attr">parameterType</span>=<span class="string">"map"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">select * from skill order by skill_id $&#123;fs&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="10-封装好的工具类"><a href="#10-封装好的工具类" class="headerlink" title="10.封装好的工具类"></a>10.封装好的工具类</h3><p>MyBatis.java</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package com.hs.util;</span><br><span class="line">/**</span><br><span class="line"> * 知识点：</span><br><span class="line"> * final修饰类：不能被继承</span><br><span class="line"> * 修饰方法：不能被重写</span><br><span class="line"> * 修饰变量：常量不可用变，但如果是对象，对象里的值可以变</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">import org.apache.ibatis.io.Resources;</span><br><span class="line">import org.apache.ibatis.session.SqlSession;</span><br><span class="line">import org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line">import org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line"></span><br><span class="line">public class MyBatisUtils &#123;</span><br><span class="line"></span><br><span class="line">private MyBatisUtils() &#123; &#125;  //不允许实例化</span><br><span class="line"></span><br><span class="line">private static final String PATH = "mybatis-config.xml";</span><br><span class="line">private static InputStream inputStream;</span><br><span class="line">private static SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">static &#123; //1.静态代码块，只是加载一次</span><br><span class="line">try &#123;</span><br><span class="line">inputStream = Resources.getResourceAsStream(PATH);</span><br><span class="line">sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">throw new RuntimeException("加载核心配置文件失败");</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static SqlSession getSqlsession() &#123;</span><br><span class="line">return sqlSessionFactory.openSession();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static void closeSqlSession(SqlSession sqlSession) &#123;</span><br><span class="line">if (sqlSession != null) &#123;</span><br><span class="line">sqlSession.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-日志框架配置"><a href="#11-日志框架配置" class="headerlink" title="11.日志框架配置"></a>11.日志框架配置</h3><p>log4j.properties</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 日志配置文件Global logging configuration</span><br><span class="line">log4j.rootLogger=ERROR, stdout</span><br><span class="line"># MyBatis logging configuration...</span><br><span class="line"># 如果要显示SQL语句，那么这个位置需要配置为命名空间log4j.logger.命名空间</span><br><span class="line">log4j.logger.com.hs.dao.SkillDao=TRACE</span><br><span class="line"># Console output...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%<span class="number">5</span>p [%t] - %m%n</span><br></pre></td></tr></table></figure><h3 id="12-测试类"><a href="#12-测试类" class="headerlink" title="12.测试类"></a>12.测试类</h3><p>MyBatis.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.SkillDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.util.MyBatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接口代理模式实现操作，在xxDao接口中，定义方法：  sql语句返回的结果类型 sql语句的id(要传的值);</span></span><br><span class="line"><span class="comment"> * 不用写实现类，直接写测试类,具体实现见测试类</span></span><br><span class="line"><span class="comment"> * sql的映射文件的命名空间跟接口的全路径一致</span></span><br><span class="line"><span class="comment"> * 可以根据接口的返回类型自动判断使用selectOne还是selectList eg:返回的是一个对象的为one，返回的是list的就是list，如果是List&lt;Bean&gt;，也是list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1.模糊条件查询是固定的，写死在sql语句里了</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getSkillLike01</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line"><span class="comment">//根据xml映射文件，接口创建实现类代理   有点类似传统模式的new UserMapperImpl()</span></span><br><span class="line">SkillDao skillDao = sqlSession.getMapper(SkillDao.class);</span><br><span class="line">System.out.println(skillDao.getSkillLike01());</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 2.通过java代码拼接字符串进行模糊查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getSkillLike02</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">String name = <span class="string">"%a%"</span>;</span><br><span class="line">SkillDao skillDao = sqlSession.getMapper(SkillDao.class);</span><br><span class="line">System.out.println(skillDao.getSkillLike02(name));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 3.通过sql语句函数拼接字符串进行模糊查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getSkillLike03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">String name = <span class="string">"s"</span>;</span><br><span class="line">SkillDao skillDao = sqlSession.getMapper(SkillDao.class);</span><br><span class="line">System.out.println(skillDao.getSkillLike03(name));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 4.通过$&#123;&#125;拼接字符串进行模糊查询</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getSkillLike04</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">"name"</span>, <span class="string">"s"</span>);</span><br><span class="line">SkillDao skillDao = sqlSession.getMapper(SkillDao.class);</span><br><span class="line">System.out.println(skillDao.getSkillLike04(map));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 4.通过$&#123;&#125;进行排序操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getSkillLike05</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">map.put(<span class="string">"fs"</span>, <span class="string">"DESC"</span>);</span><br><span class="line">SkillDao skillDao = sqlSession.getMapper(SkillDao.class);</span><br><span class="line">System.out.println(skillDao.getSkillLike05(map));</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文讲解，用接口代理模式实现mybatis的模糊查询，讲解#{}和${}两个的区别，XML文件中五个特殊字符串不允许使用，小于号的解决问题。&lt;/p&gt;
    
    </summary>
    
      <category term="MyBatis" scheme="http://heshangcode.coding.me/categories/MyBatis/"/>
    
    
      <category term="MyBatis学习总结" scheme="http://heshangcode.coding.me/tags/MyBatis%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis学习笔记（二）CRUD操作（查询操作基础）</title>
    <link href="http://heshangcode.coding.me/2018/08/05/MyBatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89CRUD%E6%93%8D%E4%BD%9C%EF%BC%88%E6%9F%A5%E8%AF%A2%E6%93%8D%E4%BD%9C%E5%9F%BA%E7%A1%80%EF%BC%89/"/>
    <id>http://heshangcode.coding.me/2018/08/05/MyBatis学习笔记（二）CRUD操作（查询操作基础）/</id>
    <published>2018-08-05T04:17:17.000Z</published>
    <updated>2018-08-06T04:35:17.226Z</updated>
    
    <content type="html"><![CDATA[<p>本篇主要讲解查询操作的结果集处理、映射文件里命名空间设置，SQL语句中resultMap，resultType等属性意思、MyBatis的传统和接口代理模式。</p><a id="more"></a><h3 id="1-整体结构目录"><a href="#1-整体结构目录" class="headerlink" title="1.整体结构目录"></a>1.整体结构目录</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1ftypo25zljj20ff0fztfc.jpg" alt=""></p><ul><li>SkillDao.java接口含一些方法</li><li>SkillDaoImpl.java是SkillDao的实现类</li><li>Skill.java是持久化类（实体Bean）</li><li>SkillMapper.xml是Skill持久化类的映射文件（含SQL语句操作等）</li><li>MyBatisTest.java测试类</li><li>jdbc.properties数据库的属性文件</li><li>log4j.properties日志框架配置(在控制台显示sql语句等信息)</li><li>mybatis-config.xml核心配置文件</li></ul><h3 id="2-数据库属性文件"><a href="#2-数据库属性文件" class="headerlink" title="2.数据库属性文件"></a>2.数据库属性文件</h3><p>jdbc.properties</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.mysql.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.mysql.url=jdbc:mysql:<span class="comment">//localhost:3306/cy42_mss</span></span><br><span class="line">jdbc.mysql.username=root</span><br><span class="line">jdbc.mysql.password=root</span><br></pre></td></tr></table></figure><h3 id="3-核心配置文件"><a href="#3-核心配置文件" class="headerlink" title="3.核心配置文件"></a>3.核心配置文件</h3><p>mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--加载属性文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义设置类型的别名，也就是resultMap里的type，避免包名已修改，在映射文件里修改多处地方--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 方式一、com.hs.model.Skill这个类设置了别名hs，之后要用这个的话，直接写hs --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;typeAlias type="com.hs.model.Skill" alias="hs"/&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 方式二、com.hs.model这个包下的类，要用的时候直接写类名，比如用com.hs.model.Skill，直接写Skill --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.hs.model"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置数据库的环境--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--事务管理器:保证数据的完整性和一致性   关键信息  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--框架：默认情况下CUD操作需要  手动提交事务</span></span><br><span class="line"><span class="comment">（如同在Navicat中表中输入了数据，没有点那个小√，就是没有提交事务，</span></span><br><span class="line"><span class="comment">但是输入insert语句，就自动提交事务了）  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis提供了3种数据源类型，分别是：POOLED,UNPOOLED,JNDI --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- POOLED 表示支持JDBC数据源连接池 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- UNPOOLED 表示不支持数据源连接池 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- JNDI 表示支持外部数据源连接池 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用的是连接池：百度java如何实行连接池的原理？  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.driver&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.url&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.username&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.password&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--加载映射文件 ，也就是含sql语句的文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--告知映射文件方式1，一个一个的配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/hs/model/SkillMapper.xml"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 告知映射文件方式2，自动扫描包内的Mapper接口与配置文件 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;package name="com.hs.model"/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-封装好的工具类"><a href="#4-封装好的工具类" class="headerlink" title="4.封装好的工具类"></a>4.封装好的工具类</h3><p>MyBatisUtils.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.util;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 知识点：</span></span><br><span class="line"><span class="comment"> * final修饰类：不能被继承</span></span><br><span class="line"><span class="comment"> * 修饰方法：不能被重写</span></span><br><span class="line"><span class="comment"> * 修饰变量：常量不可用变，但如果是对象，对象里的值可以变</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">MyBatisUtils</span><span class="params">()</span> </span>&#123; &#125;  <span class="comment">//不允许实例化</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PATH = <span class="string">"mybatis-config.xml"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> InputStream inputStream;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123; <span class="comment">//1.静态代码块，只是加载一次</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//输入流 读文件</span></span><br><span class="line"><span class="comment">//1.读取核心配置文件</span></span><br><span class="line">inputStream = Resources.getResourceAsStream(PATH);</span><br><span class="line"><span class="comment">//2.创建SqlSession工厂(SqlSessionFactory)相当于Connection</span></span><br><span class="line">sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"加载核心配置文件失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取sqlsession</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlsession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//3.获取SqlSession 相当于执行SQL语句对象PreparedStament预处理对象</span></span><br><span class="line"><span class="comment">//***** SqlSession完成所有的持久化操作CRUD</span></span><br><span class="line"><span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关闭资源</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> sqlSession</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">closeSqlSession</span><span class="params">(SqlSession sqlSession)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (sqlSession != <span class="keyword">null</span>) &#123;</span><br><span class="line">sqlSession.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-持久化类"><a href="#5-持久化类" class="headerlink" title="5.持久化类"></a>5.持久化类</h3><p>为了讲出来一些知识点，持久化类的属性名没有和数据库的字段名一样，正常应该是一样的</p><p>Skill.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Skill</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Integer skillid;</span><br><span class="line"><span class="keyword">private</span> String skillname;</span><br><span class="line"><span class="keyword">private</span> Integer num;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getSkillid</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> skillid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSkillid</span><span class="params">(Integer skillid)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.skillid = skillid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSkillname</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> skillname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSkillname</span><span class="params">(String skillname)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.skillname = skillname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNum</span><span class="params">(Integer num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.num = num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Skill&#123;"</span> +</span><br><span class="line"><span class="string">"skillid="</span> + skillid +</span><br><span class="line"><span class="string">", skillname='"</span> + skillname + <span class="string">'\''</span> +</span><br><span class="line"><span class="string">", num="</span> + num +</span><br><span class="line"><span class="string">'&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-XML映射文件"><a href="#6-XML映射文件" class="headerlink" title="6.XML映射文件"></a>6.XML映射文件</h3><p>SQL映射文件经常含一些元素</p><ul><li>parameterType—-接收的参数类型，简写方式见<a href="http://www.mybatis.org/mybatis-3/zh/configuration.html" target="_blank" rel="noopener">mybatis官方文档中，别名和映射的类型那块</a></li><li><del>parameterMap没有人用了！！！！！</del></li><li>resultType—-语句执行完毕返回的结果集类型</li><li>resultMap—-语句执行完毕返回的结果集，这是一个标签，找它对应的标签，对这个结果集进行处理，里面的type就是相应的返回类型</li><li>sql—-提取公共的SQL代码</li><li>insert—-映射插入语句</li><li>update—-映射更新语句</li><li>delete—-映射删除语句</li><li>select—-映射查询语句</li></ul><p>SkillMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace=命名空间，唯一不重复--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.hs.model.Skill"</span>&gt;</span> <span class="comment">&lt;!--命名空间规则</span></span><br><span class="line"><span class="comment">传统模式：（持久化类（实体化Bean）的类名全路径com.hs.Skill）</span></span><br><span class="line"><span class="comment">接口代理模式：接口的全路径--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--查询的字段，并没有优化，下个专题进行优化--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--当你传递的是“一个”简单的数据类型的形参的时候，那么你的$&#123;任意名字&#125;,sql语句后面不要加   ;   --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getMap01ByPk"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultType</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">select skill_id,skill_name,num from skill where skill_id = #&#123;sadsa&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getMap02ByPk"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultType</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">select skill_id skillid,skill_name skill_name ,num number from skill where skill_id = #&#123;skill_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--只能对结果集的结果操作进行处理，autoMapping="true"默认映射，默认为true，重写字段名会覆盖默认的，若false就不会映射默认字段（只映射出自己写的别名）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"MapResultMapper"</span> <span class="attr">type</span>=<span class="string">"map"</span> <span class="attr">autoMapping</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"skill_id"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span>   <span class="comment">&lt;!--column为结果集里的字段名，property为自己要映射(变成)的字段名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"skill_name"</span> <span class="attr">property</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"num"</span> <span class="attr">property</span>=<span class="string">"number"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getMap03ByPk"</span> <span class="attr">parameterType</span>=<span class="string">"_int"</span> <span class="attr">resultMap</span>=<span class="string">"MapResultMapper"</span>&gt;</span></span><br><span class="line">select skill_id,skill_name ,num from skill where skill_id = #&#123;skill_id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--1.别名方法，属性和字段名一致，可以完成自动映射--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getSkill01ByPk"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"com.hs.model.Skill"</span>&gt;</span></span><br><span class="line">select skill_id skillid,skill_name skillname,num from skill where skill_id = #&#123;adsa&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--2.resultMap标签找对应id的标签，利用结果集，进行转换，jdbcType和javaType可以不用写，名字见jdbc类型和Java 类型对应http://www.mybatis.org/mybatis-3/zh/configuration.html#typeAliases--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"SkillResultMapper"</span> <span class="attr">type</span>=<span class="string">"com.hs.model.Skill"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"skill_id"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> <span class="attr">property</span>=<span class="string">"skillid"</span> <span class="attr">javaType</span>=<span class="string">"java.lang.Integer"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"skill_name"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"skillname"</span> <span class="attr">javaType</span>=<span class="string">"java.lang.String"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"num"</span> <span class="attr">property</span>=<span class="string">"num"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getSkill02ByPk"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultMap</span>=<span class="string">"SkillResultMapper"</span>&gt;</span></span><br><span class="line">select skill_id,skill_name,num from skill where skill_id = #&#123;adsa&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--一条一条的为map--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getSkillList01ByAll"</span> <span class="attr">resultType</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">select skill_id,skill_name,num from skill</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getSkillList02ByAll"</span> <span class="attr">resultMap</span>=<span class="string">"SkillResultMapper"</span>&gt;</span></span><br><span class="line">select skill_id,skill_name,num from skill</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-接口"><a href="#7-接口" class="headerlink" title="7.接口"></a>7.接口</h3><p>SkillDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.Skill;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SkillDao</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为Map类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> skillid</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Map&lt;String, Object&gt; <span class="title">getMap01ByPk</span><span class="params">(<span class="keyword">int</span> skillid)</span></span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为Map类型—通过给字段取别名方式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> skillid</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Map&lt;String, Object&gt; <span class="title">getMap02ByPk</span><span class="params">(<span class="keyword">int</span> skillid)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为Map类型—通过resultMap标签处理</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> skillid</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Map&lt;String, Object&gt; <span class="title">getMap03ByPk</span><span class="params">(<span class="keyword">int</span> skillid)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为自定义的类Skill—通过给字段取别名方式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> skillid</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Skill <span class="title">getSkill01ByPk</span><span class="params">(<span class="keyword">int</span> skillid)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为自定义的类Skill—resultMap标签处理</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> skillid</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Skill <span class="title">getSkill02ByPk</span><span class="params">(<span class="keyword">int</span> skillid)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为集合（list）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> skillid</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; getSkillList01ByAll();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为集合（list）—通过resultMap</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> skillid</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; getSkillList02ByAll();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-接口实现类"><a href="#8-接口实现类" class="headerlink" title="8.接口实现类"></a>8.接口实现类</h3><p>SkillDaoImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.model.Skill;</span><br><span class="line"><span class="keyword">import</span> com.hs.util.MyBatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SkillDaoImpl</span> <span class="keyword">implements</span> <span class="title">SkillDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 关键步骤：定位执行SQL语句***如何定位 (namespace+"."+id)</span></span><br><span class="line"><span class="comment">* 因为命名空间是Bean的路径，所以下面的   命名空间.sql语句的id    === 类.class.getName()+" ." +id</span></span><br><span class="line"><span class="comment">* 后面就是要传过去的值</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getMap01ByPk</span><span class="params">(<span class="keyword">int</span> skillid)</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line">System.out.println(Skill.class.getName()+<span class="string">"----com.he.model.Skill"</span>);</span><br><span class="line"><span class="comment">//关键步骤</span></span><br><span class="line"><span class="keyword">return</span> sqlSession.selectOne(Skill.class.getName() + <span class="string">".getMap01ByPk"</span>,skillid);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getMap02ByPk</span><span class="params">(<span class="keyword">int</span> skillid)</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line"><span class="keyword">return</span> sqlSession.selectOne(Skill.class.getName() + <span class="string">".getMap02ByPk"</span>,skillid);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getMap03ByPk</span><span class="params">(<span class="keyword">int</span> skillid)</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line"><span class="keyword">return</span> sqlSession.selectOne(Skill.class.getName() + <span class="string">".getMap03ByPk"</span>,skillid);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Skill <span class="title">getSkill01ByPk</span><span class="params">(<span class="keyword">int</span> skillid)</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line"><span class="keyword">return</span> sqlSession.selectOne(Skill.class.getName() + <span class="string">".getSkill01ByPk"</span>,skillid);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Skill <span class="title">getSkill02ByPk</span><span class="params">(<span class="keyword">int</span> skillid)</span> </span>&#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line"><span class="keyword">return</span> sqlSession.selectOne(Skill.class.getName() + <span class="string">".getSkill02ByPk"</span>,skillid);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Map&lt;String, Object&gt;&gt; getSkillList01ByAll() &#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line"><span class="keyword">return</span> sqlSession.selectList(Skill.class.getName() + <span class="string">".getSkillList01ByAll"</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Map&lt;String, Object&gt;&gt; getSkillList02ByAll() &#123;</span><br><span class="line">SqlSession sqlSession = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sqlSession = MyBatisUtils.getSqlsession();</span><br><span class="line"><span class="keyword">return</span> sqlSession.selectList(Skill.class.getName() + <span class="string">".getSkillList02ByAll"</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">MyBatisUtils.closeSqlSession(sqlSession);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-日志配置文件"><a href="#9-日志配置文件" class="headerlink" title="9.日志配置文件"></a>9.日志配置文件</h3><p>log4j.properties</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 日志配置文件Global logging configuration</span><br><span class="line">log4j.rootLogger=ERROR, stdout</span><br><span class="line"># MyBatis logging configuration...</span><br><span class="line"># 如果要显示SQL语句，那么这个位置需要配置为命名空间log4j.logger.命名空间</span><br><span class="line">log4j.logger.com.hs.model.Skill=TRACE</span><br><span class="line"># Console output...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br></pre></td></tr></table></figure><h3 id="10-测试类"><a href="#10-测试类" class="headerlink" title="10.测试类"></a>10.测试类</h3><p>MyBatisTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.test;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本测试全是采用传统模式：dao层里dao接口写方法，daoImpl实现方法，然后写测试类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hs.dao.SkillDao;</span><br><span class="line"><span class="keyword">import</span> com.hs.dao.SkillDaoImpl;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为Map类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getMap01ByPk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SkillDao skillDao = <span class="keyword">new</span> SkillDaoImpl();     <span class="comment">//接口回调（个人理解，父类定义变量SkillDao skillDao，子类实例化）</span></span><br><span class="line">System.out.println(skillDao.getMap01ByPk(<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为Map类型—通过给字段取别名方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getMap02ByPk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SkillDao skillDao = <span class="keyword">new</span> SkillDaoImpl();     <span class="comment">//接口回调（个人理解，父类定义变量SkillDao skillDao，子类实例化）</span></span><br><span class="line">System.out.println(skillDao.getMap02ByPk(<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为Map类型—通过resultMap标签处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getMap03ByPk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SkillDao skillDao = <span class="keyword">new</span> SkillDaoImpl();     <span class="comment">//接口回调（个人理解，父类定义变量SkillDao skillDao，子类实例化）</span></span><br><span class="line">System.out.println(skillDao.getMap03ByPk(<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为自定义的类Skill—通过给字段取别名方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getSkill01ByPk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SkillDao skillDao = <span class="keyword">new</span> SkillDaoImpl();     <span class="comment">//接口回调（个人理解，父类定义变量SkillDao skillDao，子类实例化）</span></span><br><span class="line">System.out.println(skillDao.getSkill01ByPk(<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为自定义的类Skill—resultMap标签处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getSkill02ByPk</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SkillDao skillDao = <span class="keyword">new</span> SkillDaoImpl();     <span class="comment">//接口回调（个人理解，父类定义变量SkillDao skillDao，子类实例化）</span></span><br><span class="line">System.out.println(skillDao.getSkill02ByPk(<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为集合（list）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getSkillList01ByAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SkillDao skillDao = <span class="keyword">new</span> SkillDaoImpl();     <span class="comment">//接口回调（个人理解，父类定义变量SkillDao skillDao，子类实例化）</span></span><br><span class="line">System.out.println(skillDao.getSkillList01ByAll());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理结果集为集合（list）—通过resultMap</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getSkillList02ByAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SkillDao skillDao = <span class="keyword">new</span> SkillDaoImpl();     <span class="comment">//接口回调（个人理解，父类定义变量SkillDao skillDao，子类实例化）</span></span><br><span class="line">System.out.println(skillDao.getSkillList02ByAll());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-在测试类中运行相应的测试"><a href="#11-在测试类中运行相应的测试" class="headerlink" title="11.在测试类中运行相应的测试"></a>11.在测试类中运行相应的测试</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1ftyr5tb5zsg20uw0dtdn5.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇主要讲解查询操作的结果集处理、映射文件里命名空间设置，SQL语句中resultMap，resultType等属性意思、MyBatis的传统和接口代理模式。&lt;/p&gt;
    
    </summary>
    
      <category term="MyBatis" scheme="http://heshangcode.coding.me/categories/MyBatis/"/>
    
    
      <category term="MyBatis学习总结" scheme="http://heshangcode.coding.me/tags/MyBatis%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis学习笔记（一）mybatis介绍、环境搭建</title>
    <link href="http://heshangcode.coding.me/2018/08/04/MyBatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89mybatis%E4%BB%8B%E7%BB%8D%E3%80%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://heshangcode.coding.me/2018/08/04/MyBatis学习笔记（一）mybatis介绍、环境搭建/</id>
    <published>2018-08-04T12:00:10.000Z</published>
    <updated>2018-08-05T04:53:04.867Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要讲什么是框架、如何学习框架、mybatis介绍、如何用idea搭建mybatis的环境(非maven)</p><a id="more"></a> <h1 id="1-什么是框架？"><a href="#1-什么是框架？" class="headerlink" title="1.什么是框架？"></a>1.什么是框架？</h1><p>你可以理解为就是别人写好的工具类，为我们提供一种解决方案，最后为了提高开发效率</p><h1 id="2-为什么学习框架？"><a href="#2-为什么学习框架？" class="headerlink" title="2.为什么学习框架？"></a>2.为什么学习框架？</h1><p>个人：对你底层开发无任何帮助意义，但是如果看源码，可以学到如何设计的</p><p>公司：效益，提高了开发效率</p><h1 id="3-怎么去学习框架？"><a href="#3-怎么去学习框架？" class="headerlink" title="3.怎么去学习框架？"></a>3.怎么去学习框架？</h1><p>需要遵循框架<font color="red"><strong>规则：</strong></font></p><ol><li>找到jar包 class文件（java文件）</li><li>入口：核心配置文件</li><li>通过官方给定的帮助文档，使用其提供API接口</li><li>测试</li></ol><p>在这段时间里，我将学习ssm框架：MyBatis + SpringMvc + Spring</p><p>把它在我学jsp，servlet那段时间学的mvc模式，和我将要学的ssm框架，做一个小小的改动：</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1ftxjez0k6jj211308iq68.jpg" alt=""></p><h1 id="4-MyBatis框架是一个什么框架？"><a href="#4-MyBatis框架是一个什么框架？" class="headerlink" title="4.MyBatis框架是一个什么框架？"></a>4.MyBatis框架是一个什么框架？</h1><p>MyBatis是一个持久层框架</p><ul><li>什么是持久化：<ul><li>狭义：把数据永久性的保存到数据库或者存储器都是持久化</li><li>广义：针对于数据库所有的操作，都是持久化操作<ul><li>Create：增加</li><li>Read：读取查询</li><li>Update：更新</li><li>Delete：删除</li></ul></li></ul></li></ul><p>MyBatis是一个ORM框架：</p><ul><li>Object：对象 java对象</li><li>Relationship：关系（关系型数据库）</li><li>Mapping：映射</li></ul><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1ftxjoa2ln4j20pm0c5gn8.jpg" alt=""></p><h1 id="5-什么是MyBatis？"><a href="#5-什么是MyBatis？" class="headerlink" title="5.什么是MyBatis？"></a>5.什么是MyBatis？</h1><p>MyBatis 是支持<font color="red">定制化 SQL</font>、存储过程以及<font color="red">高级映射</font>的优秀的<font color="red">持久层框架。</font></p><p>MyBatis避免了几乎所有的<font color="red">JDBC代码(1.加载驱动2.获取连接3.执行语句对象4.处理结果集5.关闭资源)</font>和手动设置参数以及<font color="red">获取结果集(ResultSet).</font></p><ul><li>就是之前学习的时候，自己封装的数据Dao，需要自己处理数据转换成自己想要的对象</li></ul><p>MyBatis可以对配置和<font color="red">原生Map使用简单的XML</font>或注解，将<font color="red">接口</font>和<font color="red">Java的POJOs</font>(Plain Old Java Objects,普通的 Java对象)<font color="red">映射成数据库中的记录。</font></p><h1 id="6-idea搭建MyBatis环境（非maven）"><a href="#6-idea搭建MyBatis环境（非maven）" class="headerlink" title="6.idea搭建MyBatis环境（非maven）"></a>6.idea搭建MyBatis环境（非maven）</h1><h4 id="1-所需要的jar包"><a href="#1-所需要的jar包" class="headerlink" title="1).所需要的jar包:"></a>1).所需要的jar包:</h4><ul><li>mybatis-3.4.6.jar        mybatis的包<br> mysql-connector-java-5.1.45-bin.jar        数据库访问<br>  log4j-1.2.17.jar        日志框架包(在控制台显示sql语句信息等)<br>  junit-4.12.jar        单元测试框架<br>  hamcrest-core-1.3.jar        junit-4.12所依赖的包</li><li>都可以在<a href="http://mvnrepository.com/" target="_blank" rel="noopener">maven仓库</a>中搜索下载</li></ul><h4 id="2-创建一个javase-project"><a href="#2-创建一个javase-project" class="headerlink" title="2).创建一个javase project"></a>2).创建一个javase project</h4><h4 id="3-在项目目录下创建一个lib放jar包，然后导入jar包：教程"><a href="#3-在项目目录下创建一个lib放jar包，然后导入jar包：教程" class="headerlink" title="3).在项目目录下创建一个lib放jar包，然后导入jar包：教程"></a>3).在项目目录下创建一个lib放jar包，然后导入jar包：<a href="http://heshangcode.coding.me/2018/08/04/idea%E5%AF%BC%E5%85%A5-%E7%A7%BB%E9%99%A4jar%E5%8C%85%E6%96%B9%E5%BC%8F%EF%BC%88%E4%B8%89%E7%A7%8D%EF%BC%89/">教程</a></h4><h4 id="4-idea中项目结构如下："><a href="#4-idea中项目结构如下：" class="headerlink" title="4).idea中项目结构如下："></a>4).idea中项目结构如下：</h4><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1ftxvvt9m0aj20ac0fxdk7.jpg" alt=""></p><ol><li>lib放jar包</li><li>com.hs.dao放接口，和接口实现类(MyBatis又分为传统模式(需要写接口和接口实现类)和接口代理模式(只需要写接口))</li><li>com.hs.model放持久化类(实体Bean、数据库表对应的对象)、XML映射文件(含SQL语句)</li><li>com.hs.test放测试类</li><li>com.hs.util放封装好的工具类</li><li>jdbc.properties放连接数据库的信息，在mybatis-config.xml中加载</li><li>log4j.properties这是日志框架配置</li><li>mybatis-config.xml核心配置文件</li></ol><h4 id="5-代码内容"><a href="#5-代码内容" class="headerlink" title="5).代码内容"></a>5).代码内容</h4><h5 id="1-创建数据库-含后几篇文章的数据表"><a href="#1-创建数据库-含后几篇文章的数据表" class="headerlink" title="1.创建数据库(含后几篇文章的数据表)"></a>1.创建数据库(含后几篇文章的数据表)</h5><p>cy42_mss.sql</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE IF EXISTS `oa_user`;</span><br><span class="line">CREATE TABLE `oa_user` (</span><br><span class="line">  `user_id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `user_name` varchar(255) DEFAULT NULL,</span><br><span class="line">  `sex` varchar(255) DEFAULT NULL,</span><br><span class="line">  `money` decimal(7,2) DEFAULT NULL,</span><br><span class="line">  `birthday` date DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`user_id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of oa_user</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;1&apos;, &apos;悟空&apos;, &apos;男&apos;, &apos;888.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;2&apos;, &apos;八戒&apos;, &apos;男&apos;, &apos;999.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;3&apos;, &apos;天蓬元帅&apos;, &apos;女&apos;, &apos;1000.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;4&apos;, &apos;悟能&apos;, &apos;男&apos;, &apos;666.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;5&apos;, &apos;法悟法&apos;, &apos;女&apos;, &apos;544.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;6&apos;, &apos;悟&apos;, &apos;女&apos;, &apos;562.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;7&apos;, &apos;悟&apos;, &apos;女&apos;, &apos;562.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;14&apos;, &apos;嫦娥&apos;, &apos;女&apos;, &apos;1213.00&apos;, null);</span><br><span class="line">INSERT INTO `oa_user` VALUES (&apos;15&apos;, &apos;月兔&apos;, &apos;女&apos;, &apos;2113.00&apos;, null);</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for skill</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `skill`;</span><br><span class="line">CREATE TABLE `skill` (</span><br><span class="line">  `skill_id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `skill_name` varchar(255) DEFAULT NULL,</span><br><span class="line">  `num` int(11) DEFAULT NULL,</span><br><span class="line">  `fk_teacher_id` int(11) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`skill_id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of skill</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `skill` VALUES (&apos;2&apos;, &apos;JS&apos;, &apos;75&apos;, null);</span><br><span class="line">INSERT INTO `skill` VALUES (&apos;7&apos;, &apos;CSS&apos;, &apos;66&apos;, null);</span><br><span class="line">INSERT INTO `skill` VALUES (&apos;8&apos;, &apos;java&apos;, &apos;66&apos;, null);</span><br><span class="line">INSERT INTO `skill` VALUES (&apos;9&apos;, &apos;vue&apos;, &apos;56&apos;, &apos;9999&apos;);</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for sys_role</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `sys_role`;</span><br><span class="line">CREATE TABLE `sys_role` (</span><br><span class="line">  `role_id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `role_name` varchar(32) DEFAULT NULL,</span><br><span class="line">  `role_key` varchar(32) DEFAULT NULL,</span><br><span class="line">  `status` int(1) DEFAULT &apos;1&apos; COMMENT &apos;1可用 -1禁用&apos;,</span><br><span class="line">  PRIMARY KEY (`role_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of sys_role</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `sys_role` VALUES (&apos;-100&apos;, &apos;超级管理员&apos;, &apos;ADMIN&apos;, &apos;1&apos;);</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for sys_user</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `sys_user`;</span><br><span class="line">CREATE TABLE `sys_user` (</span><br><span class="line">  `user_id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `account` varchar(32) NOT NULL,</span><br><span class="line">  `password` varchar(128) NOT NULL,</span><br><span class="line">  `user_name` varchar(32) DEFAULT &apos;&apos;,</span><br><span class="line">  `status` int(1) NOT NULL DEFAULT &apos;1&apos; COMMENT &apos;1可用 -1删除  2禁用&apos;,</span><br><span class="line">  `login_time` datetime DEFAULT CURRENT_TIMESTAMP,</span><br><span class="line">  `ip` varchar(128) DEFAULT NULL,</span><br><span class="line">  `fk_role_id` int(11) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`user_id`),</span><br><span class="line">  KEY `fk_role_id` (`fk_role_id`),</span><br><span class="line">  CONSTRAINT `sys_user_ibfk_1` FOREIGN KEY (`fk_role_id`) REFERENCES `sys_role` (`role_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of sys_user</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `sys_user` VALUES (&apos;-999&apos;, &apos;super&apos;, &apos;super&apos;, &apos;唐僧&apos;, &apos;1&apos;, &apos;2018-07-28 18:47:39&apos;, null, &apos;-100&apos;);</span><br><span class="line">INSERT INTO `sys_user` VALUES (&apos;-888&apos;, &apos;admin&apos;, &apos;admin&apos;, &apos;悟空&apos;, &apos;1&apos;, &apos;2018-07-03 18:48:21&apos;, null, &apos;-100&apos;);</span><br></pre></td></tr></table></figure><h5 id="2-数据库属性文件"><a href="#2-数据库属性文件" class="headerlink" title="2.数据库属性文件"></a>2.数据库属性文件</h5><p>为了解决中文乱码问题：</p><ol><li>自己的mysql编码要设置成utf-8或utf8mb4</li><li>如果mysql编码没有设置以上的，需要再url后面加?useUnicode=true&amp;characterEncoding=UTF-8 </li></ol><p>jdbc.properties</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.mysql.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.mysql.url=jdbc:mysql://localhost:3306/cy42_mss?useUnicode=true&amp;characterEncoding=UTF-8</span><br><span class="line">jdbc.mysql.username=root</span><br><span class="line">jdbc.mysql.password=root</span><br></pre></td></tr></table></figure><h5 id="3-核心配置文件"><a href="#3-核心配置文件" class="headerlink" title="3.核心配置文件"></a>3.核心配置文件</h5><p>mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--加载属性文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义设置类型的别名，也就是resultMap里的type，避免包名已修改，在映射文件里修改多处地方--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 方式一、com.hs.model.Skill这个类设置了别名hs，之后要用这个的话，直接写hs --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;typeAlias type="com.hs.model.Skill" alias="hs"/&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 方式二、com.hs.model这个包下的类，要用的时候直接写类名，比如用com.hs.model.Skill，直接写Skill --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.hs.model"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置数据库的环境--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--事务管理器:保证数据的完整性和一致性   关键信息  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--框架：默认情况下CUD操作需要  手动提交事务</span></span><br><span class="line"><span class="comment">（如同在Navicat中表中输入了数据，没有点那个小√，就是没有提交事务，</span></span><br><span class="line"><span class="comment">但是输入insert语句，就自动提交事务了）  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用的是连接池：百度java如何实行连接池的原理？  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.driver&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.url&#125;"</span> /&gt;</span>  <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.username&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.mysql.password&#125;"</span> /&gt;</span> <span class="comment">&lt;!--获取值，$&#123;属性文件里的变量名&#125;，也可以直接写值--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--加载映射文件 ，也就是含sql语句的文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--告知映射文件方式1，一个一个的配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/hs/model/SkillMapper.xml"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 告知映射文件方式2，自动扫描包内的Mapper接口与配置文件 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;package name="com.hs.model"/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-dao层"><a href="#4-dao层" class="headerlink" title="4.dao层"></a>4.dao层</h5><p>SkillDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">具体代码见第二篇</span><br></pre></td></tr></table></figure><p>SkillDaoImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">具体代码见第二篇</span><br></pre></td></tr></table></figure><h5 id="5-model层"><a href="#5-model层" class="headerlink" title="5.model层"></a>5.model层</h5><p>Skill.java(持久化类含对象的属性，get、set方法、toSting方法)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">具体代码见第二篇</span><br></pre></td></tr></table></figure><p>SkillMapper.xml(映射文件)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">具体代码见第二篇</span><br></pre></td></tr></table></figure><h5 id="6-test层"><a href="#6-test层" class="headerlink" title="6.test层"></a>6.test层</h5><p>MyBatisTest.java(写测试方法)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="7-util层-封装好的工具类、可以直接调用"><a href="#7-util层-封装好的工具类、可以直接调用" class="headerlink" title="7.util层(封装好的工具类、可以直接调用)"></a>7.util层(封装好的工具类、可以直接调用)</h5><p>MyBatisUtils.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hs.util;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 知识点：</span></span><br><span class="line"><span class="comment"> * final修饰类：不能被继承</span></span><br><span class="line"><span class="comment"> * 修饰方法：不能被重写</span></span><br><span class="line"><span class="comment"> * 修饰变量：常量不可用变，但如果是对象，对象里的值可以变</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">MyBatisUtils</span><span class="params">()</span> </span>&#123; &#125;  <span class="comment">//不允许实例化</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PATH = <span class="string">"mybatis-config.xml"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> InputStream inputStream;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123; <span class="comment">//1.静态代码块，只是加载一次</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//输入流 读文件</span></span><br><span class="line"><span class="comment">//1.读取核心配置文件</span></span><br><span class="line">inputStream = Resources.getResourceAsStream(PATH);</span><br><span class="line"><span class="comment">//2.创建SqlSession工厂(SqlSessionFactory)相当于Connection</span></span><br><span class="line">sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"加载核心配置文件失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取sqlsession</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlsession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//3.获取SqlSession 相当于执行SQL语句对象PreparedStament预处理对象</span></span><br><span class="line"><span class="comment">//***** SqlSession完成所有的持久化操作CRUD</span></span><br><span class="line"><span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关闭资源</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> sqlSession</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">closeSqlSession</span><span class="params">(SqlSession sqlSession)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (sqlSession != <span class="keyword">null</span>) &#123;</span><br><span class="line">sqlSession.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="8-日志框架配置"><a href="#8-日志框架配置" class="headerlink" title="8.日志框架配置"></a>8.日志框架配置</h5><p>log4j.properties</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 日志配置文件Global logging configuration</span><br><span class="line">log4j.rootLogger=ERROR, stdout</span><br><span class="line"># MyBatis logging configuration...</span><br><span class="line"># 如果要显示SQL语句，那么这个位置需要配置为命名空间log4j.logger.命名空间</span><br><span class="line">log4j.logger.com.hs.model.Skill=TRACE</span><br><span class="line"># Console output...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要讲什么是框架、如何学习框架、mybatis介绍、如何用idea搭建mybatis的环境(非maven)&lt;/p&gt;
    
    </summary>
    
      <category term="MyBatis" scheme="http://heshangcode.coding.me/categories/MyBatis/"/>
    
    
      <category term="MyBatis学习总结" scheme="http://heshangcode.coding.me/tags/MyBatis%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>idea导入/移除jar包方式（三种）</title>
    <link href="http://heshangcode.coding.me/2018/08/04/idea%E5%AF%BC%E5%85%A5-%E7%A7%BB%E9%99%A4jar%E5%8C%85%E6%96%B9%E5%BC%8F%EF%BC%88%E4%B8%89%E7%A7%8D%EF%BC%89/"/>
    <id>http://heshangcode.coding.me/2018/08/04/idea导入-移除jar包方式（三种）/</id>
    <published>2018-08-04T10:02:48.000Z</published>
    <updated>2018-08-04T11:02:08.265Z</updated>
    
    <content type="html"><![CDATA[<p>eclipse导入jar只需要简单的右键addxxx就可以，本篇关于idea导入jar的3种方式，用GIF展示</p><a id="more"></a><h3 id="1-添加jar包"><a href="#1-添加jar包" class="headerlink" title="1.添加jar包"></a>1.添加jar包</h3><ul><li><p>方法一：添加lib目录下的所有jar包</p><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1ftxv86n1e8g20qb0hs4qp.gif" alt=""></p></li><li><p>方法二：右键jar，选择addxxx<img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1ftxvbzzsmbg20g00lzwm4.gif" alt=""></p></li><li><p>方法三：在方法一的基础上，点击lib下面的相应的jar包</p></li></ul><h3 id="2-删除jar包"><a href="#2-删除jar包" class="headerlink" title="2.删除jar包"></a>2.删除jar包</h3><p><img src="https://ws1.sinaimg.cn/large/c31cbfc9ly1ftxvc2g7r7g20px0hyn2x.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;eclipse导入jar只需要简单的右键addxxx就可以，本篇关于idea导入jar的3种方式，用GIF展示&lt;/p&gt;
    
    </summary>
    
      <category term="idea" scheme="http://heshangcode.coding.me/categories/idea/"/>
    
    
      <category term="idea的jar添加和删除" scheme="http://heshangcode.coding.me/tags/idea%E7%9A%84jar%E6%B7%BB%E5%8A%A0%E5%92%8C%E5%88%A0%E9%99%A4/"/>
    
  </entry>
  
  <entry>
    <title>mysql忘记账号密码</title>
    <link href="http://heshangcode.coding.me/2018/07/24/mysql%E5%BF%98%E8%AE%B0%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/"/>
    <id>http://heshangcode.coding.me/2018/07/24/mysql忘记账号密码/</id>
    <published>2018-07-24T14:41:12.000Z</published>
    <updated>2018-08-05T10:41:00.658Z</updated>
    
    <content type="html"><![CDATA[<p>如果突然忘记了mysql的账号密码，或者拿着别人的电脑忘记了mysql的账号密码该咋办？？？</p><a id="more"></a><ol><li><p>打开mysql.exe和mysqld.exe所在的文件夹,复制路径地址; <img src="\images\1.png" alt=""></p></li><li><p>打开cmd命令提示符，进入上一步mysql.exe所在的文件夹; <img src="\images\2.png" alt=""></p></li><li><p>输入命令  mysqld –skip-grant-tables  回车，此时就跳过了mysql的用户验证。注意输入此命令之后<a href="https://www.baidu.com/s?wd=%E5%91%BD%E4%BB%A4%E8%A1%8C&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">命令行</a>就无法操作了，此时可以再打开一个新的<a href="https://www.baidu.com/s?wd=%E5%91%BD%E4%BB%A4%E8%A1%8C&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">命令行</a>。</p><p><font color="red" size="3">注意：</font>在输入此命令之前先在<a href="https://www.baidu.com/s?wd=%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8&amp;tn=SE_PcZhidaonwhc_ngpagmjz&amp;rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">任务管理器</a>中结束mysqld.exe进程，确保mysql服务器端已结束运行;  <img src="\images\3.png" alt=""></p></li><li><p>同样也在步骤2之后，然后直接输入mysql，不需要带任何登录参数直接回车就可以登陆上数据库; <img src="\images\4.png" alt=""></p></li><li><p>输入show databases;   可以看到所有数据库说明成功登陆; <img src="\images\5.png" alt=""></p></li><li><p>其中mysql库就是保存用户名的地方。输入 use mysql;   选择mysql数据库; <img src="\images\6.png" alt=""></p></li><li><p>输入show tables;查看所有表，会发现有个user表，这里存放的就是用户名，密码，权限等等账户信息; <img src="\images\7.png" alt=""></p></li><li><p>输入select user,host,password from user;   来查看账户信息; <img src="\images\8.png" alt=""></p></li><li><p>更改root密码，输入update user set password=password(‘root’)  where user=’root’ and host=’localhost’; <img src="\images\9.png" alt=""></p></li><li><p>再次查看账户信息，select user,host,password from user;   可以看到密码已被修改。 <img src="\images\10.png" alt=""></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果突然忘记了mysql的账号密码，或者拿着别人的电脑忘记了mysql的账号密码该咋办？？？&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://heshangcode.coding.me/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://heshangcode.coding.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>idea初体验和设置</title>
    <link href="http://heshangcode.coding.me/2018/07/22/idea%E5%88%9D%E4%BD%93%E9%AA%8C%E5%92%8C%E8%AE%BE%E7%BD%AE/"/>
    <id>http://heshangcode.coding.me/2018/07/22/idea初体验和设置/</id>
    <published>2018-07-22T12:13:03.000Z</published>
    <updated>2018-07-22T12:22:04.387Z</updated>
    
    <content type="html"><![CDATA[<h3 id="换了电脑，idea也能跑起来了，软件也需要设置很多地方"><a href="#换了电脑，idea也能跑起来了，软件也需要设置很多地方" class="headerlink" title="换了电脑，idea也能跑起来了，软件也需要设置很多地方"></a>换了电脑，idea也能跑起来了，软件也需要设置很多地方</h3><a id="more"></a><p>设置有很多啊，比如字体，UTF-8，jdk，maven，git，javaweb<br><a href="https://www.bilibili.com/video/av21735428/" target="_blank" rel="noopener">B站视频教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;换了电脑，idea也能跑起来了，软件也需要设置很多地方&quot;&gt;&lt;a href=&quot;#换了电脑，idea也能跑起来了，软件也需要设置很多地方&quot; class=&quot;headerlink&quot; title=&quot;换了电脑，idea也能跑起来了，软件也需要设置很多地方&quot;&gt;&lt;/a&gt;换了电脑，idea也能跑起来了，软件也需要设置很多地方&lt;/h3&gt;
    
    </summary>
    
      <category term="编程软件" scheme="http://heshangcode.coding.me/categories/%E7%BC%96%E7%A8%8B%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="idea" scheme="http://heshangcode.coding.me/categories/%E7%BC%96%E7%A8%8B%E8%BD%AF%E4%BB%B6/idea/"/>
    
    
      <category term="idea" scheme="http://heshangcode.coding.me/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Hero+Github搭建个人博客（加优化设置）</title>
    <link href="http://heshangcode.coding.me/2018/07/21/Hero-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BC%98%E5%8C%96%E8%AE%BE%E7%BD%AE%EF%BC%89/"/>
    <id>http://heshangcode.coding.me/2018/07/21/Hero-Github搭建个人博客（优化设置）/</id>
    <published>2018-07-21T12:56:08.000Z</published>
    <updated>2018-08-03T07:35:26.430Z</updated>
    
    <content type="html"><![CDATA[<h1 id="哈哈哈哈，自己的博客终于搭好了！！"><a href="#哈哈哈哈，自己的博客终于搭好了！！" class="headerlink" title="哈哈哈哈，自己的博客终于搭好了！！"></a>哈哈哈哈，自己的博客终于搭好了！！</h1><h4 id="还是写个博客记录一下自己如何搭建的吧"><a href="#还是写个博客记录一下自己如何搭建的吧" class="headerlink" title="还是写个博客记录一下自己如何搭建的吧"></a>还是写个博客记录一下自己如何搭建的吧</h4><a id="more"></a><p>首先来首音乐压压惊吧</p><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=448749148&auto=1&height=66"></iframe><br>&emsp;&emsp;其实自己很久之前就想搭个博客，自己写点东西，但是可能就认为搭个博客很难，自己也懒，就没有搭建，结果今天周六，想给自己休息休息，然后找了教程，用Github+hero搭建了这个博客，一个小时就可以完成的，其实并没有那么难，傻瓜式操作，搭建完之后，发现一些优缺点：</p><ul><li>重点是免费的，只需要你注册一个GitHub账号，自己一台电脑，然后就ojbk的事。</li><li>自带免费的域名，如果自己有其他需求，也可以购买其他的域名。</li><li>但是由于Github是国外的，搭建的博客服务器是在Github上，所有没有VPN访问，是很慢的</li></ul><hr><h3 id="搭建的教程"><a href="#搭建的教程" class="headerlink" title="搭建的教程"></a>搭建的教程</h3><p><a href="https://www.bilibili.com/video/av24897960/" target="_blank" rel="noopener">B站视频教程</a>&emsp;&emsp;&emsp;&emsp;<a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">知乎文字教程</a>&emsp;&emsp;&emsp;&emsp;<a href="https://www.jianshu.com/p/834d7cc0668d" target="_blank" rel="noopener">简书文字教程</a></p><h3 id="搭建成功后主题优化教程"><a href="#搭建成功后主题优化教程" class="headerlink" title="搭建成功后主题优化教程"></a>搭建成功后主题优化教程</h3><p><a href="https://www.bilibili.com/video/av17653359/" target="_blank" rel="noopener">B站视频教程</a>&emsp;&emsp;&emsp;&emsp;<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">next主题官方文档</a>&emsp;&emsp;&emsp;&emsp;<a href="https://blog.csdn.net/qq_33699981/article/details/72716951" target="_blank" rel="noopener">CSDN个性化设置</a></p><h3 id="写博客markdown语法"><a href="#写博客markdown语法" class="headerlink" title="写博客markdown语法"></a>写博客markdown语法</h3><p><a href="https://blog.csdn.net/qcx321/article/details/53780672" target="_blank" rel="noopener">CSDNmarkdown文字教程</a>&emsp;&emsp;&emsp;&emsp;<a href="https://www.jianshu.com/p/334291767cab" target="_blank" rel="noopener">简书作者教程</a>&emsp;&emsp;&emsp;&emsp;<a href="https://www.jianshu.com/p/q81RER" target="_blank" rel="noopener">简书官方教程</a></p><h3 id="发现一个比较详细的各种设置的博客"><a href="#发现一个比较详细的各种设置的博客" class="headerlink" title="发现一个比较详细的各种设置的博客"></a>发现一个比较详细的各种设置的博客</h3><p><a href="http://jmyblog.top/Hexo-GithubPages-CodingPages搭建自己的个人博客/" target="_blank" rel="noopener">博客链接</a></p><h3 id="为了解决博客部署在GitHub，访问博客速度慢的问题，把博客同时部署在coding上"><a href="#为了解决博客部署在GitHub，访问博客速度慢的问题，把博客同时部署在coding上" class="headerlink" title="为了解决博客部署在GitHub，访问博客速度慢的问题，把博客同时部署在coding上"></a>为了解决博客部署在GitHub，访问博客速度慢的问题，把博客同时部署在coding上</h3><p><a href="https://www.jianshu.com/p/25587e049d54" target="_blank" rel="noopener">简书教程</a></p><h3 id="自己总结的一些点"><a href="#自己总结的一些点" class="headerlink" title="自己总结的一些点"></a>自己总结的一些点</h3><h5 id="新建一个博客文章"><a href="#新建一个博客文章" class="headerlink" title="新建一个博客文章"></a>新建一个博客文章</h5><p>hexo n 文章名字<br>tags:<br>    -  标签名 ##注意 -后面有空格，还有些markdown语句后也要有空格，修改主题文件时，:后面也有空格<br>categories: </p><p>​    - 分类名字</p><p>​    - 子分类名字</p><h5 id="头像设置旋转"><a href="#头像设置旋转" class="headerlink" title="头像设置旋转"></a>头像设置旋转</h5><p>找到本地博客目录下themes\next\source\css\common\components\sidebar\sidebar-author.styl加入：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">padding</span>: $site-author-image-padding;</span><br><span class="line">  <span class="attribute">max-width</span>: $site-author-image-width;</span><br><span class="line">  <span class="attribute">height</span>: $site-author-image-height;</span><br><span class="line">  <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="built_in">hexo-config</span>(<span class="string">'avatar.opacity'</span>) is a <span class="string">'unit'</span> ? <span class="built_in">hexo-config</span>(<span class="string">'avatar.opacity'</span>) : <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">2s</span> all;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-author-image</span>：<span class="selector-tag">hover</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(360deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h5 id="侧栏的音乐设置"><a href="#侧栏的音乐设置" class="headerlink" title="侧栏的音乐设置"></a>侧栏的音乐设置</h5><p>在网易云音乐找到歌，然后点击生成外链播放器，复制代码到blog\themes\next\layout_macro的sidebar.swig文件，添加刚刚复制的外链代码</p><h5 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h5><p>在markdown中的三个点后加代码语言</p><h5 id="页面右上角Github图标设置"><a href="#页面右上角Github图标设置" class="headerlink" title="页面右上角Github图标设置"></a>页面右上角Github图标设置</h5><p>在这里找到想要的设置 <a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">http://tholman.com/github-corners/</a> 复制代码到themes\next\layout文件_layout.swig</p><h5 id="修改文章内链接样式"><a href="#修改文章内链接样式" class="headerlink" title="修改文章内链接样式"></a>修改文章内链接样式</h5><p>文件themes\next\source\css_common\components\post\post.styl下<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    <span class="selector-tag">color</span>: <span class="selector-tag">blue</span>;</span><br><span class="line">    <span class="selector-tag">text-decoration</span>: <span class="selector-tag">underline</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h5 id="next6-0以上文字字数和阅读时间统计"><a href="#next6-0以上文字字数和阅读时间统计" class="headerlink" title="next6.0以上文字字数和阅读时间统计"></a>next6.0以上文字字数和阅读时间统计</h5><p>见GitHub：<a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener">https://github.com/theme-next/hexo-symbols-count-time</a></p><h5 id="动态背景设置"><a href="#动态背景设置" class="headerlink" title="动态背景设置"></a>动态背景设置</h5><p>在主题文件中 搜素canvas 四个主题</p><h5 id="next6-0以上版本，动画背景无效果，见Github："><a href="#next6-0以上版本，动画背景无效果，见Github：" class="headerlink" title="next6.0以上版本，动画背景无效果，见Github："></a>next6.0以上版本，动画背景无效果，见Github：</h5><p>1.<a href="https://github.com/theme-next/theme-next-canvas-nest" target="_blank" rel="noopener">https://github.com/theme-next/theme-next-canvas-nest</a><br>2.<a href="https://github.com/theme-next/theme-next-three" target="_blank" rel="noopener">https://github.com/theme-next/theme-next-three</a><br>在主题样式里有注释说明</p><h4 id="每次本地写完博客，上传的代码"><a href="#每次本地写完博客，上传的代码" class="headerlink" title="每次本地写完博客，上传的代码"></a>每次本地写完博客，上传的代码</h4><p>hexo claen<br>hexo g<br>hexo d<br>在博客的根目录下进行</p><hr><p>大概就写这些吧，只希望自己博客搭建起来，自己要勤快的写东西！！！！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;哈哈哈哈，自己的博客终于搭好了！！&quot;&gt;&lt;a href=&quot;#哈哈哈哈，自己的博客终于搭好了！！&quot; class=&quot;headerlink&quot; title=&quot;哈哈哈哈，自己的博客终于搭好了！！&quot;&gt;&lt;/a&gt;哈哈哈哈，自己的博客终于搭好了！！&lt;/h1&gt;&lt;h4 id=&quot;还是写个博客记录一下自己如何搭建的吧&quot;&gt;&lt;a href=&quot;#还是写个博客记录一下自己如何搭建的吧&quot; class=&quot;headerlink&quot; title=&quot;还是写个博客记录一下自己如何搭建的吧&quot;&gt;&lt;/a&gt;还是写个博客记录一下自己如何搭建的吧&lt;/h4&gt;
    
    </summary>
    
      <category term="hero" scheme="http://heshangcode.coding.me/categories/hero/"/>
    
    
      <category term="hero" scheme="http://heshangcode.coding.me/tags/hero/"/>
    
      <category term="博客" scheme="http://heshangcode.coding.me/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
